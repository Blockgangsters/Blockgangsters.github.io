{"version":3,"sources":["styles/theme/colors/Colors.ts","styles/theme/responsive/settings.ts","styles/theme/responsive/breakpoint.ts","components/Navbar/coinstats/CoinStats.tsx","styles/globals/ZIndex.ts","components/Navbar/Navbar.js","components/Footer/Footer.elements.js","components/Footer/Footer.js","components/EthABI.js","components/EthFunctions.js","features/shared/ui/buttons/SubmitButton.tsx","features/bootstrapcounter/BootstrapCounter.tsx","components/Gamebar/bootstrapslots/ui/BootstrapSlots.tsx","components/Gamebar/gamenavigation/ui/GameNavigation.tsx","features/progressbar/ProgressBar.tsx","components/Gamebar/gamestats/ui/GameStats.tsx","features/shared/ui/buttons/Button.tsx","components/Navbar/metamaskconnect/MetaMaskConnect.tsx","components/Gamebar/Gamebar.js","pages/HomePage/gemsblockgang.mp4","pages/HomePage/Home.js","pages/Helppage/Helppage.elements.js","pages/Helppage/Helppage.js","pages/Whitepaper/Whitepaper.elements.js","styles/fonts/Godfather.eot","styles/fonts/Godfather.svg","styles/fonts/Godfather.ttf","styles/fonts/Godfather.woff","styles/fonts/Godfather.woff2","globalStyles.js","pages/Whitepaper/Whitepaper.js","pages/Contract/Contract.elements.js","pages/Contract/Contract.js","pages/Roadmap/Roadmap.elements.js","pages/Roadmap/Roadmap.js","pages/Tokenomics/Tokenomics.elements.js","pages/Tokenomics/Data.js","pages/Tokenomics/Tokenomics.js","pages/Admin/Admin.elements.js","pages/Admin/Admin.js","components/ScrollToTop.js","pages/Deposit/Deposit.elements.js","pages/Deposit/Deposit.js","pages/IndProtection/IndProtection.elements.js","pages/IndProtection/IndProtection.js","pages/Attackplayer/Attackplayer.elements.js","pages/Attackplayer/Attackplayer.js","pages/Crime/Crime.elements.js","pages/Crime/Crime.js","pages/Crowdfunding/Crowdfunding.elements.js","pages/Crowdfunding/Crowdfunding.js","pages/Trainstats/Trainstats.elements.js","pages/Trainstats/Trainstats.js","pages/Familycontrol/Familycontrol.elements.js","components/EthFamilyFunctions.js","pages/Familycontrol/Familycontrol.js","pages/Familyshop/Familyshop.elements.js","pages/Familyshop/Familyshop.js","pages/Attackfamily/Attackfamily.elements.js","pages/Attackfamily/Attackfamily.js","pages/Overview/Overview.elements.js","pages/Overview/Overview.js","pages/Highestlevels/Highestlevels.elements.js","pages/Highestlevels/Highestlevels.js","pages/Richestplayers/Richestplayers.elements.js","pages/Richestplayers/Richestplayers.js","pages/Statistics/Statistics.elements.js","pages/Statistics/Statistics.js","features/app-container/ui/sidebar/Sidebar.tsx","App.js","videobackground.mp4","index.js"],"names":["Colors","breakpointSetting","xl","l","m","s","breakpoint","Object","keys","map","key","reduce","prev","width","ZIndex","CoinStats","React","useContext","StateContext","gangbalance","mmConnected","mainConnected","testConnected","inGameFunds","StatsContainer","StatsItem","value","displayType","decimalSeparator","thousandSeparator","decimalScale","prefix","MMConnect","White","Red","Navbar","useState","click","setClick","gameClick","setGameClick","adminConnected","handleClick","handleGameClick","StyledNavbar","NavbarContainer","StyledMenuButton","onClick","size","color","StyledLogoLink","to","StyledLogo","src","NavMenu","StyledNavLink","GameMobileMenu","StyledGameNavigation","StyledTitle","StyledLink","StyledSubtitle","Border","Link","NavIcon","FooterContainer","FooterSubscription","FooterSubHeading","FooterSubText","SocialMedia","SocialMediaWrap","SocialLogo","SocialIcon","WebsiteRights","SocialIcons","SocialIconLink","Ulist","Uitem","Footer","href","target","tokenABI","tokenAddress","linkAddress","getERCBalance","address","a","provider","ethers","providers","Web3Provider","window","ethereum","signer","getSigner","gangContract","Contract","getAddress","balanceOf","balance","utils","formatEther","getLINKBalance","linkContract","EthBalance","getBalance","connectWallet","send","console","log","obj","connectedStatus","status","getingameFunds","undefined","attackPlayer","revenge","revengeAddress","attackRandomPlayerRequest","amount","choice","crowdFundStart","crowdFundingReturn","time","buyProtection","crimeStart","statsTraining","hireAttorney","getJailStatus","jailStatus","getAttackStatus","attackStatus","getCrowdfundStatus","crowdfundStatus","getCrimeStatus","crimeStatus","getAttackXP","attackLevel","getDefenseXP","defenseLevel","getActiveList","activePlayerList","depositFunds","withdrawFunds","receiveEth","parseEther","transferETH","getClaimed","amountVested","getVesting","getIfActive","isActive","isActivePlayer","signerAddress","i","length","SubmitButton","props","StyledSubmitButton","PrimaryBlue","BootstrapCounter","bootstrapUsed","StyledBoostrapCounter","includeComma","animateToNumber","configs","mass","tension","friction","StyledBoostrapCounterText","BootstrapSlots","popUp","setPopUp","inputValue","setInputValue","EthContext","StyledBootstrapSlots","StyledPopup","open","onClose","position","modal","closeOnDocumentClick","StyledRules","StyledRulesTitle","StyledRulesItem","StyledAmount","thousandsGroupStyle","type","allowNegative","onValueChange","parseInt","toString","ReceiveContainer","StyledContent","CounterWrapper","Popup","DarkTransparant","Green","LightGreen","GameNavigation","activePlayer","setActivePlayer","useEffect","getActiveStatus","resultActive","StyledTitleIdle","StyledLinkIdle","StyledSubtitleIdle","StyledLinkFade","ProgressBar","percentage","StyledProgressBarShell","StyledProgressBarFiller","GameStats","defenseState","attackState","jailSeconds","attorneySeconds","attackSeconds","crimeSeconds","trainSeconds","crowdfundSeconds","protectionHours","StyledGameStats","LevelsItem","Math","floor","style","Button","StyledButton","primary","SecondaryBlue","fontBig","big","MetaMaskConnect","StyledMetaMaskConnect","reaction","then","data","styled","Gamebar","StyledGamebar","Home","StyledHome","StyledPageSection","StyledSectionPart","Video","className","autoPlay","playsInline","loop","muted","gemsblockgang","StyledAudioWrapper","controls","StyledTimerText","StyledSocialIcons","StyledSocialIconLink","StyledTopLine","StyledImage","LightTransparant","Black","UnorderedList","div","p","h1","ul","ListItem","li","Hyperlink","StyledLinkWhite","Helppage","rel","PDFContainer","TextBox","PDFBox","PageWrapper","ColoredLine","backgroundColor","height","FontStyles","createGlobalStyle","Godfather","Godfather5","Godfather4","Godfather3","Godfather2","Whitepaper","numPages","setNumPages","pageNumber","setPageNumber","changePage","offset","prevPageNumber","disabled","file","onLoadSuccess","SyntaxHighlighter","registerLanguage","solidity","showLineNumbers","language","dark","customStyle","opacity","marginTop","maxwidth","InfoSec","lightBg","IconToDo","MdWatchLater","IconFinished","MdDone","IconProgress","FaGripLines","Roadmap","img","alt","start","iconStyle","background","icon","contentStyle","contentArrowStyle","borderRight","date","TokenomicsContainer","ChartWrapper","ChartTitle","TextWrapper","TopLine","Heading","AllocationContainer","PieWrapper","PieTitle","TopLinePie","PieTextWrapper","HeadingPie","dataSet","name","Team","Bootstrap","Rewards","renderActiveShape","RADIAN","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","Sector","d","stroke","r","toFixed","Tokenomics","activeIndex","setActiveIndex","onPieEnter","useCallback","_","index","AreaChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Area","stackId","PieChart","Pie","activeShape","onMouseEnter","CrimeContainer","Title","SubTitle","Admin","linkBalance","setLinkBalance","ethBalance","setEthBalance","vested","setVested","fetchEvents","tokensVested","ScrollToTop","pathname","useLocation","scrollTo","h4","Deposit","inputValueDeposit","setInputValueDeposit","inputValueWithdraw","setInputValueWithdraw","depositEvents","setDepositEvents","withdrawEvents","setWithdrawEvents","getBlockNumber","providerBlock","depositFilter","filters","tokensDeposited","queryFilter","deposit","reverse","withdrawFilter","tokensWithdrawn","withdraw","option","args","toNumber","FillBox","AttackPlayerContainer","hr","IndProtection","setAmount","placeholder","AttackDoubleContainer","Attackplayer","events","setEvents","lastAttacker","setLastAttacker","lastLoot","setLastLoot","lastResult","setLastResult","attackFilter","playerAttacked","attackMeFilter","selectedAddress","eventsMe","lastEventsMe","ChartContainer","SelectContainer","Crime","options","label","pettyChance","setPettyChance","villaChance","setVillaChance","robChance","setRobChance","hackChance","setHackChance","hijackChance","setHijackChance","crimeFilter","crimeResult","setChances","customStyles","provided","state","borderBottom","isSelected","control","container","base","flex","CustomizedLabelB","kapi","metric","viewBox","Text","dx","transform","BarChart","Bar","defaultValue","onChange","event","styles","crime","Date","now","TitleTwo","Box","h6","Styles","Table","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","Crowdfunding","crowdfundClaimable","setCrowdfundSeconds","gainsLast","setGainsLast","setChoice","crowdFundFilter","crowdFundGains","eventCrowdFund","useMemo","Header","accessor","chosen","stable","outperform","bankruptcy","parseBytes32String","Trainstats","Statstraining","LeaveButton","button","getMemberFamilyIndex","getFamilyNames","names","getFamilyOwner","owner","getFamilyRank","getFamilyBank","bank","getFamilyFees","fees","getAllFamilyMembers","members","distributeFamilyBank","getFamilyDefBonus","defBonus","getFamilyAttBonus","attBonus","upgradeFamilyItems","category","item","depositFamilyBank","EntreeFee","missionFee","nameToBytes","formatBytes32String","startFamily","organizedAttack","joinOrUprankFamily","leaveFamily","Familycontrol","familyName","setFamilyName","myFamilyName","setMyFamilyName","entreeFee","setEntreeFee","setMissionFee","familyOwner","setFamilyOwner","familyRank","setFamilyRank","familyBank","setFamilyBank","familyTransferInput","setFamilyTransferInput","receiverAddress","setReceiverAddress","allFamilyMembers","setAllFamilyMembers","familyAttackBonus","setFamilyAttackBonus","familyDefenseBonus","setFamilyDefenseBonus","myFamilyIndex","setMyFamilyIndex","familyId","familyIdNumber","FamilyNames","familyNameString","allMembers","indexOf","ItemContainer","Familyshop","optionsAttack","optionsDefense","inputValueAtt","setInputValueAttack","inputValueDef","setInputValueDefense","eventsDeposit","setEventsDeposit","familyNamesState","setFamilyNamesState","familyDepositsFilter","fundsDeposited","mask","Attackfamily","attackEvent","setAttackEvent","familyAttackFilter","organizedAttackResult","JoinButton","useSortBy","border","getSortByToggleProps","isSorted","isSortedDesc","padding","Overview","amountMembers","setAmountMembers","familyNamesString","setFamilyNamesString","datatest","setDatatest","amountFamilies","setAmountFamilies","familyEntreeFee","setFamilyEntreeFee","familyMissionFee","setFamilyMissionFee","Cell","values","col7","forEach","col1","col3","col4","col5","col6","familyFees","bankEntree","playerList","attackXPList","defenseXPList","Highestlevels","finishedFlag","setFinishedFlag","col2","stringAddress","attackItem","push","defenseItem","ingameFundList","Richestplayers","fundItem","Statistics","totalAmountPlayers","setTotalAmountPlayers","totalIngameFunds","setTotalIngameFunds","totalAmountFamilies","setTotalAmountFamilies","totalAttackXP","setTotalAttackXP","totalDefenseXP","setTotalDefenseXP","totalAtt","totalDef","totalFunds","attackInt","fundsItem","Sidebar","children","StyledSidebar","StyledSidebarMenu","createContext","App","setmmConnected","setmainConnected","settestConnected","chainConnected","setchainConnected","setadminConnected","setBalance","setgangBalance","setBootstrapUsed","setProtectionHours","fetchBalance","newETHBalance","newBalanceWei","chainId","newGANGBalance","on","location","reload","fetchBootstrap","bootstrapFilter","bootstrapBought","eventsReversed","fetchProtection","protectionFilter","boughtProtection","delta","hoursLeft","fetchConnected","detectEthereumProvider","request","method","params","result","setConnectedAccount","accounts","attorneyState","setAttorneyState","jailState","setJailState","setDefenseState","setAttackState","setInGameFunds","setJailSeconds","setAttorneySeconds","setAttackSeconds","setCrimeSeconds","setTrainSeconds","setCrowdfundClaimable","crimePopup","setCrimePopup","attackPopup","setAttackPopup","attorneyPopup","setAttorneyPopup","crowdfundPopup","setCrowdfundPopup","lastCrowdfundLoot","setLastCrowdfundLoot","lastCrimeLoot","setLastCrimeLoot","lastAttackLoot","setLastAttackLoot","lastAttackResult","setLastAttackResult","lastAttorneyResult","setLastAttorneyResult","lastAttorneyFee","setLastAttorneyFee","connectedAccount","reject","max","getTime","newXP","handleAttackXP","handleDefenseXP","handleTrained","success","player","handleAttorneyHired","from","jailStamp","successAttack","attacker","defender","loot","attackStamp","handlePlayerAttacked","initiator","succesfulCrime","totalLootCrime","crimeStamp","handleCrime","reward","handleCrowdfund","fee","timer","setTimeout","clearTimeout","Provider","basename","path","exact","component","Overflow","ReactDOM","StrictMode","videobackground","document","getElementById"],"mappings":"ySAAYA,E,mHAAAA,K,oCAAAA,E,wCAAAA,E,gBAAAA,E,gBAAAA,E,gBAAAA,E,qBAAAA,E,cAAAA,E,sBAAAA,E,wBAAAA,E,kBAAAA,M,0BCECC,EAGR,CACJC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,EAAG,KCLSC,EAAaC,OAAOC,KAAKP,GACpCQ,KAAI,SAACC,GAAD,MAAS,CAACA,EAAKT,EAAkBS,OACrCC,QACA,SAACC,EAAD,0BAAQF,EAAR,KAAaG,EAAb,wBAAC,eACGD,GADJ,eAEOF,EAFP,6BAEmCG,EAFnC,WAIA,I,eCLK,ICNKC,EDMCC,EAAY,WAErB,MAAkFC,IAAMC,WAAWC,IAAnG,mBAASC,EAAT,KAAsBC,EAAtB,KAAmCC,EAAnC,KAAkDC,EAAlD,KAAmEC,EAAnE,KAEA,OACI,mCACKH,IAAiC,IAAlBC,EACZ,eAACG,EAAD,WACI,cAACC,EAAD,UACI,cAAC,IAAD,CACIC,MAAOP,EACPQ,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,EACdC,OAAQ,6BAPD,mBAWf,cAACN,EAAD,UACI,cAAC,IAAD,CACIC,MAAOH,EACPI,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,EACdC,OAAQ,8BAPD,qBAZC,sBAqBC,CAAEX,IAAiC,IAAlBC,IAA4C,IAAlBC,EAC5D,eAACE,EAAD,WACI,cAACC,EAAD,UACI,cAAC,IAAD,CACIC,MAAOP,EACPQ,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,EACdC,OAAQ,6BAPD,mBAWf,cAACN,EAAD,UACI,cAAC,IAAD,CACIC,MAAOH,EACPI,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,EACdC,OAAQ,8BAPD,mBASf,cAACC,EAAD,+BAAe,sBArBC,sBAsBCZ,EAAc,cAACY,EAAD,+BAAe,oBAAmD,SAMnHP,EAAS,0GAKTD,EAAc,kGAGPxB,EAAOiC,MAHA,wNAqBdD,EAAS,8MAWFhC,EAAOkC,IAXL,4D,SCzFHpB,O,4BAAAA,I,uBAAAA,I,uBAAAA,I,sBAAAA,M,KCaZ,IAqEeqB,EArEA,WAEX,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCxB,IAAMC,WAAWC,IAApCuB,EAAjB,oBACMC,EAAc,kBAAMJ,GAAUD,IAE9BM,EAAkB,kBAAMH,GAAcD,IAI5C,OACI,cAACK,EAAD,UACI,eAACC,EAAD,WACI,cAACC,EAAD,CAAkBC,QAASJ,EAA3B,SACKJ,EACK,cAAC,IAAD,CAASS,KAAM,GAAIC,MAAM,UACzB,cAAC,IAAD,CAAcD,KAAM,GAAIC,MAAM,YAExC,eAACC,EAAD,CAAgBC,GAAG,IAAIJ,QAVhB,WAHWT,GAAS,GAEXE,GAAa,IAW7B,UACI,cAACY,EAAD,CAAYC,IAAI,gCADpB,oBAMA,eAACC,EAAD,CAASP,QAASL,EAAaL,MAAOA,EAAtC,UACI,cAACkB,EAAD,CAAeJ,GAAG,IAAlB,kBACA,cAACI,EAAD,CAAeJ,GAAG,YAAlB,mBACA,cAACI,EAAD,CAAeJ,GAAG,cAAlB,wBACA,cAACI,EAAD,CAAeJ,GAAG,YAAlB,sBACA,cAACI,EAAD,CAAeJ,GAAG,WAAlB,qBACA,cAACI,EAAD,CAAeJ,GAAG,cAAlB,wBACCV,GAAkB,cAACc,EAAD,CAAeJ,GAAG,SAAlB,wBACnB,cAAC,EAAD,OAIJ,cAACK,EAAD,CAAgBT,QAASJ,EAAiBJ,UAAWA,EAArD,SACI,eAACkB,EAAD,WACI,cAACC,EAAD,6BACA,cAACC,EAAD,CAAYR,GAAG,WAAf,8BACA,cAACS,EAAD,0BACA,cAACD,EAAD,CAAYR,GAAG,iBAAf,4BACA,cAACQ,EAAD,CAAYR,GAAG,gBAAf,6BACA,cAACQ,EAAD,CAAYR,GAAG,SAAf,+BACA,cAACQ,EAAD,CAAYR,GAAG,gBAAf,0BACA,cAACQ,EAAD,CAAYR,GAAG,cAAf,yBACA,cAACS,EAAD,uBACA,cAACD,EAAD,CAAYR,GAAG,iBAAf,iCACA,cAACQ,EAAD,CAAYR,GAAG,cAAf,yBACA,cAACQ,EAAD,CAAYR,GAAG,gBAAf,2BACA,cAACQ,EAAD,CAAYR,GAAG,YAAf,yBACA,cAACS,EAAD,6BACA,cAACD,EAAD,CAAYR,GAAG,kBAAf,6BACA,cAACQ,EAAD,CAAYR,GAAG,iBAAf,4BACA,cAACQ,EAAD,CAAYR,GAAG,cAAf,6BAIR,cAACL,EAAD,CAAkBC,QAASL,EAA3B,SACKL,EACK,cAAC,IAAD,CAASW,KAAM,GAAIC,MAAM,UACzB,cAAC,IAAD,CAAQD,KAAM,GAAIC,MAAM,kBAU5CL,EAAY,uOAYK9B,EAAOqB,OAZZ,4BAaqBnC,EAAO6D,OAb5B,KAgBZN,EAAgB,YAAOO,IAAP,uBAAH,SACE9D,EAAOiC,MADT,4DAKL3B,EAAWH,EALN,sDAuBN0C,GAVG,sLAUY,kJAOdvC,EAAWH,EAPG,OAYf+C,EAAiB,YAAOY,IAAP,sBAAH,+IASbxD,EAAWH,EATE,qBAcdiD,EAAU,wDAEjB9C,EAAWH,EAFM,kEAUV2C,EAAgB,kEAENhC,EAAOiD,QAFD,mCAKfzD,EAAWH,EALI,mBAUhBmD,EAAO,+JASG,qBAAGjB,OAAuB,SAT7B,uBAaN/B,EAAWH,EAbL,yIA0BPqD,EAAc,+JASJ,qBAAGjB,WAA+B,SAT9B,uBAabjC,EAAWH,EAbE,mBAmBduD,EAAW,6GAMXE,EAAc,gHAMdD,EAAa,YAAOG,IAAP,sBAAH,6IAYVL,EAAoB,uGC3O1B,IAAMO,EAAe,mNAStB1D,EAAWF,EATW,sBAcf6D,EAAkB,gLASlBC,EAAgB,oLAKhBC,EAAa,gFAiBbC,GAZe,2CAYJ,kFAIXC,EAAe,gKAQtB/D,EAAWF,EARW,yBAafkE,EAAa,YAAOR,IAAP,qBAAH,4IAUVS,EAAU,wIAQVC,EAAa,iGAKbC,EAAW,4IAOXC,EAAc,0FAKdC,EAAK,+GAMLC,EAAK,2FC9DHC,GAzCA,WACX,OACI,eAACb,EAAD,WACI,eAACC,EAAD,WACI,cAACC,EAAD,4DAGA,cAACC,EAAD,+DAKJ,cAACC,EAAD,UACI,eAACC,EAAD,WACI,eAACC,EAAD,CAAYnB,GAAG,IAAf,UACI,cAACoB,EAAD,CAAYlB,IAAI,8BAA8BF,GAAG,MADrD,oBAIA,cAACqB,EAAD,UAAe,eAACG,EAAD,WAAO,cAACC,EAAD,4DAClB,cAACA,EAAD,sDAIJ,eAACH,EAAD,WACI,cAACC,EAAD,CAAgBI,KAAK,8BAA8BC,OAAO,SAAS,aAAW,UAA9E,SACI,cAAC,IAAD,MAEJ,cAACL,EAAD,CAAgBI,KAAK,qCAAqCC,OAAO,SAAS,aAAW,UAArF,SACI,cAAC,IAAD,MAEJ,cAACL,EAAD,CAAgBI,KAAK,yCAAyCC,OAAO,SAAS,aAAW,WAAzF,SACI,cAAC,IAAD,kB,iBC82CXC,GAj5CA,CAChB,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,QACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,UACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,QACR,KAAQ,YAGV,KAAQ,WACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,OACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,KACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,QACR,KAAQ,YAGV,KAAQ,WACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,oBACR,KAAQ,YAGV,KAAQ,gBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,OACR,KAAQ,YAGV,KAAQ,kBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,GACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,YACR,KAAQ,YAGV,KAAQ,mBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,OAChB,KAAQ,eACR,KAAQ,QAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,YACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,aACR,KAAQ,YAGV,KAAQ,cACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,gBACR,KAAQ,YAGV,KAAQ,iBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,eACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,OACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,QACR,KAAQ,YAGV,KAAQ,gBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,cACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,iBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,cACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,mBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,WACR,KAAQ,YAGV,KAAQ,eACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,cACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,iBACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,iBACR,KAAQ,YAGV,KAAQ,iBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,gBACR,KAAQ,YAGV,KAAQ,gBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,iBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,cACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,mBACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,gBACR,KAAQ,YAGV,KAAQ,wBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,OAChB,KAAQ,gBACR,KAAQ,QAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,WACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,WACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,OACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,cACR,KAAQ,YAGV,KAAQ,iBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,QACR,KAAQ,YAGV,KAAQ,eACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,gBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,kBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,WACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,eACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,kBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,UACR,KAAQ,WAET,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,QACR,KAAQ,YAGV,KAAQ,eACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,mBACR,KAAQ,SAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,UACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,UACR,QAAW,CACV,CACC,aAAgB,OAChB,KAAQ,GACR,KAAQ,SAGV,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,UACR,KAAQ,YAGV,KAAQ,4BACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,OACR,KAAQ,YAGV,KAAQ,gBACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,QACR,KAAQ,YAGV,KAAQ,aACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,qBACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,iBACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,UACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,kBACR,KAAQ,YAGV,KAAQ,oBACR,QAAW,CACV,CACC,aAAgB,OAChB,KAAQ,GACR,KAAQ,SAGV,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,oBACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,eACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,aACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,uBACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,aACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,eACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,UACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,aACR,KAAQ,YAGV,KAAQ,oBACR,QAAW,CACV,CACC,aAAgB,OAChB,KAAQ,GACR,KAAQ,SAGV,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,kBACR,KAAQ,YAGV,KAAQ,qBACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,OACR,KAAQ,YAGV,KAAQ,cACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,kBACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,YACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,aACR,KAAQ,YAGV,KAAQ,uBACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,aACR,QAAW,GACX,gBAAmB,UACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,eACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,OACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,YACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,aACR,KAAQ,YAGV,KAAQ,cACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,gBACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,YACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,WACR,QAAW,CACV,CACC,aAAgB,OAChB,KAAQ,GACR,KAAQ,SAGV,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,kBAChB,KAAQ,KACR,KAAQ,YAGV,KAAQ,cACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,YACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,eACR,QAAW,CACV,CACC,aAAgB,OAChB,KAAQ,GACR,KAAQ,SAGV,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,WACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,OACR,KAAQ,YAGV,KAAQ,qBACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,SACR,KAAQ,YAGV,KAAQ,gBACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAET,CACC,OAAU,GACV,gBAAmB,aACnB,KAAQ,eAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,KAAQ,gBACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,QACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,UACR,KAAQ,YAGV,KAAQ,YACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,UACR,KAAQ,YAGV,KAAQ,YACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,WACR,QAAW,CACV,CACC,aAAgB,QAChB,KAAQ,GACR,KAAQ,UAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,gBACR,QAAW,CACV,CACC,aAAgB,YAChB,KAAQ,GACR,KAAQ,cAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,aACR,KAAQ,YAGV,KAAQ,sBACR,QAAW,CACV,CACC,aAAgB,YAChB,KAAQ,GACR,KAAQ,cAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,kBACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,UACR,KAAQ,YAGV,KAAQ,cACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,aACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,iBACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,qBACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,UACR,KAAQ,YAGV,KAAQ,eACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,QACR,KAAQ,YAGV,KAAQ,oBACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,QACR,KAAQ,YAGV,KAAQ,gBACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,QACR,KAAQ,YAGV,KAAQ,oBACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,QACR,KAAQ,YAGV,KAAQ,gBACR,QAAW,CACV,CACC,aAAgB,aAChB,KAAQ,GACR,KAAQ,eAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,iBACR,QAAW,CACV,CACC,aAAgB,YAChB,KAAQ,GACR,KAAQ,cAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,aACR,KAAQ,YAGV,KAAQ,iBACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,QACR,KAAQ,YAGV,KAAQ,gBACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,gBACR,KAAQ,YAGV,KAAQ,iBACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,gBACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,QACR,KAAQ,YAGV,KAAQ,uBACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,OACR,QAAW,CACV,CACC,aAAgB,SAChB,KAAQ,GACR,KAAQ,WAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,QACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,eACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,CACT,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,KAAQ,SACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,OACR,KAAQ,WAET,CACC,aAAgB,UAChB,KAAQ,iBACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,SACR,QAAW,CACV,CACC,aAAgB,SAChB,KAAQ,GACR,KAAQ,WAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,cACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,YAET,CACC,OAAU,GACV,KAAQ,eACR,QAAW,CACV,CACC,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGV,gBAAmB,OACnB,KAAQ,aC34CGC,GAAe,6CACfC,GAAc,6CAEpB,SAAeC,GAAtB,mC,8CAAO,WAA6BC,GAA7B,qBAAAC,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH5D,KAIeE,EAJf,SAI4CF,EAAOI,aAJnD,wCAI4BC,UAJ5B,8BAIDC,EAJC,OAKLA,EAAUX,KAAOY,MAAMC,YAAYF,GAL9B,kBAMEA,GANF,6C,sBASA,SAAeG,KAAtB,gC,8CAAO,kCAAAhB,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBS,EAAe,IAAIf,KAAOQ,SAASb,GAAaF,GAAUY,GAH3D,SAIeU,EAAaL,UAAUhB,IAJtC,cAIDiB,EAJC,OAKLA,EAAUX,KAAOY,MAAMC,YAAYF,GAL9B,kBAMEA,GANF,4C,sBASA,SAAeK,GAAtB,mC,8CAAO,WAA0BnB,GAA1B,eAAAC,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UADrD,kBAEEL,EAASkB,WAAWpB,IAFtB,4C,sBAKA,IAAMqB,GAAa,uCAAG,8BAAApB,EAAA,0DAEvBK,OAAOC,SAFgB,0CAIDD,OAAOC,SAASe,KAAK,uBAJpB,cAIjBtB,EAJiB,OAKvBuB,QAAQC,IAAI,qCACZD,QAAQC,IAAIxB,GACNyB,EAAM,CACVC,iBAAiB,EACjBC,OAAQ,GACR3B,QAASA,GAEXuB,QAAQC,IAAI,gBAAiBC,EAAG,iBAZT,kBAahBA,GAbgB,2DAehB,CACLC,iBAAiB,EACjBC,OAAQ,wEAjBa,yDAqBlB,CACLD,iBAAiB,EACjBC,OAAQ,gGAvBe,0DAAH,qDA4BnB,SAAeC,GAAtB,mC,8CAAO,WAA8B5B,GAA9B,qBAAAC,EAAA,yDACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,QACjDqB,IAAZ7B,EAJC,gCAKaQ,EAAOI,aALpB,OAKHZ,EALG,8BAOeU,EAAakB,eAAe5B,GAP3C,cAODc,EAPC,yBAQEA,GARF,6C,sBAWA,SAAegB,GAAtB,mC,8CAAO,WAA4BC,GAA5B,qBAAA9B,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAG/DwB,GADc,IAAZD,EACe,6CAEAvB,EAAOI,aARrB,SAUCF,EAAauB,0BAA0BD,GAVxC,4C,oEAaA,WAA8BE,EAAQC,GAAtC,mBAAAlC,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH5D,SAICE,EAAa0B,eAAeF,EAAQC,GAJrC,4C,oEAOA,gCAAAlC,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH5D,SAICE,EAAa2B,qBAJd,4C,oEAOA,WAA6BC,GAA7B,mBAAArC,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH5D,SAICE,EAAa6B,cAAcD,GAJ5B,4C,oEAQA,WAAqBH,GAArB,mBAAAlC,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH5D,SAICE,EAAa8B,WAAWL,GAJzB,4C,oEAOA,WAA6BA,GAA7B,mBAAAlC,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH5D,SAICE,EAAa+B,cAAcN,GAJ5B,4C,sBAOA,SAAeO,KAAtB,gC,8CAAO,gCAAAzC,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH5D,SAICE,EAAagC,eAJd,4C,sBAOA,SAAeC,KAAtB,gC,8CAAO,kCAAA1C,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH5D,SAIkBE,EAAaiC,gBAJ/B,cAIDC,EAJC,yBAKEA,GALF,4C,oEAQA,kCAAA3C,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH5D,SAIoBE,EAAamC,kBAJjC,cAIDC,EAJC,yBAKEA,GALF,4C,oEAQA,kCAAA7C,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH5D,SAIuBE,EAAaqC,qBAJpC,cAIDC,EAJC,yBAKEA,GALF,4C,oEAQA,kCAAA/C,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH5D,SAImBE,EAAauC,iBAJhC,cAIDC,EAJC,yBAKEA,GALF,4C,sBAQA,SAAeC,GAAtB,mC,8CAAO,WAA2BnD,GAA3B,qBAAAC,EAAA,yDACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,QACjDqB,IAAZ7B,EAJC,gCAKaQ,EAAOI,aALpB,OAKHZ,EALG,8BAOmBU,EAAayC,YAAYnD,GAP5C,cAODoD,EAPC,yBAQEA,GARF,6C,sBAWA,SAAeC,GAAtB,mC,8CAAO,WAA4BrD,GAA5B,qBAAAC,EAAA,yDACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,QACjDqB,IAAZ7B,EAJC,gCAKaQ,EAAOI,aALpB,OAKHZ,EALG,8BAOoBU,EAAa2C,aAAarD,GAP9C,cAODsD,EAPC,yBAQEA,GARF,6C,sBAWA,SAAeC,KAAtB,gC,8CAAO,kCAAAtD,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH5D,SAIwBE,EAAa6C,gBAJrC,cAIDC,EAJC,yBAKEA,GALF,4C,oEASA,WAA4BtB,GAA5B,mBAAAjC,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YACpBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH1D,SAICE,EAAa+C,aAAavB,GAJ3B,4C,oEAQA,WAA6BA,GAA7B,mBAAAjC,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YACpBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH1D,SAICE,EAAagD,cAAcxB,GAJ5B,4C,oEAOA,WAA0BA,GAA1B,mBAAAjC,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YACpBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH1D,SAICE,EAAaiD,WAAW,EAAG,CAAErH,MAAO6D,KAAOY,MAAM6C,WAAW1B,KAJ7D,4C,oEAOA,gCAAAjC,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YACpBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH1D,SAICE,EAAamD,YAAYrD,EAAOI,cAJjC,4C,sBAOA,SAAekD,KAAtB,gC,8CAAO,kCAAA7D,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH5D,SAIoBE,EAAaoD,aAJjC,cAIDC,EAJC,yBAKEA,GALF,4C,oEAQA,gCAAA9D,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH5D,SAICE,EAAasD,aAJd,4C,sBAOA,SAAeC,KAAtB,gC,8CAAO,wCAAAhE,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH5D,SAIgBE,EAAa6C,gBAJ7B,cAIDW,EAJC,OAKDC,GAAiB,EALhB,SAMqB3D,EAAOI,aAN5B,OAOL,IADIwD,EANC,OAOIC,EAAI,EAAGA,EAAIH,EAASI,OAAQD,IAC/BH,EAASG,KAAOD,IAClBD,GAAiB,GAThB,yBAYEA,GAZF,6C,sBC5NA,IAAMI,GAAe,SAACC,GACzB,OACI,cAACC,GAAD,eAAwBD,KAI1BC,GAAkB,2EAEN7J,EAAO8J,YAFD,0N,+BCTjB,IAAMC,GAAmB,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,cAC/B,OACI,eAACC,GAAD,WACI,cAAC,KAAD,CACIC,cAAY,EACZC,gBAAiBH,EACjBI,QAAS,CACL,CAAEC,KAAM,EAAGC,QAAS,IAAKC,SAAU,QAG3C,cAACC,GAAD,gDAKNP,GAAqB,6EAIrBO,GAAyB,2CCfxB,IAAMC,GAAqB,WAE9B,MAA0BzJ,IAAMoB,UAAS,GAAzC,mBAAOsI,EAAP,KAAcC,EAAd,KACA,EAAoC3J,IAAMoB,SAAS,GAAnD,mBAAOwI,EAAP,KAAmBC,EAAnB,KAEA,EAA6D7J,IAAMC,WAAW6J,IAAnCd,EAA3C,sBAEA,OACI,eAACe,GAAD,WACI,cAACC,GAAD,CAAaC,KAAMP,EAAOQ,QAAS,kBAAMP,GAAS,IAAQQ,SAAS,gBAAgBC,OAAK,EAACC,sBAAoB,EAA7G,SACK,kBACG,qCACI,eAACC,GAAD,WACI,cAACC,GAAD,qBACA,cAACC,GAAD,4EACA,cAACA,GAAD,iCACA,cAACA,GAAD,8CAEJ,cAACC,GAAD,sBACA,cAAC,IAAD,CACIC,oBAAoB,WACpBhK,MAAOkJ,EACP7I,OAAO,UACPH,iBAAiB,IACjBD,YAAY,QACZgK,KAAK,OACL9J,mBAAmB,EACnB+J,eAAe,EACfC,cAAe,YAAgB,IAAbnK,EAAY,EAAZA,MACdmJ,EAAciB,SAASpK,OAE/B,cAAC,GAAD,CAAcqB,QAAS,WAAQ4H,GAAS,GH+JzD,SAAP,4BG/JwE5B,CAAW6B,EAAWmB,aAAtE,0BACA,eAACC,GAAD,uCACwB,cAAC,IAAD,CAChBtK,MAAoB,IAAbkJ,EACPjJ,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,aAKlC,eAACmK,GAAD,WACI,cAAC,GAAD,wCACA,cAACC,GAAD,UACI,cAAC,GAAD,CAAkBlC,cAAeA,aAU/Ce,GAAoB,sGAKpBC,GAAc,YAAOmB,KAAP,qBAAH,iHAUKnM,EAAOoM,gBAVZ,+JAuBXH,GAAa,0SAebX,GAAW,8HAOXC,GAAgB,uJAQhBC,GAAe,uJAQfC,GAAY,8EAIZO,GAAgB,2HAOhBE,GAAc,+GAMdxI,GAAW,iFAIF,0EAEG1D,EAAOqM,MAFV,4EAQOrM,EAAOsM,WARd,MCpJR,IAAMC,GAAiB,WAC1B,MAAwCnK,oBAAS,GAAjD,mBAAOoK,EAAP,KAAqBC,EAArB,KACA,EAA8CzL,IAAMC,WAAWC,IAA/D,mBAAWE,EAAX,KAAwBC,EAAxB,KAYA,OAVAqL,qBAAU,WACN,GAAItL,GAAeC,EAAe,CAC9B,IAAMsL,EAAe,uCAAG,4BAAAtH,EAAA,sEACKgE,KADL,OAChBuD,EADgB,OAEpBH,EAAgBG,GAFI,2CAAH,qDAIrBD,OAEL,CAACvL,EAAaC,IAGb,cAAC,GAAD,WACsB,IAAjBmL,EAAyB,qCACtB,cAACK,GAAD,8BACA,cAACC,GAAD,CAAgB3J,GAAG,WAAnB,8BACA,cAAC4J,GAAD,0BACA,cAACD,GAAD,CAAgB3J,GAAG,iBAAnB,4BACA,cAAC2J,GAAD,CAAgB3J,GAAG,gBAAnB,6BACA,cAAC2J,GAAD,CAAgB3J,GAAG,SAAnB,+BACA,cAAC2J,GAAD,CAAgB3J,GAAG,gBAAnB,0BACA,cAAC6J,GAAD,CAAgB7J,GAAG,cAAnB,mCACA,cAAC4J,GAAD,uBACA,cAACD,GAAD,CAAgB3J,GAAG,iBAAnB,iCACA,cAAC2J,GAAD,CAAgB3J,GAAG,cAAnB,yBACA,cAAC2J,GAAD,CAAgB3J,GAAG,gBAAnB,2BACA,cAAC2J,GAAD,CAAgB3J,GAAG,YAAnB,yBACA,cAAC4J,GAAD,6BACA,cAACD,GAAD,CAAgB3J,GAAG,kBAAnB,6BACA,cAAC2J,GAAD,CAAgB3J,GAAG,iBAAnB,4BACA,cAAC2J,GAAD,CAAgB3J,GAAG,cAAnB,wBAjBsB,OAmBtB,qCACI,cAAC,GAAD,8BACA,cAAC,GAAD,CAAYA,GAAG,WAAf,8BACA,cAAC,GAAD,0BACA,cAAC,GAAD,CAAYA,GAAG,iBAAf,4BACA,cAAC,GAAD,CAAYA,GAAG,gBAAf,6BACA,cAAC,GAAD,CAAYA,GAAG,SAAf,+BACA,cAAC,GAAD,CAAYA,GAAG,gBAAf,0BACA,cAAC,GAAD,CAAYA,GAAG,cAAf,yBACA,cAAC,GAAD,uBACA,cAAC,GAAD,CAAYA,GAAG,iBAAf,iCACA,cAAC,GAAD,CAAYA,GAAG,cAAf,yBACA,cAAC,GAAD,CAAYA,GAAG,gBAAf,2BACA,cAAC,GAAD,CAAYA,GAAG,YAAf,yBACA,cAAC,GAAD,6BACA,cAAC,GAAD,CAAYA,GAAG,kBAAf,6BACA,cAAC,GAAD,CAAYA,GAAG,iBAAf,4BACA,cAAC,GAAD,CAAYA,GAAG,cAAf,wBAjBJ,UAsBHM,GAAoB,uGAKpBC,GAAW,6GAMXE,GAAc,gHAUdD,IAHU,4CAGG,YAAOG,IAAP,sBAAH,8IAYVkJ,GAAiB,YAAOlJ,IAAP,sBAAH,wpBA0BdgJ,GAAiB,YAAOhJ,IAAP,sBAAH,6IAYd+I,GAAe,4GAMfE,GAAkB,+GCtIxB,IAAME,GAAc,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,WAC1B,OACI,cAACC,GAAD,UACI,cAACC,GAAD,CAAyBF,WAAYA,OAK3CC,GAAsB,kGAKtBC,GAAuB,wEAGvB,SAACxD,GAAD,iCACWA,EAAMsD,WADjB,cAHuB,KCXtB,I,GAAMG,GAAY,WAErB,MAAiLrM,IAAMC,WAAW6J,IAAlM,oBAAOwC,EAAP,KAAuBC,EAAvB,KAA8ChM,EAA9C,KAA6DiM,EAA7D,MAA0EC,EAA1E,MAA2FC,EAA3F,MAA0GC,EAA1G,MAAwHC,EAAxH,MAAsIC,EAAtI,MAA8JC,EAA9J,MACA,OACI,cAACC,GAAD,UACI,eAACC,GAAD,6BACoBC,KAAKC,MAAMZ,EAAe,KAAS,cAAC,GAAD,CAAaJ,WAAaI,EAAe,IAAW,MAD3G,iBAEmBW,KAAKC,MAAMX,EAAc,KAF5C,IAEsD,cAAC,GAAD,CAAaL,WAAYK,EAAc,IAAU,MAClF,IAAhBC,EAAoB,uBAAOW,MAAO,CAAElL,MAAO,SAAvB,2BAA0D,wBAAOkL,MAAO,CAAElL,MAAO,OAAvB,sBAA0CuK,EAA1C,OAAgE,uBAC1H,IAApBC,EAAwB,uBAAOU,MAAO,CAAElL,MAAO,SAAvB,kCAAiE,wBAAOkL,MAAO,CAAElL,MAAO,OAAvB,6BAAiDwK,EAAjD,QAA4E,uBACrKC,EAAgB,EAAI,wBAAOS,MAAO,CAAElL,MAAO,OAAvB,+BAAmDyK,EAAnD,OAA6E,uBAAOS,MAAO,CAAElL,MAAO,SAAvB,+BAA4D,uBAC7J0K,EAAe,EAAI,wBAAOQ,MAAO,CAAElL,MAAO,OAAvB,8BAAkD0K,EAAlD,OAA2E,uBAAOQ,MAAO,CAAElL,MAAO,SAAvB,8BAA2D,uBACzJ2K,EAAe,EAAI,wBAAOO,MAAO,CAAElL,MAAO,OAAvB,iCAAqD2K,EAArD,OAA8E,uBAAOO,MAAO,CAAElL,MAAO,SAAvB,iCAA8D,uBAC/J4K,EAAmB,EAAI,wBAAOM,MAAO,CAAElL,MAAO,OAAvB,mCAAuD4K,EAAvD,OAAoF,uBAAOM,MAAO,CAAElL,MAAO,SAAvB,kCAA+D,uBAC1K6K,EAAkB,EAAI,wBAAOK,MAAO,CAAElL,MAAO,SAAvB,cAAoC6K,EAApC,wBAAiF,uBAAOK,MAAO,CAAElL,MAAO,UAAvB,0BAAwD,uBAEhK,cAAC,IAAD,CACIvB,MAAOH,EACPI,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,EACdC,OAAQ,mBAOtBgM,GAAe,uGAKfC,GAAU,gG,mBC7BHI,GAAS,SAACxE,GACnB,OACI,cAACyE,GAAD,eAAkBzE,KAIpByE,GAAY,2EAEA,qBAAGC,QAAyBtO,EAAO8J,YAAc9J,EAAOuO,gBAFxD,6DAMD,qBAAGC,QAAyB,OAAS,SANpC,kHAcI,qBAAGF,QAAyBtO,EAAO8J,YAAc9J,EAAOuO,gBAd5D,KAiBZjO,EAAWH,EAjBC,aAkBC,qBAAGsO,IAAiB,YAAc,cAlBnC,eAmBG,qBAAGD,QAAyB,OAAS,SAnBxC,MCZLE,GAAkB,WAE3B,MAAiC1N,IAAMC,WAAWC,IAAvCE,EAAX,oBAWA,OACI,oCACMA,GACE,cAACuN,GAAD,CAAuBxL,GAAG,WAA1B,SACI,cAAC,GAAD,CAAQmL,SAAO,EAACvL,QAbR,WACpB,IAAM6L,EAAWnI,KACjBE,QAAQC,IAAIgI,EAASC,MAAK,SAACC,IACM,IAAzBA,EAAKhI,iBACLH,QAAQC,IAAIkI,EAAK/H,aASb,mCAQd4H,GAAwBI,aAAOjL,IAAPiL,CAAH,4ICzB3B,IAYeC,GAZC,WACZ,OACI,eAACC,GAAD,WACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QAQNA,GAAa,+I,qBCrBJ,OAA0B,0CCUzC,I,oCAwEeC,GAxEF,WAGT,MAA4DlO,IAAMC,WAAW6J,IAAlCd,EAA3C,sBAEA,OACI,eAACmF,GAAD,WACI,eAACC,GAAD,WACI,eAACC,GAAD,WACI,cAAC,GAAD,gCACA,cAAC,GAAD,iEAGJ,cAACA,GAAD,UACI,cAACC,GAAD,CAAOC,UAAU,WAAWC,UAAQ,EAACC,aAAW,EAACC,MAAI,EAACC,OAAK,EAA3D,SACI,wBAAQtM,IAAKuM,GAAejE,KAAK,kBAGzC,cAACkE,GAAD,UACI,cAAC,KAAD,CACIxM,IAAI,UACJyM,UAAQ,MAGhB,cAACC,GAAD,uEACA,eAACC,GAAD,WACI,cAACC,GAAD,CAAsBnL,KAAK,8BAA8BC,OAAO,SAAS,aAAW,UAApF,SACI,cAAC,IAAD,MAEJ,cAACkL,GAAD,CAAsBnL,KAAK,qCAAqCC,OAAO,SAAS,aAAW,UAA3F,SACI,cAAC,IAAD,MAEJ,cAACkL,GAAD,CAAsBnL,KAAK,yCAAyCC,OAAO,SAAS,aAAW,WAA/F,SACI,cAAC,IAAD,YAIZ,eAACqK,GAAD,WACI,eAACC,GAAD,WACI,cAACa,GAAD,gCACA,cAAC,GAAD,kCACA,cAAC,GAAD,wIAEJ,cAACb,GAAD,UACI,cAACc,GAAD,CAAa9M,IAAI,yCAGzB,eAAC+L,GAAD,WACI,eAACC,GAAD,WACI,cAACa,GAAD,gCACA,cAAC,GAAD,4DACA,cAAC,GAAD,6FAEJ,cAACb,GAAD,UACI,cAACc,GAAD,CAAa9M,IAAI,8BAGzB,eAAC+L,GAAD,WACI,eAACC,GAAD,WACI,cAACa,GAAD,gCACA,cAAC,GAAD,+CACA,cAAC,GAAD,8HACA,cAAC,GAAD,CAAkBlG,cAAeA,OAErC,cAACqF,GAAD,UACI,cAACc,GAAD,CAAa9M,IAAI,6BAS/B8L,GAAU,uGAKVC,GAAiB,uHAOEpP,EAAOiC,MAPT,eAQOjC,EAAOoM,gBARd,sBAWL9L,EAAWF,EAXN,kGAmBWJ,EAAOoQ,iBAnBlB,UAoBEpQ,EAAOqQ,MApBT,MAwBjBhB,GAAiB,8EAIL/O,EAAWH,EAJN,yCAUjB4P,GAAe,+GAMfC,GAAiB,0IAOjBC,GAAoB,6HAOpBE,GAAW,kEAIC7P,EAAWH,EAJZ,wBASX+P,GAAa,0IAObxM,GAAW,oHAMXE,GAAc,oHAMd0L,GAAK,6HAMLO,GAAkB,yH,SC/HXS,IA9CsBvB,KAAOwB,IAAV,yRAeNxB,KAAOyB,EAAV,iHAQIzB,KAAOwB,IAAV,sUAgBDxB,KAAO0B,GAAV,2GAOS1B,KAAO2B,GAAV,qDAIbC,GAAW5B,KAAO6B,GAAV,mDAoCRC,IA/BsB9B,KAAOwB,IAAV,gTAWFxB,KAAOwB,IAAV,uVAcDxB,KAAO0B,GAAV,2GAME1B,KAAO1J,EAAV,qHAaTyL,IALiB/B,KAAO1J,EAAV,4FAKI0J,aAAOjL,IAAPiL,CAAH,mGCjG5B,I,qBAsCegC,GAtCE,WAEf,OAEE,eAAC,GAAD,WACE,cAAC,GAAD,UAEE,eAAC,GAAD,WAEE,cAAC,GAAD,oCAFF,+TAIE,eAACT,GAAD,WACE,cAACK,GAAD,UAAU,cAACE,GAAD,CAAW/L,KAAK,yCAAyCC,OAAO,SAASiM,IAAI,sBAA7E,wBACV,cAACL,GAAD,UAAU,cAACE,GAAD,CAAW/L,KAAK,8CAA8CC,OAAO,SAASiM,IAAI,sBAAlF,uBACV,cAACL,GAAD,UAAU,cAACE,GAAD,CAAW/L,KAAK,8EAA8EC,OAAO,SAASiM,IAAI,sBAAlH,0BAPd,8FAS6F,cAACH,GAAD,CAAW/L,KAAK,2CAA2CC,OAAO,SAASiM,IAAI,sBAA/E,4BAT7F,gDAU6C,cAACH,GAAD,CAAW/L,KAAK,6BAA6BC,OAAO,SAASiM,IAAI,sBAAjE,2BAV7C,wEAUkO,cAACH,GAAD,CAAW/L,KAAK,0CAA0CC,OAAO,SAASiM,IAAI,sBAA9E,0BAVlO,kGAWsD,cAACH,GAAD,CAAW/L,KAAK,6GAA6GC,OAAO,SAASiM,IAAI,sBAAjJ,qCAXtD,SAeF,cAAC,GAAD,UACE,eAAC,GAAD,WAEE,cAAC,GAAD,4CAFF,wGAGuG,cAACF,GAAD,CAAiBhM,KAAK,sCAAsCkM,IAAI,sBAAhE,8BAHvG,+LAKgH,cAACF,GAAD,CAAiBhM,KAAK,yCAAyCkM,IAAI,sBAAnE,wBALhH,4MAiBF7B,GAAU,4CAGVC,GAAiB,sHAKVpP,EAAOiC,MALG,eAMLjC,EAAOoM,gBANF,qCAUjB9L,EAAWF,EAVM,gGAkBDJ,EAAOoQ,iBAlBN,UAmBNpQ,EAAOqQ,MAnBD,MAuBjBhB,GAAiB,gFAIjB/O,EAAWH,EAJM,uCAWjBuD,GAAW,oHChFJuN,GAAelC,KAAOwB,IAAV,kTAcZW,GAAUnC,KAAOwB,IAAV,mFAKPY,GAASpC,KAAOwB,IAAV,mF,UCtBJ,OAA0B,sCCA1B,OAA0B,sCCA1B,OAA0B,sCCA1B,OAA0B,uCCA1B,OAA0B,wCCU5Ba,GAAW,6FAINpR,EAAOoM,gBAJD,IAMlB9L,EAAWF,EANO,gCAaXiR,GAAc,SAAC,GAAD,IAAGpO,EAAH,EAAGA,MAAH,OACvB,oBACIkL,MAAO,CACHlL,MAAOA,EACPqO,gBAAiBrO,EACjBsO,OAAQ,MAKPC,GAAaC,aAAH,gWAGRC,GACDC,GACAC,GACAC,GACAC,IC4BCC,GA9DI,WACjB,MAAgC3P,mBAAS,MAAzC,mBAAO4P,EAAP,KAAiBC,EAAjB,KACA,EAAoC7P,mBAAS,GAA7C,mBAAO8P,EAAP,KAAmBC,EAAnB,KAOA,SAASC,EAAWC,GAClBF,GAAc,SAAAG,GAAc,OAAIA,EAAiBD,KAYnD,OAEE,cAACjB,GAAD,UACE,cAACH,GAAD,UACE,qCACE,eAACC,GAAD,WACE,sCACQgB,IAAeF,EAAW,EAAI,MADtC,OACiDA,GAAY,QAE7D,wBACErG,KAAK,SACL4G,SAAUL,GAAc,EACxBnP,QArBZ,WACEqP,GAAY,IAiBJ,sBAOA,wBACEzG,KAAK,SACL4G,SAAUL,GAAcF,EACxBjP,QAxBZ,WACEqP,EAAW,IAoBH,qBAQF,cAACjB,GAAD,UACE,cAAC,KAAD,CACEqB,KAAK,iBACLC,cA7CZ,YAA8C,IAAbT,EAAY,EAAZA,SAC/BC,EAAYD,GACZG,EAAc,IAyCN,SAIE,cAAC,KAAD,CAAMD,WAAYA,gBCtDnBjB,GAAelC,KAAOwB,IAAV,sT,IAcFxB,KAAOwB,IAAV,mFAKExB,KAAOwB,IAAV,mF,4BCfnBmC,KAAkBC,iBAAiB,WAAYC,MAG/C,I,sDA+2Be7M,GA/2BE,WA81Bb,OAEE,cAACqL,GAAD,UACE,cAAC,GAAD,UACA,cAAC,KAAD,CAAmByB,gBAAgB,OAAOC,SAAS,WAAW3E,MAAO4E,KAAMC,YAAa,CAC5E1B,gBAAiB,cACjB2B,QAAS,IACTC,UAAW,QACXC,SAAU,QAJtB,SAj2BY,0yiD,UCRPC,GAAUrE,KAAOwB,IAAV,oKAKN,qBAAE8C,QAAwB,wBAA0B,wBAOrDC,GAAWvE,aAAOwE,KAAPxE,CAAH,2HAMRyE,GAAezE,aAAO0E,KAAP1E,CAAH,2HAMZ2E,GAAe3E,aAAO4E,IAAP5E,CAAH,2H,SCoIV6E,I,OA1JC,SAAC,GAAwB,EAAtBC,IAAsB,EAAjBC,IAAiB,EAAZC,MAC3B,OAEE,cAACX,GAAD,UACE,eAAC,oBAAD,WAGE,cAAC,2BAAD,CACEY,UAAW,CAAEC,WAAY,mBAAoBhR,MAAO,QACpDiR,KAAM,OAGR,cAAC,2BAAD,CACE3E,UAAU,kCACV4E,aAAc,CAAEF,WAAY,UAAWhR,MAAO,QAC9CmR,kBAAmB,CAAEC,YAAa,qBAClCC,KAAK,UACLN,UAAW,CAAEC,WAAY,UAAWhR,MAAO,QAC3CiR,KAAM,cAACV,GAAD,IANR,SAQE,oBAAIjE,UAAU,kCAAd,sDAWF,eAAC,2BAAD,CACEA,UAAU,kCACV4E,aAAc,CAAEF,WAAY,UAAWhR,MAAO,QAC9CmR,kBAAmB,CAAEC,YAAa,qBAClCC,KAAK,UACLN,UAAW,CAAEC,WAAY,UAAWhR,MAAO,QAC3CiR,KAAM,cAACV,GAAD,IANR,UAQE,oBAAIjE,UAAU,kCAAd,yCACA,sFAKF,eAAC,2BAAD,CACEA,UAAU,kCACV4E,aAAc,CAAEF,WAAY,UAAWhR,MAAO,QAC9CmR,kBAAmB,CAAEC,YAAa,qBAClCC,KAAK,UACLN,UAAW,CAAEC,WAAY,UAAWhR,MAAO,QAC3CiR,KAAM,cAACV,GAAD,IANR,UAQE,oBAAIjE,UAAU,kCAAd,4CACA,wJAGF,eAAC,2BAAD,CACEA,UAAU,kCACV4E,aAAc,CAAEF,WAAY,UAAWhR,MAAO,QAC9CmR,kBAAmB,CAAEC,YAAa,qBAClCC,KAAK,UACLN,UAAW,CAAEC,WAAY,UAAWhR,MAAO,QAC3CiR,KAAM,cAACV,GAAD,IANR,UAQE,oBAAIjE,UAAU,kCAAd,wCACA,qTAGF,eAAC,2BAAD,CACEA,UAAU,kCACV4E,aAAc,CAAEF,WAAY,UAAWhR,MAAO,QAC9CmR,kBAAmB,CAAEC,YAAa,qBAClCC,KAAK,UACLN,UAAW,CAAEC,WAAY,UAAWhR,MAAO,QAC3CiR,KAAM,cAACV,GAAD,IANR,UAQE,oBAAIjE,UAAU,kCAAd,4CACA,mHAIF,eAAC,2BAAD,CACEA,UAAU,kCACV4E,aAAc,CAAEF,WAAY,UAAWhR,MAAO,QAC9CmR,kBAAmB,CAAEC,YAAa,qBAClCC,KAAK,cACLN,UAAW,CAAEC,WAAY,UAAWhR,MAAO,QAC3CiR,KAAM,cAACV,GAAD,IANR,UAQE,oBAAIjE,UAAU,kCAAd,mDACA,mLAGF,eAAC,2BAAD,CACEA,UAAU,kCACV4E,aAAc,CAAEF,WAAY,UAAWhR,MAAO,QAC9CmR,kBAAmB,CAAEC,YAAa,qBAClCC,KAAK,eACLN,UAAW,CAAEC,WAAY,UAAWhR,MAAO,QAC3CiR,KAAM,cAACV,GAAD,IANR,UAQE,oBAAIjE,UAAU,kCAAd,4BACA,0LAIF,eAAC,2BAAD,CACEA,UAAU,kCACV4E,aAAc,CAAEF,WAAY,UAAWhR,MAAO,QAC9CmR,kBAAmB,CAAEC,YAAa,qBAClCC,KAAK,UACLN,UAAW,CAAEC,WAAY,UAAWhR,MAAO,QAC3CiR,KAAM,cAACR,GAAD,IANR,UAQE,oBAAInE,UAAU,kCAAd,uDACA,uLAIF,eAAC,2BAAD,CACEA,UAAU,kCACV4E,aAAc,CAAEF,WAAY,UAAWhR,MAAO,QAC9CmR,kBAAmB,CAAEC,YAAa,qBAClCC,KAAK,aACLN,UAAW,CAAEC,WAAY,UAAWhR,MAAO,QAC3CiR,KAAM,cAACZ,GAAD,IANR,UAQE,oBAAI/D,UAAU,kCAAd,yCACA,iUCnIGgF,GAAsBxF,KAAOwB,IAAV,kRAanBiE,GAAezF,KAAOwB,IAAV,qNASZkE,GAAa1F,KAAOwB,IAAV,iHAQVmE,GAAc3F,KAAOwB,IAAV,wUAgBXoE,GAAU5F,KAAOwB,IAAV,mIAQPqE,GAAU7F,KAAO0B,GAAV,2GAOPH,GAAgBvB,KAAO2B,GAAV,oDAIbC,GAAW5B,KAAO6B,GAAV,mDAKRiE,GAAsB9F,KAAOwB,IAAV,sTAWnBuE,GAAa/F,KAAOwB,IAAV,qNASVwE,GAAWhG,KAAOwB,IAAV,4GAORyE,GAAajG,KAAOwB,IAAV,yJAYV0E,GAAiBlG,KAAOwB,IAAV,gVAcd2E,GAAanG,KAAO0B,GAAV,2GC9HV0E,GAAU,CACrB,CACEC,KAAM,SACNC,KAAM,EACNC,UAAW,EACXC,QAAS,GAEX,CACEH,KAAM,SACNC,KAAM,GACNC,UAAW,IACXC,QAAS,IAEX,CACEH,KAAM,SACNC,KAAM,GACNC,UAAW,IACXC,QAAS,KAEX,CACIH,KAAM,SACNC,KAAM,IACNC,UAAW,IACXC,QAAS,KAEX,CACEH,KAAM,SACNC,KAAM,IACNC,UAAW,IACXC,QAAS,KAEX,CACEH,KAAM,SACNC,KAAM,IACNC,UAAW,IACXC,QAAS,KAEX,CACEH,KAAM,SACNC,KAAM,IACNC,UAAW,IACXC,QAAS,KAEX,CACEH,KAAM,SACNC,KAAM,IACNC,UAAW,IACXC,QAAS,KAEX,CACIH,KAAM,SACNC,KAAM,IACNC,UAAW,IACXC,QAAS,KAEX,CACEH,KAAM,SACNC,KAAM,IACNC,UAAW,IACXC,QAAS,MAIJzG,GAAO,CAClB,CAAEsG,KAAM,YAAa1T,MAAO,IAC5B,CAAE0T,KAAM,OAAQ1T,MAAO,IACvB,CAAE0T,KAAM,SAAU1T,MAAO,IACzB,CAAE0T,KAAM,SAAU1T,MAAO,IACzB,CAAE0T,KAAM,qBAAsB1T,MAAO,K,0FC9DjC8T,GAAoB,SAAC5L,GACzB,IAAM6L,EAASxH,KAAKyH,GAAK,IAEvBC,EAWE/L,EAXF+L,GACAC,EAUEhM,EAVFgM,GACAC,EASEjM,EATFiM,SACAC,EAQElM,EARFkM,YACAC,EAOEnM,EAPFmM,YACAC,EAMEpM,EANFoM,WACAC,EAKErM,EALFqM,SACAC,EAIEtM,EAJFsM,KACAC,EAGEvM,EAHFuM,QACAC,EAEExM,EAFFwM,QAGIC,EAAMpI,KAAKoI,KAAKZ,EAASI,GACzBS,EAAMrI,KAAKqI,KAAKb,EAASI,GACzBU,EAAKZ,GAAMI,EAAc,IAAMO,EAC/BE,EAAKZ,GAAMG,EAAc,IAAMM,EAC/BI,EAAKd,GAAMI,EAAc,IAAMO,EAC/BI,EAAKd,GAAMG,EAAc,IAAMM,EAC/BM,EAAKF,EAA2B,IAArBH,GAAO,EAAI,GAAK,GAC3BM,EAAKF,EACLG,EAAaP,GAAO,EAAI,QAAU,MAExC,OACE,8BACE,sBAAMQ,EAAGnB,EAAIoB,EAAGnB,EAAIoB,GAAI,EAAGH,WAAW,SAASX,KAAMA,EAArD,SACGC,EAAQf,OAEX,cAAC6B,GAAA,EAAD,CACEtB,GAAIA,EACJC,GAAIA,EACJE,YAAaA,EACbC,YAAaA,EACbC,WAAYA,EACZC,SAAUA,EACVC,KAAMA,IAER,cAACe,GAAA,EAAD,CACEtB,GAAIA,EACJC,GAAIA,EACJI,WAAYA,EACZC,SAAUA,EACVH,YAAaC,EAAc,EAC3BA,YAAaA,EAAc,GAC3BG,KAAMA,IAER,sBACEgB,EAAC,WAAMX,EAAN,YAAYC,EAAZ,YAAkBC,EAAlB,YAAwBC,EAAxB,YAA8BC,EAA9B,YAAoCC,GACrCO,OAAQjB,EACRA,KAAK,SAEP,wBAAQP,GAAIgB,EAAIf,GAAIgB,EAAIQ,EAAG,EAAGlB,KAAMA,EAAMiB,OAAO,SACjD,sBACEL,EAAGH,EAA2B,IAArBL,GAAO,EAAI,GAAK,GACzBS,EAAGH,EACHC,WAAYA,EACZX,KAAK,OAJP,oBAKgB,IAAVE,GAAeiB,QAAQ,GAL7B,WA8FSC,GAnFI,WACjB,MAAsClV,mBAAS,GAA/C,mBAAOmV,EAAP,KAAoBC,EAApB,KACMC,EAAaC,uBACjB,SAACC,EAAGC,GACFJ,EAAeI,KAEjB,CAACJ,IAED,OAEE,eAACpG,GAAD,WACE,eAAC,GAAD,WAEE,eAACoD,GAAD,WACE,cAAC,GAAD,UAAY,cAACG,GAAD,oDACV,eAACkD,GAAA,EAAD,CACEhX,MAAO,IACP0Q,OAAQ,IACRzC,KAAMqG,GACN2C,OAAQ,CACNC,IAAK,GACLC,MAAO,GACPC,KAAM,EACNC,OAAQ,GARZ,UAWE,cAACC,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,GAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAM9M,KAAK,WAAW2M,QAAQ,OAAOI,QAAQ,IAAIvB,OAAO,UAAUjB,KAAK,YACvE,cAACuC,GAAA,EAAD,CAAM9M,KAAK,WAAW2M,QAAQ,YAAYI,QAAQ,IAAIvB,OAAO,UAAUjB,KAAK,YAC5E,cAACuC,GAAA,EAAD,CAAM9M,KAAK,WAAW2M,QAAQ,UAAUI,QAAQ,IAAIvB,OAAO,UAAUjB,KAAK,kBAGhF,eAAC,GAAD,WAEE,cAAC,GAAD,2BAFF,uOAIE,eAAC,GAAD,WACE,cAAC,GAAD,kHACA,cAAC,GAAD,uKACA,cAAC,GAAD,sDAMN,eAAC,GAAD,WACE,eAAC,GAAD,WAEE,cAAC,GAAD,8BACE,eAAC,GAAD,WACE,cAAC,GAAD,6BACA,cAAC,GAAD,uDACA,cAAC,GAAD,iEACA,cAAC,GAAD,mCACA,cAAC,GAAD,4CAGN,eAACpB,GAAD,WACE,cAACC,GAAD,UAAU,cAACC,GAAD,uDACV,cAAC2D,GAAA,EAAD,CAAU9X,MAAO,IAAK0Q,OAAQ,IAA9B,SACE,cAACqH,GAAA,EAAD,CACErB,YAAaA,EACbsB,YAAarD,GACb1G,KAAMA,GACN6G,GAAI,IACJC,GAAI,IACJE,YAAa,GACbC,YAAa,IACbG,KAAK,UACLoC,QAAQ,QACRQ,aAAcrB,gBC7IvB,I,SAAMsB,GAAc,sPAedC,GAAK,2RAgBLC,GAAQ,0RCmDNC,GA1ED,WAEV,MAAgClY,IAAMC,WAAWC,IAAtCE,EAAX,oBACA,EAAsCJ,IAAMoB,SAAS,GAArD,mBAAO+W,EAAP,KAAoBC,EAApB,KACA,EAAoCpY,IAAMoB,SAAS,GAAnD,mBAAOiX,EAAP,KAAmBC,EAAnB,KACA,EAA4BtY,IAAMoB,SAAS,GAA3C,mBAAOmX,EAAP,KAAeC,EAAf,KAuBA,OArBA9M,qBAAU,WACR,IAAM+M,EAAW,uCAAG,kCAAApU,EAAA,yDAClBsB,QAAQC,IAAI,YAAaxF,IACrBA,EAFc,wBAGVkE,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UAH1C,SAIML,EAASkB,WAAWvB,IAJ1B,cAIViB,EAJU,OAMhBS,QAAQC,IAAI,sBAAwBrB,KAAOY,MAAMC,YAAaF,IAC9DoT,EAAc/T,KAAOY,MAAMC,YAAaF,IAPxB,UAQUG,KARV,eAQV8S,EARU,OAShBC,EAAeD,GATC,UAUWjQ,KAVX,QAUVwQ,EAVU,OAWhBF,EAAUjU,KAAOY,MAAMC,YAAasT,IAXpB,4CAAH,qDAcfD,MACD,CAACrY,IAMA,eAACgQ,GAAD,WACE,cAAC4H,GAAD,2BAA2B,uBAC3B,eAACC,GAAD,2CAAuC,cAAC,IAAD,CACrCvX,MAAOyX,EACPvX,iBAAiB,IACjBD,YAAY,OACZG,aAAc,EACd6J,KAAK,SALP,UAKuB,cAAC,IAAD,CACjBjK,MAAOyX,EAAY,KACnBvX,iBAAiB,IACjBD,YAAY,OACZG,aAAc,EACd6J,KAAK,SAVX,eAYE,eAACsN,GAAD,4CAAwC,cAAC,IAAD,CACxCvX,MAAO2X,EACPzX,iBAAiB,IACjBD,YAAY,OACZG,aAAc,EACd6J,KAAK,SACL,cAAC,GAAD,CAAc5I,QAAS,Y9BoJ5B,WAAP,yB8BpJ2CkG,IAA/B,yBANA,OAQA,eAACgQ,GAAD,mCAA+B,cAAC,IAAD,CAC/BvX,MAAO6X,EACP3X,iBAAiB,IACjBD,YAAY,OACZG,aAAc,EACd6J,KAAK,SACL,cAAC,GAAD,CAAc5I,QAAS,Y9B2J5B,WAAP,yB8B3J2CqG,IAA/B,4BANA,OAUA,cAAC2P,GAAD,IAMA,cAAC,GAAD,CAAa9V,MAAM,YC3EhB,SAAS0W,KACpB,IAAOC,EAAYC,cAAZD,SAKP,OAJAlN,qBAAU,WACNhH,OAAOoU,SAAS,EAAE,KACnB,CAACF,IAEG,KCNJ,IAAMb,GAAiBhK,KAAOwB,IAAV,kSAedyI,GAAQjK,KAAO0B,GAAV,6UAgBLwI,GAAWlK,KAAOgL,GAAV,4UCrBrB,I,kEAoHeC,GApHC,WACZ,MAAkDhZ,IAAMoB,WAAxD,mBAAO6X,EAAP,KAA0BC,EAA1B,KACA,EAAoDlZ,IAAMoB,WAA1D,mBAAO+X,EAAP,KAA2BC,EAA3B,KAUA,EAA0ChY,mBAAS,IAAnD,mBAAOiY,EAAP,KAAsBC,EAAtB,KACA,EAA4ClY,mBAAS,IAArD,mBAAOmY,EAAP,KAAuBC,EAAvB,KACA,EAA+BxZ,IAAMC,WAAWC,IAArCE,EAAX,oBA8BA,OA5BAsL,qBAAU,WACN,IAAM+M,EAAW,uCAAG,0CAAApU,EAAA,yDAChBsB,QAAQC,IAAI,YAAaxF,IACrBA,EAFY,wBAGNkE,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GALrD,SAMcN,EAASmV,iBANvB,cAMRC,EANQ,OASRC,EAAgB7U,EAAa8U,QAAQC,gBAAgB,KAAM,MATnD,UAUQ/U,EAAagV,YAAYH,EAAeD,EAAgB,IAAOA,GAVvE,eAURK,EAVQ,OAWZT,EAAiBS,EAAQC,WAGrBC,EAAiBnV,EAAa8U,QAAQM,gBAAgB,KAAM,MAdpD,UAeSpV,EAAagV,YAAYG,EAAgBP,EAAgB,IAAOA,GAfzE,QAeRS,EAfQ,OAgBZX,EAAkBW,EAASH,WAhBf,4CAAH,qDAmBjBvB,MACD,CAACrY,IAQA,eAACgQ,GAAD,WACI,cAAC,GAAD,+CAA0C,uBAC1C,cAAC,GAAD,sFACA,eAAC,GAAD,uBACa,cAAC,IAAD,CACL1F,oBAAoB,WACpBhK,MAAOyY,EACPpY,OAAO,SACPH,iBAAiB,IACjBD,YAAY,QACZgK,KAAK,OACL9J,mBAAmB,EACnB+J,eAAe,EACfC,cAAe,YAAgB,IAAbnK,EAAY,EAAZA,MAjD9B0Y,EAkDwC1Y,MAGhC,cAAC,GAAD,CAAcqB,QAAS,YjCuHhC,SAAP,4BiCvH+C+F,CAAcqR,IAA7C,6BAIJ,eAAC,GAAD,sBACY,cAAC,IAAD,CACJzO,oBAAoB,WACpBhK,MAAOuY,EACPlY,OAAO,SACPH,iBAAiB,IACjBD,YAAY,QACZgK,KAAK,OACL9J,mBAAmB,EACnB+J,eAAe,EACfC,cAAe,YAAgB,IAAbnK,EAAY,EAAZA,MAvE9BwY,EAwEuCxY,MAG/B,cAAC,GAAD,CAAcqB,QAAS,YjC6FhC,SAAP,4BiC7F+C8F,CAAaoR,IAA5C,6BAGHM,EAAe7Q,OAAS,GAAK2Q,EAAc3Q,OAAS,EACjD,cAAC,GAAD,CAAazG,MAAM,QAAW,KAEjCsX,EAAe7Q,OAAS,EAErB,qCACI,oBAAIyE,MAAO,CAAElL,MAAO,SAApB,iCACCsX,EAAe9Z,KAAI,SAAC2a,EAAQxD,GAAT,OAChB,qBAAgBzJ,MAAO,CAAElL,MAAO,SAAhC,cAA6CmY,EAAOC,KAAK,GAAzD,mBAAuE,cAAC,IAAD,CACnE3Z,MAAO0Z,EAAOC,KAAK,GAAGC,WACtB3Z,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,MALT8V,SAMJ,KAChByC,EAAc3Q,OAAS,EAEpB,qCACI,oBAAIyE,MAAO,CAAElL,MAAO,SAApB,8BACCoX,EAAc5Z,KAAI,SAAC2a,EAAQxD,GAAT,OACf,qBAAgBzJ,MAAO,CAAElL,MAAO,SAAhC,cAA6CmY,EAAOC,KAAK,GAAzD,oBAAwE,cAAC,IAAD,CACpE3Z,MAAO0Z,EAAOC,KAAK,GAAGC,WACtB3Z,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,MALT8V,SAMJ,KACjB,cAAC2D,GAAD,QAQNA,GAAO,2FChIAC,GAAwBzM,KAAOwB,IAAV,iSAsBrByI,IAROjK,KAAO0M,GAAV,uHAQI1M,KAAO0B,GAAV,8UAgBLwI,GAAWlK,KAAOgL,GAAV,4UCsBN2B,GAvDO,WAClB,MAA+B1a,IAAMC,WAAWC,IAArCE,EAAX,oBACA,EAA+CJ,IAAMC,WAAW6J,IAAzCvJ,EAAvB,qBAEA,EAA4Ba,qBAA5B,mBAAOkF,EAAP,KAAeqU,EAAf,KAaA,OAXAjP,qBAAU,WACN,IAAM+M,EAAW,uCAAG,sBAAApU,EAAA,iGAAH,qDAOjBoU,MACD,CAACrY,IAGA,eAACgQ,GAAD,WACI,cAAC,GAAD,+CAA+C,uBAC/C,cAAC,GAAD,0DACA,eAACoK,GAAD,0BAGI,cAAC,IAAD,CACI9P,oBAAoB,WACpB3J,OAAO,GACPJ,YAAY,QACZE,mBAAmB,EACnB+J,eAAe,EACfgQ,YAAa,eACb/P,cAAe,YAAgB,IAAbnK,EAAY,EAAZA,MAAcia,EAAUja,IAC1CA,MAAO4F,IAKVA,EAAS,EAAI,+DAAoB,cAAC,IAAD,CAC9B5F,MAAOH,EAAc,IAAM+F,EAC3B3F,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,IALJ,OAKgB,KAE9B,cAAC,GAAD,CAAciB,QAAS,YnC0ChC,SAAP,4BmC1C+C4E,CAAcL,IAA7C,kCAGJ,cAAC,GAAD,CAAarE,MAAM,YCrDlB4Y,GAAwB9M,KAAOwB,IAAV,mTAerBiL,GAAwBzM,KAAOwB,IAAV,yQAsBrByI,IAROjK,KAAO0M,GAAV,uHAQI1M,KAAO0B,GAAV,8UAgBLwI,GAAWlK,KAAOgL,GAAV,6UCyCN+B,GAtFM,WACjB,MAA+B9a,IAAMC,WAAWC,IAArCE,EAAX,oBACA,EAA2EJ,IAAMC,WAAW6J,IAA5F,oBAA2B0C,EAA3B,MAAwCC,EAAxC,MAAyDC,EAAzD,MAEA,EAA4BtL,mBAAS,IAArC,mBAAO2Z,EAAP,KAAeC,EAAf,KACA,EAAwC5Z,qBAAxC,mBAAO6Z,EAAP,KAAqBC,EAArB,KACA,EAAgC9Z,qBAAhC,mBAAO+Z,EAAP,KAAiBC,EAAjB,KACA,EAAoCha,qBAApC,mBAAOia,EAAP,KAAmBC,EAAnB,KA2BA,OAzBA5P,qBAAU,WACN,IAAM+M,EAAW,uCAAG,4CAAApU,EAAA,0DACZjE,EADY,wBAENkE,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAJrD,SAKcN,EAASmV,iBALvB,cAKRC,EALQ,OAOR6B,EAAezW,EAAa8U,QAAQ4B,eAAe,KAAM,KAAM,KAAM,KAAM,MAC3EC,EAAiB3W,EAAa8U,QAAQ4B,eAAe,KAAM,KAAMjX,KAAOY,MAAMH,WAAWN,OAAOC,SAAS+W,iBAAkB,KAAM,MARzH,UASO5W,EAAagV,YAAYyB,EAAc7B,EAAgB,IAAOA,GATrE,eASRqB,EATQ,iBAUSjW,EAAagV,YAAY2B,EAAgB/B,EAAgB,IAAOA,GAVzE,QAURiC,EAVQ,OAYgB,KADxBC,EAAeD,EAAS3B,WACXtR,SACbwS,EAAgBU,EAAa,GAAGvB,KAAK,IACrCe,EAAYQ,EAAa,GAAGvB,KAAK,GAAGC,YACpCgB,EAAcM,EAAa,GAAGvB,KAAK,KAEvCW,EAAUD,EAAOf,WAjBL,4CAAH,qDAqBjBvB,MACD,CAACrY,IAGA,eAACgQ,GAAD,WACI,cAAC,GAAD,qEAEA,eAACyK,GAAD,WAEI,eAAC,GAAD,WACI,cAAC,GAAD,qCAAqC,uBAElB,IAAlBnO,GAAuC,IAAhBF,EAAoB,cAAC,GAAD,CAAczK,QAAS,WAAQmE,GAAa,+CAA5C,4BAA6H,KACxKsG,EAAc,GAAyB,IAApBC,EAAwB,cAAC,GAAD,CAAc1K,QAAS,WAAQ+E,MAA/B,4BAAiF,QAKjI,eAAC,GAAD,WACI,cAAC,GAAD,kCAAkC,wBAClB,IAAfuU,EAAsB,qCAAGJ,EAAH,gBAAwB,cAAC,IAAD,CAC3Cva,MAAOya,EACPxa,YAAa,OACbE,mBAAmB,EACnBC,aAAc,IAJK,OAIO,4BACX,IAAlB4L,GAAuC,IAAhBF,GAAoC,IAAf6O,EAAsB,cAAC,GAAD,CAActZ,QAAS,WAAQmE,GAAa,SAA5C,4BAC/D,cAAC,GAAD,CAAcnE,QAAS,WAAQmE,GAAa,SAA5C,oCAAgG,KACnGsG,EAAc,GAAyB,IAApBC,EAAwB,cAAC,GAAD,CAAc1K,QAAS,WAAQ+E,MAA/B,4BAAiF,WAKrI,cAAC,GAAD,CAAa7E,MAAM,QACnB,oBAAIkL,MAAO,CAAElL,MAAO,SAApB,6BACC8Y,EAAOtb,KAAI,SAAC2a,EAAQxD,GAAT,OACRA,EAAQ,EAAI,MAA2B,IAAnBwD,EAAOC,KAAK,GAC5B,qBAAgBlN,MAAO,CAAElL,MAAO,SAAhC,oBAAmD2U,EAAnD,OAA8DwD,EAAOC,KAAK,GAA1E,aAAwFD,EAAOC,KAAK,GAApG,yBAAwH,cAAC,IAAD,CACpH3Z,MAAO0Z,EAAOC,KAAK,GAAGC,WACtB3Z,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,MALT8V,GAMT,qBAAIzJ,MAAO,CAAElL,MAAO,OAApB,oBAAqC2U,EAArC,QAAiDwD,EAAOC,KAAK,GAA7D,qBAAmFD,EAAOC,KAAK,GAA/F,oBAA8G,cAAC,IAAD,CAC1G3Z,MAAO0Z,EAAOC,KAAK,GAAGC,WACtB3Z,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,cCrFzBiX,GAAiBhK,KAAOwB,IAAV,oSAedsM,GAAiB9N,KAAOwB,IAAV,iTAgBduM,GAAkB/N,KAAOwB,IAAV,kUAiBfyI,GAAQjK,KAAO0B,GAAV,6UAiBLwI,GAAWlK,KAAOgL,GAAV,0P,sCCuINgD,GA/LD,WACV,MAA+B/b,IAAMC,WAAWC,IAArCE,EAAX,oBACA,EAAuEJ,IAAMC,WAAW6J,IAAxF,oBAAWyC,EAAX,KAAsCC,EAAtC,MAAuDG,EAAvD,MAEMqP,EAAU,CACZ,CAAEtb,MAAO,IAAKub,MAAO,eACrB,CAAEvb,MAAO,IAAKub,MAAO,sBACrB,CAAEvb,MAAO,IAAKub,MAAO,iBACrB,CAAEvb,MAAO,IAAKub,MAAO,qCACrB,CAAEvb,MAAO,IAAKub,MAAO,yBAIzB,EAAoCjc,IAAMoB,SAAS4a,EAAQ,GAAGtb,OAA9D,mBAAOkJ,EAAP,KAAmBC,EAAnB,KACA,EAAsC7J,IAAMoB,SAAS,GAArD,mBAAO8a,EAAP,KAAoBC,EAApB,KACA,EAAsCnc,IAAMoB,SAAS,GAArD,mBAAOgb,EAAP,KAAoBC,EAApB,KACA,EAAkCrc,IAAMoB,SAAS,GAAjD,mBAAOkb,EAAP,KAAkBC,EAAlB,KACA,EAAoCvc,IAAMoB,SAAS,GAAnD,mBAAOob,EAAP,KAAmBC,EAAnB,KACA,EAAwCzc,IAAMoB,SAAS,GAAvD,mBAAOsb,EAAP,KAAqBC,EAArB,KAOA,EAA4Bvb,mBAAS,IAArC,mBAAO2Z,EAAP,KAAeC,EAAf,KACAtP,qBAAU,WACN,IAAM+M,EAAW,uCAAG,sCAAApU,EAAA,0DACZjE,EADY,wBAENkE,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAJrD,SAKcN,EAASmV,iBALvB,cAKRC,EALQ,OAQRkD,EAAc9X,EAAa8U,QAAQiD,YAAYnY,OAAOC,SAAS+W,gBAAiB,KAAM,KAAM,MARpF,UASO5W,EAAagV,YAAY8C,EAAalD,EAAgB,IAAOA,GATpE,QASRqB,EATQ,OAUZC,EAAUD,EAAOf,WACjBrU,QAAQC,IAAI,eAAgBmV,GAXhB,4CAAH,qDAcjBtC,MACD,CAACrY,IAEJsL,qBAAU,WACN,IAAMoR,EAAU,uCAAG,sBAAAzY,EAAA,sDACXjE,IAEA+b,EAAe,IAAM,YAAM,GAAQ5P,EAAc,IAAU,IAAO,EAAI,EAAI,IAAM,YAAM,GAAQA,EAAc,IAAU,KACtH8P,EAAe,IAAM,YAAM,GAAQ9P,EAAc,IAAU,IAAO,EAAI,EAAI,IAAM,YAAM,GAAQA,EAAc,IAAU,KACtHgQ,EAAa,IAAM,YAAM,IAAQhQ,EAAc,IAAU,IAAM,IAAM,EAAI,EAAI,IAAM,YAAM,IAAQA,EAAc,IAAU,IAAM,KAC/HkQ,EAAc,IAAM,YAAM,IAAQlQ,EAAc,IAAU,IAAM,KAChEoQ,EAAgB,IAAM,YAAM,IAAQpQ,EAAc,IAAU,IAAM,MAPvD,2CAAH,qDAiBhBuQ,MACD,CAACvQ,EAAanM,IAEjB,IAAM0N,EAAO,CACT,CACIsG,KAAM,QACN1T,MAAqB,IAAdwb,GAEX,CACI9H,KAAM,QACN1T,MAAqB,IAAd0b,GAEX,CACIhI,KAAM,UACN1T,MAAmB,IAAZ4b,GAEX,CACIlI,KAAM,UACN1T,MAAoB,IAAb8b,GAEX,CACIpI,KAAM,YACN1T,MAAsB,IAAfgc,IAKTK,EAAe,CACjB3C,OAAQ,SAAC4C,EAAUC,GAAX,mBAAC,eACFD,GADC,IAEJE,aAAc,kBACdjb,MAAOgb,EAAME,WAAa,QAAU,QACpC7M,gBAAiB2M,EAAME,WAAa,OAAS,QAC7C,UAAW,CACP7M,gBAAiB,gBAGzB8M,QAAS,SAACJ,GAAD,mBAAC,eACHA,GADE,IAEL9K,UAAW,MAEfmL,UAAW,SAAAC,GAAI,kCACRA,GADQ,IAEXC,KAAM,MAIRC,EAAmB,SAAC,GAA8B,EAA5BC,KAA4B,EAAtBC,OAAsB,EAAdC,QACtC,OACI,cAACC,GAAA,EAAD,CACI9H,EAAG,EACHC,EAAG,EACHb,KAAK,QACL2I,IAAK,IACL7H,GAAI,GACJH,WAAW,QACXhW,MAAO,IACPie,UAAU,cARd,+BAkBR,OACI,eAAC1N,GAAD,WACI,cAAC,GAAD,sBAAsB,uBACtB,eAAC,GAAD,WAEI,eAACyL,GAAD,WACI,cAAC,GAAD,uCAA6C,uBAC7C,eAACkC,GAAA,EAAD,CACIle,MAAO,IACP0Q,OAAQ,IACRzC,KAAMA,EACNgJ,OAAQ,CACJC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GARhB,UAWI,cAACC,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,GAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,GAAA,EAAD,CAAO0E,MAAO,cAACuB,EAAD,MACd,cAAChG,GAAA,EAAD,IACA,cAACwG,GAAA,EAAD,CAAK1G,QAAQ,QAAQpC,KAAK,kBAKlC,eAAC4G,GAAD,iBAAqC,IAAhBtP,GAAsC,IAAjBG,EACtC,cAAC,KAAD,CAAQsR,aAAcjC,EAAQ,GAAIA,QAASA,EAASkC,SAzI5C,SAAAC,GACpBtU,EAAcsU,EAAMzd,QAwIuE0d,OAAQrB,IAAmB,KAEzF,IAAhBvQ,GAAsC,IAAjBG,EAAqB,yBAA2B,cAAC,GAAD,CAAc5K,QAAS,YvCrE1G,SAAP,4BuCqEyHsc,CAAMzU,IAArC,gCAI9E,cAAC,GAAD,CAAa3H,MAAM,QAMnB,oBAAIkL,MAAO,CAAElL,MAAO,SAApB,iCACC8Y,EAAOtb,KAAI,SAAC2a,EAAQxD,GAAT,OACRA,EAAQ,EAAI,MAA2B,IAAnBwD,EAAOC,KAAK,GAE5B,qBAAgBlN,MAAO,CAAElL,MAAO,SAAhC,UACKgL,KAAKC,OAAOoR,KAAKC,MAAQ,IAAOnE,EAAOC,KAAK,GAAGC,YAAc,MAAQ,EAAI,yCAAIrN,KAAKC,OAAOoR,KAAKC,MAAQ,IAAOnE,EAAOC,KAAK,GAAGC,YAAc,MAAjE,iBAAwF,oBADtK,oBAEgB,cAAC,IAAD,CACR5Z,MAAO0Z,EAAOC,KAAK,GAAGC,WACtB3Z,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,IAPtB,MAAS8V,GAQT,qBAAgBzJ,MAAO,CAAElL,MAAO,OAAhC,UACKgL,KAAKC,OAAOoR,KAAKC,MAAQ,IAAOnE,EAAOC,KAAK,GAAGC,YAAc,MAAQ,EAAI,yCAAIrN,KAAKC,OAAOoR,KAAKC,MAAQ,IAAOnE,EAAOC,KAAK,GAAGC,YAAc,MAAjE,iBAAwF,oBADtK,kBAAS1D,UC/KhBoB,IAfiBjK,KAAOwB,IAAV,iSAeNxB,KAAO0B,GAAV,8UAkBL+O,GAAWzQ,KAAO0B,GAAV,2UAeRgP,GAAM1Q,KAAOgL,GAAV,6TAeHd,GAAWlK,KAAOgL,GAAV,4UAgBR7I,GAAUnC,KAAO2Q,GAAV,4U,IAgBD3Q,KAAO8E,IAAV,yG,OCnFV8L,GAAS5Q,KAAOwB,IAAV,gcA8BZ,SAASqP,GAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,QAAS/Q,EAAQ,EAARA,KAEtB,EAMIgR,oBAAS,CACTD,UACA/Q,SAPAiR,EADJ,EACIA,cACAC,EAFJ,EAEIA,kBACAC,EAHJ,EAGIA,aACAC,EAJJ,EAIIA,KACAC,EALJ,EAKIA,WAOJ,OACI,kDAAWJ,KAAX,cACI,gCACKE,EAAaxf,KAAI,SAAA2f,GAAW,OACzB,8CAAQA,EAAYC,uBAApB,aACKD,EAAYE,QAAQ7f,KAAI,SAAA8f,GAAM,OAC3B,8CAAQA,EAAOC,kBAAf,aAAkCD,EAAOE,OAAO,wBAKhE,iDAAWT,KAAX,aACKE,EAAKzf,KAAI,SAACigB,EAAKjX,GAEZ,OADA0W,EAAWO,GAEP,8CAAQA,EAAIC,eAAZ,aACKD,EAAIE,MAAMngB,KAAI,SAAAogB,GACX,OAAO,8CAAQA,EAAKC,gBAAb,aAA8BD,EAAKJ,OAAO,2BAgBjF,I,2BAuKeM,GAvKM,WACjB,MAA+B/f,IAAMC,WAAWC,IAArCE,EAAX,oBACA,EAAkGJ,IAAMC,WAAW6J,IAAnH,oBAAqC+C,EAArC,MAAuDmT,EAAvD,MAA2EC,EAA3E,MAEMjE,EAAU,CACZ,CAAEtb,MAAO,IAAKub,MAAO,UACrB,CAAEvb,MAAO,IAAKub,MAAO,UACrB,CAAEvb,MAAO,IAAKub,MAAO,gBAIzB,EAAkCjc,IAAMoB,SAAS,IAAjD,mBAAO8e,EAAP,KAAkBC,EAAlB,KAMA,EAA4BngB,IAAMoB,SAAS,GAA3C,mBAAOmF,EAAP,KAAe6Z,EAAf,KACA,EAA4BpgB,IAAMoB,WAAlC,mBAAOkF,EAAP,KAAeqU,EAAf,KAOAjP,qBAAU,WACN,IAAM+M,EAAW,uCAAG,sCAAApU,EAAA,0DACZjE,EADY,wBAENkE,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAJrD,SAKcN,EAASmV,iBALvB,cAKRC,EALQ,OAMR2G,EAAkBvb,EAAa8U,QAAQ0G,eAAe,KAAM,MANpD,UAOexb,EAAagV,YAAYuG,EAAiB3G,EAAgB,IAAOA,GAPhF,QAOR6G,EAPQ,OAQZJ,EAAaI,EAAevG,WARhB,4CAAH,qDAWjBvB,MACD,CAACrY,IAEJ,IAAM2c,EAAe,CACjB3C,OAAQ,SAAC4C,EAAUC,GAAX,mBAAC,eACFD,GADC,IAEJE,aAAc,kBACdjb,MAAOgb,EAAME,WAAa,QAAU,QACpC7M,gBAAiB2M,EAAME,WAAa,OAAS,QAC7C,UAAW,CACP7M,gBAAiB,gBAGzB8M,QAAS,SAACJ,GAAD,mBAAC,eACHA,GADE,IAEL9K,UAAW,MAEfmL,UAAW,SAAAC,GAAI,kCACRA,GADQ,IAEXC,KAAM,MAORsB,EAAU7e,IAAMwgB,SAClB,iBAAM,CAEF,CACIC,OAAQ,oBACRC,SAAU,UAEd,CACID,OAAQ,iBACRC,SAAU,UAEd,CACID,OAAQ,gBACRC,SAAU,cAEd,CACID,OAAQ,aACRC,SAAU,iBAIlB,IAEE5S,EAAO9N,IAAMwgB,SAAQ,iBACvB,CACI,CACIG,OAAQ,oBACRC,OAAQ,MACRC,WAAY,KACZC,WAAY,MAEhB,CACIH,OAAQ,oBACRC,OAAQ,MACRC,WAAY,MACZC,WAAY,OAEhB,CACIH,OAAQ,oBACRC,OAAQ,KACRC,WAAY,MACZC,WAAY,UAEjB,IAGP,OACI,eAAC1Q,GAAD,WACI,cAAC,GAAD,kCAAkC,uBAClC,cAAC,GAAD,kLACA,cAACuO,GAAD,UACI,cAACC,GAAD,CAAOC,QAASA,EAAS/Q,KAAMA,MAIb,IAArBjB,GAAiD,IAAvBmT,EAA2B,yCAAG,cAAC,GAAD,mCAErD,cAAC,KAAD,CAAQ/B,aAAcjC,EAAQ,GAAIA,QAASA,EAASkC,SApGlC,SAAAC,GAC1BiC,EAAUjC,EAAMzd,QAmG6E0d,OAAQrB,IAE7F,cAAC,IAAD,CACIrS,oBAAoB,WACpB3J,OAAO,UACPJ,YAAY,QACZE,mBAAmB,EACnB+J,eAAe,EACfgQ,YAAa,iBACb/P,cAAe,YAAgB,IAAbnK,EAAY,EAAZA,MArE9Bia,EAqE4Dja,IAChDA,MAAO4F,IAEX,cAAC,GAAD,CAAcvE,QAAS,WAAQke,EAAoB,KzChJ5D,SAAP,8ByCgJyEzZ,CAAeF,EAAQC,IAAhF,0BAdkD,OAc2E,cAAC,GAAD,0CAIjI,cAAC,GAAD,CAAatE,MAAM,QACnB,cAACuc,GAAD,2CAEsB,IAArB3R,GAAiD,IAAvBmT,EAA2B,cAAC,GAAD,CAAcje,QAAS,YzChJlF,WAAP,yByCgJiG0E,IAA/B,mCAAoH,IAArBoG,GAAiD,IAAvBmT,EAA2B,cAAC,GAAD,qDAA8D,eAAC,GAAD,gCAA6BnT,EAA7B,yBAExQ,cAAC,GAAD,CAAa5K,MAAM,QAEnB,cAAC,GAAD,8BACCie,EAAUzgB,KAAI,SAAC2a,EAAQxD,GAAT,OACXA,EAAQ,EAAI,KAAQwD,EAAOC,KAAK,GAAK,EAEjC,cAACoE,GAAD,UAAK,qBAAItR,MAAO,CAAElL,MAAO,SAApB,eAAkCmY,EAAOC,KAAK,QAChBpU,IAA9Bia,EAAU9F,EAAOC,KAAK,IAAoB9V,KAAOY,MAAM4b,mBAAmBb,EAAU9F,EAAOC,KAAK,KAAO,KADvG,YACsH,cAAC,IAAD,CACnH3Z,MAAO0Z,EAAOC,KAAK,GAAGC,WACtBvZ,OAAQ,UACRJ,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,SAKtB,eAAC2d,GAAD,WACI,qBAAItR,MAAO,CAAElL,MAAO,OAApB,oBAAmDgE,IAAnBmU,EAAOC,KAAK,GAAmBD,EAAOC,KAAK,GAAK,KAAhF,cADJ,cCxPPtC,GAAiBhK,KAAOwB,IAAV,iSAedyI,GAAQjK,KAAO0B,GAAV,6UAgBLwI,GAAWlK,KAAOwB,IAAV,2UC6BNyR,GAvDI,WACf,MAA0EhhB,IAAMC,WAAW6J,IAA3F,oBAA2B0C,EAA3B,MAA4CG,EAA5C,MAA0DC,EAA1D,MAEA,EAAoC5M,IAAMoB,SAAS,GAAnD,mBAAOwI,EAAP,KAAmBC,EAAnB,KAEMmS,EAAU,CACZ,CAAEtb,MAAO,IAAKub,MAAO,oBACrB,CAAEvb,MAAO,IAAKub,MAAO,mBACrB,CAAEvb,MAAO,IAAKub,MAAO,yBASnBc,EAAe,CACjB3C,OAAQ,SAAC4C,EAAUC,GAAX,mBAAC,eACFD,GADC,IAEJE,aAAc,kBACdjb,MAAOgb,EAAME,WAAa,QAAU,QACpC7M,gBAAiB2M,EAAME,WAAa,OAAS,QAC7C,UAAW,CACP7M,gBAAiB,gBAGzB8M,QAAS,SAACJ,GAAD,mBAAC,eACHA,GADE,IAEL9K,UAAW,MAEfmL,UAAW,SAAAC,GAAI,kCACRA,GADQ,IAEXC,KAAM,MAMd,OACI,eAACnN,GAAD,WACI,cAAC,GAAD,4BAA4B,uBAC5B,eAAC,GAAD,gDAA4C,+BAAI,gEAAuC,2EAAkD,0EAEzI,cAAC,GAAD,UACqB,IAAhB5D,GAAsC,IAAjBG,GAAuC,IAAjBC,EACxC,qCAAE,cAAC,KAAD,CAAQqR,aAAcjC,EAAQ,GAAIA,QAASA,EAASkC,SAnC9C,SAAAC,GACpBtU,EAAcsU,EAAMzd,QAkCyE0d,OAAQrB,IAAzF,IAA0G,cAAC,GAAD,CAAchb,QAAS,Y3CuD9I,SAAP,4B2CvD6Jkf,CAAcrX,IAA7C,0BAA1G,OAAwM,+BChD/MmO,GAAiBhK,KAAOwB,IAAV,iSAedyI,GAAQjK,KAAO0B,GAAV,6UAeL+O,GAAWzQ,KAAO0B,GAAV,2UAiBRwI,GAAWlK,KAAOgL,GAAV,4UAsBRmI,IAPMnT,KAAO8E,IAAV,yGAOW9E,KAAOoT,OAAV,iVCtEjB,SAAeC,KAAtB,gC,8CAAO,kCAAA/c,EAAA,6DACGC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH9D,KAIeE,EAJf,SAIuDF,EAAOI,aAJ9D,wCAI4Boc,qBAJ5B,8BAICxK,EAJD,yBAKEA,GALF,6C,sBAQA,SAAeyK,KAAtB,gC,8CAAO,kCAAAhd,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAChBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH9D,SAIeE,EAAauc,iBAJ5B,cAICC,EAJD,yBAKEA,GALF,4C,sBAQA,SAAeC,GAAtB,mC,8CAAO,WAA8B3K,GAA9B,qBAAAvS,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAChBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH9D,SAIeE,EAAayc,eAAe3K,GAJ3C,cAIC4K,EAJD,yBAKEA,GALF,4C,sBAQA,SAAeC,KAAtB,gC,8CAAO,kCAAApd,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAChBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH9D,KAIeE,EAJf,SAIgDF,EAAOI,aAJvD,wCAI4Byc,cAJ5B,8BAICD,EAJD,yBAKEA,GALF,6C,sBAQA,SAAeE,GAAtB,mC,8CAAO,WAA6B9K,GAA7B,qBAAAvS,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAChBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH9D,SAIcE,EAAa4c,cAAc9K,GAJzC,cAIC+K,EAJD,yBAKEA,GALF,4C,sBAQA,SAAeC,GAAtB,mC,8CAAO,WAA6BhL,GAA7B,qBAAAvS,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAChBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH9D,SAIcE,EAAa8c,cAAchL,GAJzC,cAICiL,EAJD,yBAKEA,GALF,4C,sBAQA,SAAeC,GAAtB,mC,8CAAO,WAAmClL,GAAnC,qBAAAvS,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAChBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH9D,SAIiBE,EAAagd,oBAAoBlL,GAJlD,cAICmL,EAJD,yBAKEA,GALF,4C,oEAQA,WAAoC3d,EAASkC,GAA7C,mBAAAjC,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAChBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH9D,SAIGE,EAAakd,qBAAqB5d,EAASkC,GAJ9C,4C,sBAOA,SAAe2b,KAAtB,gC,8CAAO,kCAAA5d,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAChBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH9D,KAIkBE,EAJlB,SAIuDF,EAAOI,aAJ9D,wCAI+Bid,kBAJ/B,8BAICC,EAJD,yBAKIA,GALJ,6C,sBAQA,SAAeC,KAAtB,gC,8CAAO,kCAAA9d,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAChBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH9D,KAIkBE,EAJlB,SAIuDF,EAAOI,aAJ9D,wCAI+Bmd,kBAJ/B,8BAICC,EAJD,yBAKIA,GALJ,6C,sBAQA,SAAeC,GAAtB,qC,8CAAO,WAAkCC,EAAUC,GAA5C,mBAAAle,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YACZC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAHlE,SAIOE,EAAaud,mBAAmBC,EAAUC,GAJjD,4C,oEAOA,WAAiCjc,GAAjC,mBAAAjC,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YACZC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAHlE,SAIOE,EAAa0d,kBAAkBlc,GAJtC,4C,oEAOA,WAA2B8N,EAAMqO,EAAYC,GAA7C,qBAAAre,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClB8d,EAAcpe,KAAOY,MAAMyd,oBAAsBxO,GAC/CtP,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAJ9D,SAKGE,EAAa+d,YAAYF,EAAaF,EAAWC,GALpD,4C,oEAQA,gCAAAre,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAChBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH9D,SAIGE,EAAage,kBAJhB,4C,sBAOA,SAAeC,GAAtB,mC,8CAAO,WAAkCnM,GAAlC,mBAAAvS,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAChBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAH9D,SAIGE,EAAaie,mBAAmBnM,GAJnC,4C,sBAOA,SAAeoM,GAAtB,mC,8CAAO,WAA2B5e,GAA3B,mBAAAC,EAAA,6DACCC,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAChBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GACjD,OAAZR,IACFA,EAAUQ,EAAOI,cALhB,SAOGF,EAAake,YAAY5e,GAP5B,4C,sBC5GP,I,yDAuJe6e,GAvJO,WAClB,MAA+BjjB,IAAMC,WAAWC,IAArCE,EAAX,oBACA,EAAuEJ,IAAMC,WAAW6J,IAAxF,oBAAOwC,EAAP,KAAuBC,EAAvB,KAEA,EAAoCvM,IAAMoB,SAAS,IAAnD,mBAAO8hB,EAAP,KAAmBC,EAAnB,KACA,EAAwCnjB,IAAMoB,SAAS,IAAvD,mBAAOgiB,EAAP,KAAqBC,EAArB,KAEA,EAAkCrjB,IAAMoB,WAAxC,mBAAOkiB,EAAP,KAAkBC,EAAlB,KACA,EAAoCvjB,IAAMoB,WAA1C,mBAAOshB,EAAP,KAAmBc,EAAnB,KACA,EAAsCxjB,IAAMoB,WAA5C,mBAAOqiB,EAAP,KAAoBC,EAApB,KACA,EAAoC1jB,IAAMoB,WAA1C,mBAAOuiB,EAAP,KAAmBC,EAAnB,KACA,EAAoC5jB,IAAMoB,WAA1C,mBAAOyiB,EAAP,KAAmBC,EAAnB,KACA,EAAsD9jB,IAAMoB,WAA5D,mBAAO2iB,EAAP,KAA4BC,EAA5B,KACA,EAA8ChkB,IAAMoB,WAApD,mBAAO6iB,EAAP,KAAwBC,EAAxB,KAEA,EAAgDlkB,IAAMoB,SAAS,IAA/D,mBAAO+iB,EAAP,KAAyBC,EAAzB,KACA,EAAkDpkB,IAAMoB,WAAxD,oBAAOijB,GAAP,MAA0BC,GAA1B,MACA,GAAoDtkB,IAAMoB,WAA1D,qBAAOmjB,GAAP,MAA2BC,GAA3B,MACA,GAA0CxkB,IAAMoB,WAAhD,qBAAOqjB,GAAP,MAAsBC,GAAtB,MAgBAhZ,qBAAU,WACN,IAAM+M,EAAW,uCAAG,8CAAApU,EAAA,0DACZjE,EADY,iCAESghB,KAFT,cAERuD,EAFQ,OAGRC,EAAiBD,EAASrK,WAC9BoK,GAAiBE,GAJL,SAKYvD,KALZ,cAKRwD,EALQ,QAMInc,OAAS,GAAwB,IAAnBkc,IACtBE,EAAmBvgB,KAAOY,MAAM4b,mBAAmB8D,EAAYD,EAAiB,IACpFvB,EAAgByB,IARR,UAUYvD,GAAeqD,GAV3B,eAURnB,EAVQ,OAWZ9d,QAAQC,IAAI,cAAe6d,GAC3BC,EAAeD,GAZH,UAaWhC,KAbX,eAaRkC,EAbQ,OAcZC,EAAcD,EAAWrJ,YACzB3U,QAAQC,IAAI+d,EAAWrJ,YAfX,UAkBWoH,GAAckD,GAlBzB,eAkBRf,EAlBQ,OAmBZC,EAAcD,EAAWvJ,YAnBb,UAoBWwH,GAAoB8C,GApB/B,eAoBRG,EApBQ,OAqBZX,EAAoBW,GArBR,UAuBS9C,KAvBT,eAuBRC,EAvBQ,OAwBZsC,GAAsBtC,EAAS5H,YAxBnB,UAyBS6H,KAzBT,QAyBRC,EAzBQ,OA0BZkC,GAAqBlC,EAAS9H,YA1BlB,4CAAH,qDA6BjB7B,MACD,CAACrY,IAOJ,OACI,eAACgQ,GAAD,WACI,cAAC,GAAD,oCAAoC,uBACpC,eAAC,GAAD,+BAA4C,+CAAhBqT,EAA+D,kBAAoB,yCAAIL,EAAJ,IAAkB,cAAClC,GAAD,CAAanf,QAAS,WAAQihB,MAA9B,kCACjI,eAAC,GAAD,oCAAgC,cAAC,IAAD,CAActiB,MAAOmjB,EAAYljB,YAAa,OAAQE,mBAAmB,EAAME,OAAQ,YAAvH,OACA,eAAC,GAAD,oCAAgD,KAAf4iB,EAAoB,OAAyB,KAAfA,EAAoB,YAA8B,KAAfA,EAAoB,aAA+B,KAAfA,EAAoB,UAA4B,KAAfA,EAAoB,YAAc,qBACzM,eAAC,GAAD,yCAAsD,IAAhBF,EAA6D,kBAAoBU,EAAiBzb,UACxI,eAAC,GAAD,oCAAiC2b,MACjC,eAAC,GAAD,qCAAkCE,MAXzB,CAAC,EAAG,GAAI,IAAK,KADb,CAAC,GAAI,GAAI,GAAI,IAaCS,QAAQrB,KAAgBrX,EAAeC,GAAe,IAAU,cAAC2U,GAAD,CAAanf,QAAS,WAAQghB,GAAmB0B,KAAjD,sBAA4F,KAEnL,cAAC,GAAD,CAAaxiB,MAAM,QAGH,KAAf0hB,EAAoB,qCAAE,cAAC,GAAD,sDAA4D,eAAC,GAAD,iCAC/E,cAAC,IAAD,CACIjZ,oBAAoB,WACpBhK,MAAOqjB,EACPhjB,OAAO,SACPJ,YAAY,QACZgK,KAAK,OACL9J,mBAAmB,EACnB+J,eAAe,EACfC,cAAe,YAAgB,IAAbnK,EAAY,EAAZA,MAjE9BsjB,EAkEwCtjB,MAV+C,WAc/E,uBAAOiK,KAAK,OAAOjK,MAAOujB,EAAiB/F,SAAU,SAAAxd,GAAK,OAAIwjB,EAAmBxjB,EAAMqD,OAAOrD,UAC9F,cAAC,GAAD,CAAcqB,QAAS,YDpDhC,SAAP,8BCoD+CigB,CAAqBiC,EAAiBF,IAArE,6BAfiB,KAiBR,cAAC,GAAD,CAAa9hB,MAAM,QAjBX,OAiB0B,KAE/C,cAAC,GAAD,UAKoB,IAAf0hB,EACG,qCAAE,cAAC,GAAD,8BAAF,IAAuC,+BAAI,wDAA0B,uBAAO/I,YAAa,iBAAkBjQ,KAAK,OAAOjK,MAAOwiB,EAAYhF,SAAU,SAAAxd,GAAK,OAAIyiB,EAAcziB,EAAMqD,OAAOrD,aACnL,+CAAkB,IAAlB,KACG,cAAC,IAAD,CACIka,YAAa,qBACblQ,oBAAoB,WACpBhK,MAAO4iB,EACPviB,OAAO,SACPH,iBAAiB,IACjBD,YAAY,QACZgK,KAAK,OACL9J,mBAAmB,EACnB+J,eAAe,EACfC,cAAe,YAAgB,IAAbnK,EAAY,EAAZA,MArG1C6iB,EAsGkD7iB,SAE7B,kEAC+B,cAAC,IAAD,CAC5Bka,YAAa,qBACblQ,oBAAoB,WACpBhK,MAAOgiB,EACP9hB,iBAAiB,IACjBD,YAAY,QACZgK,KAAK,OACL9J,mBAAmB,EACnB+J,eAAe,EACfC,cAAe,YAAgB,IAAbnK,EAAY,EAAZA,MA9G1C8iB,EA+GmD9iB,MAG/B,cAAC,GAAD,CAAcqB,QAAS,YDtD5C,SAAP,gCCsD2D8gB,CAAYK,EAAYI,EAAWZ,IAAlE,2CAEY,WCvJ3B3K,GAAiBhK,KAAOwB,IAAV,oSAcd0V,GAAgBlX,KAAOwB,IAAV,8RAebyI,GAAQjK,KAAO0B,GAAV,6UAgCLwI,IAjBWlK,KAAO0B,GAAV,2UAiBG1B,KAAOgL,GAAV,6UCwENmM,IDzDInX,KAAO8E,IAAV,yGCnEG,WACf,MAA+B7S,IAAMC,WAAWC,IAArCE,EAAX,oBAEM+kB,EAAgB,CAClB,CAAEzkB,MAAO,IAAKub,MAAO,kBACrB,CAAEvb,MAAO,IAAKub,MAAO,YACrB,CAAEvb,MAAO,IAAKub,MAAO,OACrB,CAAEvb,MAAO,IAAKub,MAAO,SAGnBmJ,EAAiB,CACnB,CAAE1kB,MAAO,IAAKub,MAAO,eACrB,CAAEvb,MAAO,IAAKub,MAAO,kBAGzB,EAA6Cjc,IAAMoB,SAAS+jB,EAAc,GAAGzkB,OAA7E,mBAAO2kB,EAAP,KAAsBC,EAAtB,KACA,EAA8CtlB,IAAMoB,SAASgkB,EAAe,GAAG1kB,OAA/E,mBAAO6kB,EAAP,KAAsBC,EAAtB,KACA,EAAkDxlB,IAAMoB,WAAxD,mBAAO6X,EAAP,KAA0BC,EAA1B,KAeA,EAA0C9X,mBAAS,IAAnD,mBAAOqkB,EAAP,KAAsBC,EAAtB,KACA,EAAgDtkB,mBAAS,IAAzD,mBAAOukB,EAAP,KAAyBC,EAAzB,KACAla,qBAAU,WACN,IAAM+M,EAAW,uCAAG,wCAAApU,EAAA,0DACZjE,EADY,wBAENkE,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAJrD,SAKcN,EAASmV,iBALvB,cAKRC,EALQ,OAQRmM,EAAuB/gB,EAAa8U,QAAQkM,eAAe,KAAM,KAAM,MAR/D,UASchhB,EAAagV,YAAY+L,EAAsBnM,EAAgB,IAAOA,GATpF,eASR+L,EATQ,OAUZC,EAAiBD,EAAczL,WAVnB,UAYYqH,KAZZ,QAYRwD,EAZQ,OAaZe,EAAoBf,GAbR,4CAAH,qDAgBjBpM,MACD,CAACrY,IAIJ,IAAM2c,EAAe,CACjB3C,OAAQ,SAAC4C,EAAUC,GAAX,mBAAC,eACFD,GADC,IAEJE,aAAc,kBACdjb,MAAOgb,EAAME,WAAa,QAAU,QACpC7M,gBAAiB2M,EAAME,WAAa,OAAS,QAC7C,UAAW,CACP7M,gBAAiB,gBAGzB8M,QAAS,SAACJ,GAAD,mBAAC,eACHA,GADE,IAEL9K,UAAW,MAEfmL,UAAW,SAAAC,GAAI,kCACRA,GADQ,IAEXC,KAAM,MAMd,OACI,eAACnN,GAAD,WACI,eAAC,GAAD,eAAiB,uBACb,cAAC,GAAD,iCAEA,eAAC6U,GAAD,WACI,cAAC,IAAD,CAAcrK,YAAa,iBAAkB/P,cAAe,YAAgB,IAAbnK,EAAY,EAAZA,MAvD3EwY,EAuDgHxY,IAAUA,MAAOuY,EAAmBtY,YAAa,QAASE,mBAAmB,EAAMklB,KAAK,OAAOhlB,OAAQ,YAC3M,cAAC,GAAD,CAAcgB,QAAS,YHNpC,SAAP,4BGMmDygB,CAAkBvJ,IAAjD,sCAIR,eAAC,GAAD,WACI,cAAC,GAAD,qCACA,cAAC,GAAD,oIACA,eAACgM,GAAD,WACI,cAAC,KAAD,CAAQhH,aAAckH,EAAc,GAAInJ,QAASmJ,EAAejH,SA1ElD,SAAAC,GAC1BmH,EAAoBnH,EAAMzd,QAyEmF0d,OAAQrB,IACzG,cAAC,GAAD,CAAchb,QAAS,WAAQsgB,GAAmB,EAAGgD,IAArD,kCAEJ,uBACA,eAACJ,GAAD,WACI,cAAC,KAAD,CAAQhH,aAAcmH,EAAe,GAAIpJ,QAASoJ,EAAgBlH,SA1EnD,SAAAC,GAC3BqH,EAAqBrH,EAAMzd,QAyEqF0d,OAAQrB,IAC5G,cAAC,GAAD,CAAchb,QAAS,WAAQsgB,GAAmB,EAAGkD,IAArD,sCAOR,cAAC,GAAD,CAAatjB,MAAM,QAEnB,oBAAIkL,MAAO,CAAElL,MAAO,SAApB,8BACCwjB,EAAchmB,KAAI,SAAC2a,EAAQxD,GAAT,OACfA,EAAQ,EAAI,KACR,qBAAIzJ,MAAO,CAAElL,MAAO,SAApB,eAAoFgE,IAApD0f,EAAiBvL,EAAOC,KAAK,GAAGC,WAAa,GAAmB/V,KAAOY,MAAM4b,mBAAmB4E,EAAiBvL,EAAOC,KAAK,GAAGC,WAAa,IAAM,KAAnL,gBAAqM,cAAC,IAAD,CACjM5Z,MAAO0Z,EAAOC,KAAK,GAAGtP,WACtBhK,OAAQ,UACRJ,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,IANlB,cAMmCsZ,EAAOC,KAAK,GAAGtP,WANlD,eCxHPgN,GAAiBhK,KAAOwB,IAAV,oSAcd0V,GAAgBlX,KAAOwB,IAAV,8RAebyI,GAAQjK,KAAO0B,GAAV,6UC0CHuW,ID3BSjY,KAAO0B,GAAV,2UAiBG1B,KAAOgL,GAAV,4UAeFhL,KAAO8E,IAAV,yGCpEK,WACjB,MAA+B7S,IAAMC,WAAWC,IAArCE,EAAX,oBAEA,EAAsCgB,mBAAS,IAA/C,mBAAO6kB,EAAP,KAAoBC,EAApB,KACA,EAAgD9kB,mBAAS,IAAzD,mBAAOukB,EAAP,KAAyBC,EAAzB,KAwBA,OAtBAla,qBAAU,WACN,IAAM+M,EAAW,uCAAG,wCAAApU,EAAA,0DACZjE,EADY,wBAENkE,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAJrD,SAKcN,EAASmV,iBALvB,cAKRC,EALQ,OAQRyM,EAAqBrhB,EAAa8U,QAAQwM,sBAAsB,KAAM,KAAM,MAChFzgB,QAAQC,IAAIugB,GATA,UAUMrhB,EAAagV,YAAYqM,EAAoBzM,EAAgB,IAAOA,GAV1E,eAURyE,EAVQ,OAWZ+H,EAAe/H,EAAMnE,WAXT,UAYYqH,KAZZ,QAYRwD,EAZQ,OAaZe,EAAoBf,GAbR,4CAAH,qDAgBjBpM,MACD,CAACrY,IAKA,eAACgQ,GAAD,WACI,eAAC,GAAD,eAAiB,uBACb,cAAC,GAAD,6CAEA,cAAC,GAAD,UACI,cAAC,GAAD,CAAcrO,QAAS,YL6DpC,WAAP,yBK7DmD+gB,IAA/B,kCAIR,cAAC,GAAD,CAAa7gB,MAAM,QAEnB,oBAAIkL,MAAO,CAAElL,MAAO,SAApB,6BACCgkB,EAAYxmB,KAAI,SAAC2a,EAAQxD,GAAT,OACbA,EAAQ,EAAI,MAA2B,IAAnBwD,EAAOC,KAAK,GAE5B,qBAAIlN,MAAO,CAAElL,MAAO,SAApB,eACyDgE,IAApD0f,EAAiBvL,EAAOC,KAAK,GAAGC,WAAa,GAAmB/V,KAAOY,MAAM4b,mBAAmB4E,EAAiBvL,EAAOC,KAAK,GAAGC,WAAa,IAAM,KADxJ,YACuK,cAAC,IAAD,CAC/J5Z,MAAO0Z,EAAOC,KAAK,GAAGtP,WACtBhK,OAAQ,UACRJ,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,OAKtB,qBAAIqM,MAAO,CAAElL,MAAO,OAApB,mBAAmFgE,IAApD0f,EAAiBvL,EAAOC,KAAK,GAAGC,WAAa,GAAmB/V,KAAOY,MAAM4b,mBAAmB4E,EAAiBvL,EAAOC,KAAK,GAAGC,WAAa,IAAM,KAAlL,sB,SChEPvC,GAAiBhK,KAAOwB,IAAV,iSAedyI,GAAQjK,KAAO0B,GAAV,6UAgCLwI,IAjBWlK,KAAO0B,GAAV,2UAiBG1B,KAAOgL,GAAV,6UAsBRmI,IAPMnT,KAAO8E,IAAV,yGAOW9E,KAAOoT,OAAV,iVAqBXkF,GAAatY,KAAOoT,OAAV,qVClFvB,SAASvC,GAAT,GAAgC,IAAhBC,EAAe,EAAfA,QAAS/Q,EAAM,EAANA,KAGvB,EAMIgR,oBAAS,CAAED,UAAS/Q,QAAQwY,cAL9BvH,EADF,EACEA,cACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,KACAC,EALF,EAKEA,WAGJ,OAGA,kDAAWJ,KAAX,IAA4B5R,MAAO,CAAEoZ,OAAQ,mBAA7C,UACA,gCACCtH,EAAaxf,KAAI,SAAA2f,GAAW,OACzB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQ7f,KAAI,SAAA8f,GAAM,OAC3B,+CACQA,EAAOC,eAAeD,EAAOiH,yBADrC,IAEIrZ,MAAO,CACL+P,aAAc,kBACdjb,MAAO,SAJb,UAOGsd,EAAOE,OAAO,UACf,+BACGF,EAAOkH,SACFlH,EAAOmH,aACH,eACA,eACJ,gCAOpB,iDAAW1H,KAAX,aACCE,EAAKzf,KAAI,SAAAigB,GAER,OADAP,EAAWO,GAEP,8CAAQA,EAAIC,eAAZ,aACGD,EAAIE,MAAMngB,KAAI,SAAAogB,GACb,OACI,8CACQA,EAAKC,gBADb,IAEI3S,MAAO,CACLwZ,QAAS,OACTJ,OAAQ,kBAJd,SAOG1G,EAAKJ,OAAO,2BAc7B,I,eAmIemH,GAnIE,WACb,MAAgC5mB,IAAMC,WAAWC,IAAtCE,EAAX,oBACA,EAA0CJ,IAAMoB,SAAS,IAAzD,mBAAOylB,EAAP,KAAsBC,EAAtB,KACA,EAAkD9mB,IAAMoB,SAAS,IAAjE,mBAAO2lB,EAAP,KAA0BC,EAA1B,KAEA,EAAgChnB,IAAMoB,SAAS,IAA/C,mBAAO6lB,EAAP,KAAiBC,EAAjB,KACA,EAAwClnB,IAAMoB,SAAS,IAAvD,mBAAOgiB,EAAP,KAAqBC,EAArB,KACA,EAA4CrjB,IAAMoB,WAAlD,mBAAO+lB,EAAP,KAAuBC,EAAvB,KAEA,EAAsCpnB,IAAMoB,WAA5C,mBAAOqiB,EAAP,KAAoBC,EAApB,KAEA,EAAoC1jB,IAAMoB,SAAS,IAAnD,mBAAOyiB,EAAP,KAAmBC,EAAnB,KACA,EAA8C9jB,IAAMoB,SAAS,IAA7D,mBAAOimB,EAAP,KAAwBC,EAAxB,KACA,EAAgDtnB,IAAMoB,SAAS,IAA/D,mBAAOmmB,EAAP,KAAyBC,EAAzB,KAEM3I,EAAU7e,IAAMwgB,SACpB,iBAAM,CACJ,CACEC,OAAQ,SACRC,SAAU,QAEZ,CACED,OAAQ,oBACRC,SAAU,QAEZ,CACED,OAAQ,aACRC,SAAU,QAEZ,CACED,OAAQ,cACRC,SAAU,QAEZ,CACED,OAAQ,cACRC,SAAU,QAEZ,CACED,OAAQ,eACRC,SAAU,QAEZ,CACED,OAAQ,cACRgH,KAAM,gBAAG5H,EAAH,EAAGA,KAAH,OACJ,eAACwG,GAAD,CAAYtkB,QAAS,WAAQghB,GAAmBlD,EAAKH,IAAIgI,OAAOC,OAAhE,mBAA+E9H,EAAKH,IAAIgI,OAAOC,aAKrG,IAgEF,OAxDAjc,qBAAU,WACRwb,EAAY,IACiB,IAAzBL,EAAcne,QAElBme,EAAce,SAAQ,SAAClI,EAAK9I,GAE1BsQ,GAAY,SAAAD,GAAQ,6BAAQA,GAAR,CAAkB,CAACY,KAAMd,EAAkBnQ,GAC7DkR,KAAMjB,EAAcjQ,GACpBmR,KAAMV,EAAgBzQ,GACtBoR,KAAMT,EAAiB3Q,GACvBqR,KAAMpE,EAAWjN,GACjB+Q,KAAM/Q,EAAO,aAGlB,CAACmQ,EAAmBF,EAAeQ,EAAiBE,EAAkB1D,IAIvEnY,qBAAU,WACR,IAAM+M,EAAW,uCAAG,sBAAApU,EAAA,0DACdjE,EADc,yCAAAiE,EAAA,8CAAAA,EAAA,sEAEK+c,KAFL,cAEZuD,EAFY,OAGZC,EAAiBD,EAASrK,WAHd,SAKQiH,GAAeqD,GALvB,cAKZnB,EALY,OAMhBC,EAAeD,GANC,UAOQpC,KAPR,QAOZwD,EAPY,OAQO,IAAnBD,IACExB,EAAe7e,KAAOY,MAAM4b,mBAAmB8D,EAAYF,EAAW,IAC1EtB,EAAgBD,IAKlBgE,EAAkBvC,EAAYnc,QAfd,IAAArE,EAAA,iBAgBPoE,GAhBO,uBAAApE,EAAA,sEAiBSyd,GAAoBrZ,EAAE,GAjB/B,cAiBVsc,EAjBU,gBAkBSnD,GAAcnZ,EAAE,GAlBzB,cAkBVyf,EAlBU,OAmBV5E,EAAY4E,EAAW,GAAG5N,WAC1BoI,EAAawF,EAAW,GAAG5N,WAC/BgN,GAAmB,SAAAD,GAAe,6BAAQA,GAAR,CAAyB/D,OAC3DkE,GAAoB,SAAAD,GAAgB,6BAAQA,GAAR,CAA0B7E,OAtBhD,UAwBShB,GAAcjZ,EAAE,GAxBzB,QAwBV0f,EAxBU,OAyBdrE,GAAc,SAAAD,GAAU,6BAAQA,GAAR,CAAoBsE,EAAW7N,gBAEvD0M,GAAqB,SAAAD,GAAiB,6BAAQA,GAAR,CAA2BxiB,KAAOY,MAAM4b,mBAAmB8D,EAAYpc,SAC7Gqe,GAAiB,SAAAD,GAAa,6BAAQA,GAAR,CAAuB9B,EAAWrc,YA5BlD,2CAgBPD,EAAI,EAhBG,aAgBAA,EAAIoc,EAAYnc,QAhBhB,0CAgBPD,GAhBO,iBAgBwBA,IAhBxB,gHAAH,qDAiCjBgQ,MAEC,CAACrY,IAGA,eAACgQ,GAAD,WACE,cAAC,GAAD,+BAA+B,uBAC/B,eAAC,GAAD,+BAA4C,+CAAhBqT,EAA+D,kBAAoB,yCAAIL,EAAJ,IAAkB,cAAC,GAAD,CAAarhB,QAAS,WAAQihB,MAA9B,kCACjI,eAAC,GAAD,mCAAgCmE,KAEhC,cAAC,GAAD,CAAallB,MAAM,QAEvB,cAAC,GAAD,UACE,cAAC,GAAD,CACE4c,QAASA,EACT/Q,KAAQmZ,UCvMLlP,GAAiBhK,KAAOwB,IAAV,iSAedyI,GAAQjK,KAAO0B,GAAV,6UAeM1B,KAAO0B,GAAV,2UAiBG1B,KAAOgL,GAAV,4UAeFhL,KAAO8E,IAAV,yGCvDhB,SAAS+L,GAAT,GAAgC,IAAhBC,EAAe,EAAfA,QAAS/Q,EAAM,EAANA,KAGvB,EAMIgR,oBAAS,CAAED,UAAS/Q,QAAQwY,cAL9BvH,EADF,EACEA,cACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,KACAC,EALF,EAKEA,WAGJ,OAGA,kDAAWJ,KAAX,IAA4B5R,MAAO,CAAEoZ,OAAQ,mBAA7C,UACA,gCACCtH,EAAaxf,KAAI,SAAA2f,GAAW,OACzB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQ7f,KAAI,SAAA8f,GAAM,OAC3B,+CACQA,EAAOC,eAAeD,EAAOiH,yBADrC,IAEIrZ,MAAO,CACL+P,aAAc,kBACdjb,MAAO,SAJb,UAOGsd,EAAOE,OAAO,UACf,+BACGF,EAAOkH,SACFlH,EAAOmH,aACH,eACA,eACJ,gCAOpB,iDAAW1H,KAAX,aACCE,EAAKzf,KAAI,SAAAigB,GAER,OADAP,EAAWO,GAEP,8CAAQA,EAAIC,eAAZ,aACGD,EAAIE,MAAMngB,KAAI,SAAAogB,GACb,OACI,8CACQA,EAAKC,gBADb,IAEI3S,MAAO,CACLwZ,QAAS,OACTJ,OAAQ,kBAJd,SAOG1G,EAAKJ,OAAO,2BAqB7B,I,eAAI2I,GAAa,GACbC,GAAe,GACfC,GAAgB,GAmGLC,GAhGO,WAClB,MAAgCvoB,IAAMC,WAAWC,IAAtCE,EAAX,oBAEA,EAAwCJ,IAAMoB,SAAS,GAAvD,mBAAOonB,EAAP,KAAqBC,EAArB,KAEA,EAAgCzoB,IAAMoB,SAAS,IAA/C,mBAAO6lB,EAAP,KAAiBC,EAAjB,KAGMrI,EAAU7e,IAAMwgB,SACpB,iBAAM,CACJ,CACEC,OAAQ,UACRC,SAAU,QAEZ,CACED,OAAQ,YACRC,SAAU,QAEZ,CACED,OAAQ,aACRC,SAAU,WAGd,IAuDF,OAlDAhV,qBAAU,WACRwb,EAAY,IAEc,IAAtBkB,GAAW1f,QACb0f,GAAWR,SAAQ,SAAClI,EAAK9I,GACvBsQ,GAAY,SAAAD,GAAQ,6BAAQA,GAAR,CAAkB,CAACY,KAAMO,GAAWxR,GACtD8R,KAAML,GAAazR,GACnBkR,KAAMQ,GAAc1R,cAG3B,CAAC4R,IAIF9c,qBAAU,WAER,IAAM+M,EAAW,uCAAG,sCAAApU,EAAA,0DACdjE,EADc,iCAEGuH,KAFH,OAEhBygB,GAFgB,OAKP3f,EAAI,EALG,YAKAA,EAAI2f,GAAW1f,QALf,wBAMVigB,EAAgBP,GAAW3f,GAAGsC,WANpB,SAOSxD,GAAYohB,GAPrB,OAOVC,EAPU,OAQdP,GAAaQ,KAAKD,EAAWtO,YARf,QAKuB7R,IALvB,uBAUPA,EAAI,EAVG,aAUAA,EAAI2f,GAAW1f,QAVf,wBAWVigB,EAAgBP,GAAW3f,GAAGsC,WAXpB,UAYUtD,GAAakhB,GAZvB,QAYVG,EAZU,OAadR,GAAcO,KAAKC,EAAYxO,YAbjB,QAUuB7R,IAVvB,wBAehBggB,EAAgB,GAfA,4CAAH,qDAkBfhQ,MACD,CAACrY,IAgBA,eAACgQ,GAAD,WACE,cAAC,GAAD,+BAA+B,uBAE7B,cAAC,GAAD,UACA,cAAC,GAAD,CACJyO,QAASA,EACT/Q,KAAQmZ,UC3KHlP,GAAiBhK,KAAOwB,IAAV,iSAedyI,GAAQjK,KAAO0B,GAAV,6UAeM1B,KAAO0B,GAAV,2UAiBG1B,KAAOgL,GAAV,4UAeFhL,KAAO8E,IAAV,yGC1DhB,SAAS+L,GAAT,GAAgC,IAAhBC,EAAe,EAAfA,QAAS/Q,EAAM,EAANA,KACvB,EAMIgR,oBAAS,CAAED,UAAS/Q,QAAQwY,cAL9BvH,EADF,EACEA,cACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,KACAC,EALF,EAKEA,WAGJ,OAGA,kDAAWJ,KAAX,IAA4B5R,MAAO,CAAEoZ,OAAQ,mBAA7C,UACA,gCACCtH,EAAaxf,KAAI,SAAA2f,GAAW,OACzB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQ7f,KAAI,SAAA8f,GAAM,OAC3B,+CACQA,EAAOC,eAAeD,EAAOiH,yBADrC,IAEIrZ,MAAO,CACL+P,aAAc,kBACdjb,MAAO,SAJb,UAOGsd,EAAOE,OAAO,UACf,+BACGF,EAAOkH,SACFlH,EAAOmH,aACH,eACA,eACJ,gCAOpB,iDAAW1H,KAAX,aACCE,EAAKzf,KAAI,SAAAigB,GAER,OADAP,EAAWO,GAEP,8CAAQA,EAAIC,eAAZ,aACGD,EAAIE,MAAMngB,KAAI,SAAAogB,GACb,OACI,8CACQA,EAAKC,gBADb,IAEI3S,MAAO,CACLwZ,QAAS,OACTJ,OAAQ,kBAJd,SAOG1G,EAAKJ,OAAO,2BAY7B,I,eAAI2I,GAAa,GACbW,GAAiB,GAkENC,GAhEQ,WACnB,MAAgChpB,IAAMC,WAAWC,IAAtCE,EAAX,oBAEA,EAAwCJ,IAAMoB,SAAS,GAAvD,mBAAOonB,EAAP,KAAqBC,EAArB,KACA,EAAazoB,IAAMoB,SAAS,GAE5B,GAFA,iBAEgCpB,IAAMoB,SAAS,KAA/C,mBAAO6lB,EAAP,KAAiBC,EAAjB,KAEMrI,EAAU7e,IAAMwgB,SACpB,iBAAM,CACJ,CACEC,OAAQ,UACRC,SAAU,QAEZ,CACED,OAAQ,eACRC,SAAU,WAGd,IA8BF,OA3BAhV,qBAAU,WACRwb,EAAY,IACc,IAAtBkB,GAAW1f,SACb/C,QAAQC,IAAI,mBAAoBwiB,IAChCA,GAAWR,SAAQ,SAAClI,EAAK9I,GACvBsQ,GAAY,SAAAD,GAAQ,6BAAQA,GAAR,CAAkB,CAACY,KAAMO,GAAWxR,GACtDkR,KAAMiB,GAAenS,eAG5B,CAAC4R,IAEF9c,qBAAU,WACR,IAAM+M,EAAW,uCAAG,gCAAApU,EAAA,0DACdjE,EADc,iCAEGuH,KAFH,OAEhBygB,GAFgB,OAGP3f,EAAI,EAHG,YAGAA,EAAI2f,GAAW1f,QAHf,wBAIVigB,EAAgBP,GAAW3f,GAAGsC,WAJpB,SAKO/E,GAAe2iB,GALtB,OAKVM,EALU,OAMdF,GAAeF,KAAKI,EAAS3O,YANf,QAGuB7R,IAHvB,uBAQhBggB,EAAgB,GARA,4CAAH,qDAYjBhQ,MACC,CAACrY,IAGA,eAACgQ,GAAD,WACE,cAAC,GAAD,gCAAgC,uBAE9B,cAAC,GAAD,UACA,cAAC,GAAD,CACJyO,QAASA,EACT/Q,KAAQmZ,UC9HHlP,GAAiBhK,KAAOwB,IAAV,oSAedyI,GAAQjK,KAAO0B,GAAV,6UAgCLwI,IAjBWlK,KAAO0B,GAAV,2UAiBG1B,KAAOgL,GAAV,6UC0CNmQ,ID3BInb,KAAO8E,IAAV,yGCzDG,WACjB,MAA+B7S,IAAMC,WAAWC,IAArCE,EAAX,oBAEA,EAAoDJ,IAAMoB,WAA1D,mBAAO+nB,EAAP,KAA2BC,EAA3B,KACA,EAAgDppB,IAAMoB,WAAtD,mBAAOioB,EAAP,KAAyBC,EAAzB,KAGA,EAAsDtpB,IAAMoB,WAA5D,mBAAOmoB,EAAP,KAA4BC,EAA5B,KACA,EAA0CxpB,IAAMoB,WAAhD,mBAAOqoB,EAAP,KAAsBC,EAAtB,KACA,EAA4C1pB,IAAMoB,WAAlD,mBAAOuoB,EAAP,KAAuBC,EAAvB,KAqDA,OAzCAle,qBAAU,WACR,IAAM+M,EAAW,uCAAG,wDAAApU,EAAA,0DACdjE,EADc,iCAEQihB,KAFR,cAEZwD,EAFY,gBAGOld,KAHP,OAGZygB,EAHY,OAIhBoB,EAAuB3E,EAAYnc,QAC/BmhB,EAAW,EACXC,EAAW,EACXC,EAAa,EAGRthB,EAAI,EAVG,aAUAA,EAAI2f,EAAW1f,QAVf,wBAWVigB,EAAgBP,EAAW3f,GAAGsC,WAXpB,UAYSxD,GAAYohB,GAZrB,QAYVC,EAZU,OAaVoB,EAAYpB,EAAWtO,WAC3BuP,GAAsBG,EAdR,QAUuBvhB,IAVvB,wBAgBPA,EAAI,EAhBG,aAgBAA,EAAI2f,EAAW1f,QAhBf,wBAiBVigB,EAAgBP,EAAW3f,GAAGsC,WAjBpB,UAkBUtD,GAAakhB,GAlBvB,QAkBVG,EAlBU,OAmBdgB,GAAsBhB,EAAYxO,WAnBpB,QAgBuB7R,IAhBvB,wBAsBPA,EAAI,EAtBG,aAsBAA,EAAI2f,EAAW1f,QAtBf,wBAuBVigB,EAAgBP,EAAW3f,GAAGsC,WAvBpB,UAwBQ/E,GAAe2iB,GAxBvB,QAwBVsB,EAxBU,OAyBdF,GAA0BE,EAAU3P,WAzBtB,QAsBuB7R,IAtBvB,wBA4BhB2gB,EAAsBhB,EAAW1f,QACjCghB,EAAiBG,GACjBD,EAAkBE,GAClBR,EAAoBS,GA/BJ,4CAAH,qDAkCjBtR,MACC,CAACrY,IAMF,eAACgQ,GAAD,WACE,cAAC,GAAD,2BAA2B,uBAE3B,eAAC,GAAD,WAC0B,IAAvB+Y,EAA2B,eAAC,GAAD,wCAAoC,cAAC,IAAD,CAAczoB,MAAOyoB,EAAoBxoB,YAAa,OAAQE,mBAAmB,IAArH,OAA4I,OAChJ,IAAvBsoB,EAA2B,eAAC,GAAD,mCAA+B,cAAC,IAAD,CAAczoB,MAAO2oB,EAAkB1oB,YAAa,OAAQE,mBAAmB,EAAME,OAAQ,WAA5H,OAAkJ,OACtJ,IAAvBooB,EAA2B,eAAC,GAAD,yCAAqC,cAAC,IAAD,CAAczoB,MAAO6oB,EAAqB5oB,YAAa,OAAQE,mBAAmB,IAAvH,OAA8I,OAClJ,IAAvBsoB,EAA2B,eAAC,GAAD,yCAAqC,cAAC,IAAD,CAAczoB,MAAO+oB,EAAe9oB,YAAa,OAAQE,mBAAmB,IAAjH,OAAwI,OAC5I,IAAvBsoB,EAA2B,eAAC,GAAD,0CAAsC,cAAC,IAAD,CAAczoB,MAAOipB,EAAgBhpB,YAAa,OAAQE,mBAAmB,IAAnH,OAA0I,e,4BCxEvK,IAAMqpB,GAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,OACC,cAACC,GAAD,UACC,cAACC,GAAD,UACEF,OAOCC,GAAa,yGAMbC,GAAiB,6EAGXvqB,EAAOoqB,QAHI,6HAYFlrB,EAAOoM,gBAZL,IAcpB9L,EAAWF,EAdS,+D,OCehB,IAAMc,GAAeF,IAAMsqB,gBACrBxgB,GAAa9J,IAAMsqB,gBAE1BtgB,GAAc,YAAOmB,KAAP,qBAAH,2PA+pBFof,OAxoBf,WACI,MAAsCnpB,oBAAS,GAA/C,mBAAOhB,EAAP,KAAoBoqB,EAApB,KACA,EAA0CppB,oBAAS,GAAnD,mBAAOf,EAAP,KAAsBoqB,EAAtB,KACA,EAA0CrpB,oBAAS,GAAnD,mBAAOd,EAAP,KAAsBoqB,EAAtB,KACA,EAA4CtpB,mBAAS,GAArD,mBAAOupB,EAAP,KAAuBC,EAAvB,KACA,EAA4CxpB,oBAAS,GAArD,mBAAOK,EAAP,KAAuBopB,EAAvB,KACA,EAAwCzpB,mBAAS,GAAjD,mBAAOonB,EAAP,KAAqBC,EAArB,KACA,EAA8BrnB,mBAAS,GAAvC,mBAAO8D,EAAP,KAAgB4lB,EAAhB,KACA,EAAsC1pB,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoB4qB,EAApB,KACA,EAA0C3pB,mBAAS,GAAnD,mBAAO4H,EAAP,KAAsBgiB,EAAtB,KACA,EAA8C5pB,mBAAS,GAAvD,mBAAO0L,EAAP,KAAwBme,EAAxB,KAEMC,EAAY,uCAAG,WAAO9mB,GAAP,mBAAAC,EAAA,sEACWkB,GAAWnB,GADtB,UACX+mB,EADW,OAEXC,EAAgB7mB,KAAOY,MAAMC,YAAY+lB,GACf,SAA5BzmB,OAAOC,SAAS0mB,QAHH,iCAIgBlnB,GAAcC,GAJ9B,OAIPknB,EAJO,OAKbP,EAAeO,GALF,wBAObP,EAAe,GAPF,QASjBD,EAAWM,GATM,4CAAH,sDAYlB1f,qBAAU,WACFhH,OAAOC,UAEPD,OAAOC,SAAS4mB,GAAG,gBAAgB,SAACF,GAChCT,EAAkBS,GAClB3mB,OAAO8mB,SAASC,cAGzB,CAACd,IAEJjf,qBAAU,WACN,IAAMggB,EAAc,uCAAG,wCAAArnB,EAAA,0DACfjE,EADe,wBAETkE,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAJlD,SAKWN,EAASmV,iBALpB,cAKXC,EALW,OAOXiS,EAAkB7mB,EAAa8U,QAAQgS,gBAAgB,KAAM,KAAM,MAPxD,UAQI9mB,EAAagV,YAAY6R,EAAiBjS,EAAgB,IAAOA,GARrE,QAQXqB,EARW,OASX8Q,EAAiB9Q,EAAOf,UACN,IAAlBe,EAAOrS,QACPsiB,EAAiBa,EAAe,GAAGxR,KAAK,IAX7B,4CAAH,qDAgBpBqR,MACD,CAACtrB,IAEJsL,qBAAU,WACN,IAAMogB,EAAe,uCAAG,8CAAAznB,EAAA,0DAChBjE,EADgB,wBAEVkE,EAAW,IAAIC,KAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAe,IAAIP,KAAOQ,SAASd,GAAcD,GAAUY,GAJjD,SAKUN,EAASmV,iBALnB,cAKZC,EALY,OAOZqS,EAAmBjnB,EAAa8U,QAAQoS,iBAAiBznB,KAAOY,MAAMH,WAAWN,OAAOC,SAAS+W,iBAAkB,KAAM,MAP7G,UAQG5W,EAAagV,YAAYiS,EAAkBrS,EAAgB,IAAOA,GARrE,QAQZqB,EARY,OASZ8Q,EAAiB9Q,EAAOf,UACN,IAAlBe,EAAOrS,SACH6V,EAAMD,KAAKC,MAAQ,IACnB0N,EAAQJ,EAAe,GAAGxR,KAAK,GAAGC,WAAa,MAAYuR,EAAe,GAAGxR,KAAK,GAAGC,WAAaiE,EAClG2N,EAAYjf,KAAKC,MAAM+e,EAAQ,MACnCtmB,QAAQC,IAAI,eAAgBsmB,GAC5BjB,EAAmBiB,IAfP,4CAAH,qDAqBrBJ,MACD,CAAC1rB,IAEJsL,qBAAU,WACN,GAAIhH,OAAOC,SAAU,CACjBgB,QAAQC,IAAI,sBACZ,IAAMumB,EAAc,uCAAG,8BAAA9nB,EAAA,sEACI+nB,OADJ,cACb9nB,EADa,gBAEEA,EAAS+nB,QAAQ,CAAEC,OAAQ,eAAgBC,OAAQ,KAFrD,OAEbC,EAFa,OAGnB7mB,QAAQC,IAAI,sBAAuB4mB,EAAO,IAC1C5B,EAAkBlmB,OAAOC,SAAS0mB,SAEhB,+CAAdmB,EAAO,IACP3B,GAAkB,GAEA,IAAlB2B,EAAO9jB,QACP+jB,GAAoBD,EAAO,IAC3B7mB,QAAQC,IAAI,yBACZ4kB,GAAe,GACfU,EAAasB,EAAO,IACY,SAA5B9nB,OAAOC,SAAS0mB,SAChBZ,GAAiB,GACjBC,GAAiB,IACkB,YAA5BhmB,OAAOC,SAAS0mB,SACvBZ,GAAiB,GACjBC,GAAiB,KAEjBD,GAAiB,GACjBC,GAAiB,MAGrBF,GAAe,GACfM,EAAW,GACXC,EAAe,SAEa9kB,IAA5BvB,OAAOC,SAAS0mB,SAA2C,IAAlBmB,EAAO9jB,QAChD+f,EAAgB,GA9BD,4CAAH,qDAiCpB0D,OAEL,CAACxB,IAEJjf,qBAAU,WACFhH,OAAOC,UACPD,OAAOC,SAAS4mB,GAAG,mBAAmB,SAACmB,GACnC/mB,QAAQC,IAAI,wCAAyC8mB,EAAS,IAC1C,+CAAhBA,EAAS,GACT7B,GAAkB,QACK5kB,IAAhBymB,EAAS,IAChB7B,GAAkB,GAClBL,GAAe,IAEfA,GAAe,GAEnB9lB,OAAO8mB,SAASC,cAKzB,CAACd,IAGJ,MAA0CvpB,oBAAS,GAAnD,mBAAOurB,EAAP,KAAsBC,EAAtB,KACA,GAAkCxrB,mBAAS,GAA3C,qBAAOyrB,GAAP,MAAkBC,GAAlB,MACA,GAAwC1rB,mBAAS,GAAjD,qBAAOkL,GAAP,MAAqBygB,GAArB,MACA,GAAsC3rB,mBAAS,GAA/C,qBAAOmL,GAAP,MAAoBygB,GAApB,MACA,GAAsC5rB,mBAAS,GAA/C,qBAAOb,GAAP,MAAoB0sB,GAApB,MACA,GAAsC7rB,mBAAS,GAA/C,qBAAOoL,GAAP,MAAoB0gB,GAApB,MACA,GAA8C9rB,mBAAS,GAAvD,qBAAOqL,GAAP,MAAwB0gB,GAAxB,MACA,GAA0C/rB,mBAAS,GAAnD,qBAAOsL,GAAP,MAAsB0gB,GAAtB,MACA,GAAwChsB,mBAAS,GAAjD,qBAAOuL,GAAP,MAAqB0gB,GAArB,MACA,GAAwCjsB,mBAAS,GAAjD,qBAAOwL,GAAP,MAAqB0gB,GAArB,MACA,GAAgDlsB,mBAAS,GAAzD,qBAAOyL,GAAP,MAAyBoT,GAAzB,MACA,GAAoD7e,mBAAS,GAA7D,qBAAO4e,GAAP,MAA2BuN,GAA3B,MAEA,GAAoCnsB,mBAAS,GAA7C,qBAAOosB,GAAP,MAAmBC,GAAnB,MACA,GAAsCrsB,mBAAS,GAA/C,qBAAOssB,GAAP,MAAoBC,GAApB,MACA,GAA0CvsB,mBAAS,GAAnD,qBAAOwsB,GAAP,MAAsBC,GAAtB,MACA,GAA4CzsB,mBAAS,GAArD,qBAAO0sB,GAAP,MAAuBC,GAAvB,MACA,GAAkD3sB,mBAAS,GAA3D,qBAAO4sB,GAAP,MAA0BC,GAA1B,MAEA,GAA0C7sB,mBAAS,GAAnD,qBAAO8sB,GAAP,MAAsBC,GAAtB,MACA,GAA4C/sB,mBAAS,GAArD,qBAAOgtB,GAAP,MAAuBC,GAAvB,MACA,GAAgDjtB,mBAAS,GAAzD,qBAAOktB,GAAP,MAAyBC,GAAzB,MACA,GAAoDntB,mBAAS,GAA7D,qBAAOotB,GAAP,MAA2BC,GAA3B,MACA,GAA8CrtB,mBAAS,GAAvD,qBAAOstB,GAAP,MAAwBC,GAAxB,MACA,GAAgDvtB,qBAAhD,qBAAOwtB,GAAP,MAAyBnC,GAAzB,MAEA/gB,qBAAU,WACiB,SAAnBif,GAA6BvqB,IAC7B4F,GAAe4oB,IAAkB/gB,MAAK,SAACC,GACnCmf,GAAenf,EAAKwM,eAGxBvT,KAAgB8G,MAAK,SAACC,GAClBgf,GAAahf,EAAK,GAAGwM,YACrBsS,EAAiB9e,EAAK,GAAGwM,YACzB4S,GAAepf,EAAK,GAAGwM,YACvB6S,GAAmBrf,EAAK,GAAGwM,e5D7GpC,WAAP,gC4DgHYrT,GAAkB4G,MAAK,SAACC,EAAM+gB,QACF5oB,IAApB6H,EAAKwM,WACL8S,GAAiBngB,KAAK6hB,IAAI,IAAMhhB,EAAKwM,WAAarN,KAAKC,QAAO,IAAIoR,MAAOyQ,UAAY,KAAO,IAE5F3B,GAAiB,GAEP,MAAVyB,GACAlpB,QAAQC,IAAIipB,M5DvGzB,WAAP,gC4D2GYxnB,GAAiBwG,MAAK,SAACC,EAAM+gB,QACD5oB,IAApB6H,EAAKwM,WACL+S,GAAgBpgB,KAAK6hB,IAAI,IAAMhhB,EAAKwM,WAAarN,KAAKC,QAAO,IAAIoR,MAAOyQ,UAAY,KAAO,IAE3F1B,GAAgB,GAEN,MAAVwB,GACAlpB,QAAQC,IAAIipB,M5D1HzB,WAAP,gC4D8HY1nB,GAAqB0G,MAAK,SAACC,EAAM+gB,GACF,IAAvB/gB,EAAK,GAAGwM,WACR2F,GAAoBhT,KAAK6hB,IAAI,IAAMhhB,EAAK,GAAGwM,WAAarN,KAAKC,QAAO,IAAIoR,MAAOyQ,UAAY,KAAO,IACpE,IAAvBjhB,EAAK,GAAGwM,YAA2C,IAAvBxM,EAAK,GAAGwM,aAC3C2F,GAAoB,GACpBsN,GAAsB,IAEZ,MAAVsB,GACAlpB,QAAQC,IAAIipB,MAIpBpnB,KAAeoG,MAAK,SAACC,GACjBif,GAAgBjf,EAAKwM,eAGzB/S,KAAcsG,MAAK,SAACC,GAChBkf,GAAelf,EAAKwM,kBAG7B,CAACkO,EAAcmC,EAAgBvqB,EAAawuB,KAO/CljB,qBAAU,WACN,GAAIhH,OAAOC,SAAU,CAEjB,IACMC,EADW,IAAIL,KAAOC,UAAUC,aAAaC,OAAOC,UAClCE,YACH,IAAIN,KAAOQ,SAASd,GAAcD,GAAUY,GACpD2mB,GAAG,gBAAgB,SAAChlB,EAAQnC,EAAS4qB,GAC9CrpB,QAAQC,IAAI,0BAA2BxB,GACvCuB,QAAQC,IAAI,gBAAiBrB,KAAOY,MAAMH,WAAWN,OAAOC,SAAS+W,kBACjEtX,IAAYG,KAAOY,MAAMH,WAAWN,OAAOC,SAAS+W,mBACpD/V,QAAQC,IAAI,iBACc,IAAtBW,EAAO+T,YACP3U,QAAQC,IAAI,kBACZqpB,GAAeD,IACc,IAAtBzoB,EAAO+T,YACd3U,QAAQC,IAAI,mBACZspB,GAAgBF,IAEhBrpB,QAAQC,IAAI,kBAEhBupB,GAAc5oB,EAAQnC,EAAS4qB,UAI5C,CAACrE,IAEJjf,qBAAU,WACN,GAAIhH,OAAOC,SAAU,CAEjB,IACMC,EADW,IAAIL,KAAOC,UAAUC,aAAaC,OAAOC,UAClCE,YACH,IAAIN,KAAOQ,SAASd,GAAcD,GAAUY,GACpD2mB,GAAG,iBAAiB,SAAC6D,EAASC,EAAQ/oB,GAC3C+oB,IAAW9qB,KAAOY,MAAMH,WAAWN,OAAOC,SAAS+W,kBACnD4T,GAAoBF,EAAQrkB,WAAYskB,EAAQ/oB,SAK7D,CAACqkB,IAEJjf,qBAAU,WACN,GAAIhH,OAAOC,SAAU,CAEjB,IACMC,EADW,IAAIL,KAAOC,UAAUC,aAAaC,OAAOC,UAClCE,YACH,IAAIN,KAAOQ,SAASd,GAAcD,GAAUY,GACpD2mB,GAAG,YAAY,SAACgE,EAAMptB,EAAImE,GACnCX,QAAQC,IAAI,iBACZD,QAAQC,IAAI2pB,GACZ5pB,QAAQC,IAAIzD,GACZwD,QAAQC,IAAIU,EAAOyE,kBAG5B,CAAC4f,IAEJjf,qBAAU,WACN,GAAIhH,OAAOC,SAAU,CAEjB,IACMC,EADW,IAAIL,KAAOC,UAAUC,aAAaC,OAAOC,UAClCE,YACH,IAAIN,KAAOQ,SAASd,GAAcD,GAAUY,GACpD2mB,GAAG,gBAAgB,SAACnnB,EAASorB,GAClCprB,IAAYG,KAAOY,MAAMH,WAAWN,OAAOC,SAAS+W,mBACpD/V,QAAQC,IAAI,wBACZD,QAAQC,IAAIxB,GACZ2C,KAAgB8G,MAAK,SAACC,GAClBnI,QAAQC,IAAI,kBAAmBkI,EAAK,GAAGwM,YACvC3U,QAAQC,IAAI,sBAAuBkI,EAAK,GAAGwM,YAC3CwS,GAAahf,EAAK,GAAGwM,YACrBsS,EAAiB9e,EAAK,GAAGwM,YACzB4S,GAAepf,EAAK,GAAGwM,YACvB6S,GAAmBrf,EAAK,GAAGwM,sBAK5C,CAACqQ,IAEJjf,qBAAU,WACN,GAAIhH,OAAOC,SAAU,CAEjB,IACMC,EADW,IAAIL,KAAOC,UAAUC,aAAaC,OAAOC,UAClCE,YACH,IAAIN,KAAOQ,SAASd,GAAcD,GAAUY,GACpD2mB,GAAG,kBAAkB,SAACkE,EAAeC,EAAUC,EAAUC,EAAMC,GACpEH,IAAanrB,KAAOY,MAAMH,WAAWN,OAAOC,SAAS+W,kBACrDoU,GAAqBL,EAAeG,EAAMC,SAIvD,CAAClF,IAGJjf,qBAAU,WACN,GAAIhH,OAAOC,SAAU,CAEjB,IACMC,EADW,IAAIL,KAAOC,UAAUC,aAAaC,OAAOC,UAClCE,YACH,IAAIN,KAAOQ,SAASd,GAAcD,GAAUY,GACpD2mB,GAAG,eAAe,SAACwE,EAAWC,EAAgBC,EAAgBC,GACvEvqB,QAAQC,IAAI,uBAAwBmqB,GACpCpqB,QAAQC,WAAWmqB,GACnBpqB,QAAQC,WAAWlB,OAAOC,SAAS+W,iBAC/BqU,IAAcxrB,KAAOY,MAAMH,WAAWN,OAAOC,SAAS+W,mBACtD/V,QAAQC,IAAI,uBACZuqB,GAAYH,EAAgBC,EAAe3V,WAAY4V,UAIpE,CAACvF,IAEJjf,qBAAU,WACN,GAAIhH,OAAOC,SAAU,CAEjB,IACMC,EADW,IAAIL,KAAOC,UAAUC,aAAaC,OAAOC,UAClCE,YACH,IAAIN,KAAOQ,SAASd,GAAcD,GAAUY,GACpD2mB,GAAG,kBAAkB,SAACwE,EAAWK,GAC1CzqB,QAAQC,IAAI,6BAA8BmqB,GAC1CpqB,QAAQC,WAAWmqB,GACfA,IAAcxrB,KAAOY,MAAMH,WAAWN,OAAOC,SAAS+W,mBACtD/V,QAAQC,IAAI,gCACZyqB,GAAgBN,EAAWK,EAAO9V,mBAI/C,CAACqQ,IAIJ,IAAMsE,GAAiB,SAACD,GAEhBhC,GADAgC,EAAQ,IACO,IAEAA,EAAMjkB,aAGvBmkB,GAAkB,SAACF,GAEjBjC,GADAiC,EAAQ,IACQ,IAEAA,EAAMjkB,aAIxBukB,GAAsB,SAACF,EAASC,EAAQiB,GAC1C1D,EAAiB,GACjB6B,GAAsBW,GACtBT,GAAmB2B,EAAIhW,YACvB3U,QAAQC,IAAI,sBACZD,QAAQC,IAAI,YAAawpB,GAET,MAAZA,EACAzpB,QAAQC,IAAI,uCAAwC0qB,GACjC,MAAZlB,EACPzpB,QAAQC,IAAI,mCAAoC0qB,GAC7B,MAAZlB,GACPzpB,QAAQC,IAAI,0CAEhBI,KAAiB6H,MAAK,SAACC,GACnBnI,QAAQC,IAAI,cAAekI,EAAKwM,YAChC2S,GAAenf,EAAKwM,eAGxBvT,KAAgB8G,MAAK,SAACC,GAClBnI,QAAQC,IAAI,kBAAmBkI,EAAK,GAAGwM,YACvC3U,QAAQC,IAAI,sBAAuBkI,EAAK,GAAGwM,YAC3CwS,GAAahf,EAAK,GAAGwM,YACrBsS,EAAiB9e,EAAK,GAAGwM,YACzB4S,GAAepf,EAAK,GAAGwM,YACvB6S,GAAmBrf,EAAK,GAAGwM,eAG/BuT,IAAiB,IAGrBniB,qBAAU,WACN,GAAIe,GAAkB,EAAG,CACrB,IAAM8jB,EAAQC,YAAW,kBAAMrD,GAAmB1gB,GAAkB,KAAI,KACxE,OAAO,kBAAMgkB,aAAaF,IAE1B3D,EAAiB,KAGtB,CAACngB,KAEJf,qBAAU,WACN,GAAIc,GAAc,EAAG,CACjB,IAAM+jB,EAAQC,YAAW,kBAAMtD,GAAe1gB,GAAc,KAAI,KAChE,OAAO,kBAAMikB,aAAaF,IAE1BzD,GAAa,KAElB,CAACtgB,KAEJd,qBAAU,WACN,GAAIgB,GAAgB,EAAG,CACnB,IAAM6jB,EAAQC,YAAW,kBAAMpD,GAAiB1gB,GAAgB,KAAI,KACpE,OAAO,kBAAM+jB,aAAaF,IAE1BnD,GAAiB,KAEtB,CAAC1gB,KAEJhB,qBAAU,WACN,GAAIiB,GAAe,EAAG,CAClB,IAAM4jB,EAAQC,YAAW,kBAAMnD,GAAgB1gB,GAAe,KAAI,KAClE,OAAO,kBAAM8jB,aAAaF,IAE1BlD,GAAgB,KAErB,CAAC1gB,KAEJjB,qBAAU,WACN,GAAIkB,GAAe,EAAG,CAClB,IAAM2jB,EAAQC,YAAW,kBAAMlD,GAAgB1gB,GAAe,KAAI,KAClE,OAAO,kBAAM6jB,aAAaF,IAE1BjD,GAAgB,KAErB,CAAC1gB,KAGJlB,qBAAU,WACN,GAAImB,GAAmB,EAAG,CACtB,IAAM0jB,EAAQC,YAAW,kBAAMvQ,GAAoBpT,GAAmB,KAAI,KAC1E,OAAO,kBAAM4jB,aAAaF,IACE,IAArB1jB,GACP0gB,GAAsB,GAEtBtN,GAAoB,KAEzB,CAACpT,KAIJ,IAAMsjB,GAAc,SAACf,EAASQ,EAAMM,GAChCvqB,QAAQC,IAAI,mBACZD,QAAQC,IAAI,YAAawpB,GACzB/B,GAAgB,IAAM6C,EAAW5V,WAAarN,KAAKC,QAAO,IAAIoR,MAAOyQ,UAAY,MACjFppB,QAAQC,IAAI,+BAAgC,IAAMsqB,EAAW5V,WAAarN,KAAKC,QAAO,IAAIoR,MAAOyQ,UAAY,OAE7F,IAAZK,GACAzpB,QAAQC,IAAI,0BAA2BgqB,GACvCzB,GAAiByB,GACjBnC,IAAc,KACK,IAAZ2B,IACPzpB,QAAQC,IAAI,oCACZmB,KAAgB8G,MAAK,SAACC,GAClBnI,QAAQC,IAAI,kBAAmBkI,EAAK,GAAGwM,YACvC3U,QAAQC,IAAI,sBAAuBkI,EAAK,GAAGwM,YAC3CwS,GAAahf,EAAK,GAAGwM,YACrBsS,EAAiB9e,EAAK,GAAGwM,YACzB4S,GAAepf,EAAK,GAAGwM,YACvB6S,GAAmBrf,EAAK,GAAGwM,YAC3BmT,IAAc,OAGtBznB,KAAiB6H,MAAK,SAACC,GACnBnI,QAAQC,IAAI,cAAekI,EAAKwM,YAChC2S,GAAenf,EAAKwM,gBAKtB+V,GAAkB,SAACN,EAAWH,GAChCjqB,QAAQC,IAAI,mBACC,IAATgqB,GACAjqB,QAAQC,IAAI,mBAAoBgqB,GAChC3B,GAAqB2B,GACrB7B,IAAkB,KAElBpoB,QAAQC,IAAI,iDACZmoB,IAAkB,KAIpB+B,GAAuB,SAACV,EAASQ,EAAMC,GACzClqB,QAAQC,IAAI,uCAAwCwpB,GACpDhC,GAAiB,IAAMyC,EAAYvV,WAAarN,KAAKC,QAAO,IAAIoR,MAAOyQ,UAAY,MACnFppB,QAAQC,IAAI,gCAAiC,IAAMiqB,EAAYvV,WAAarN,KAAKC,QAAO,IAAIoR,MAAOyQ,UAAY,OAC/F,IAAZK,GACAzpB,QAAQC,IAAI,eAAgBgqB,EAAKtV,YACjCiU,IAAoB,GACpBF,GAAkBuB,EAAKtV,cACJ,IAAZ8U,IACPzpB,QAAQC,IAAI,iCAAkCgqB,EAAKtV,YACnDwS,GAAa,GACbyB,IAAoB,GACpBF,GAAkBuB,EAAKtV,aAE3BtU,KAAiB6H,MAAK,SAACC,GACnBnI,QAAQC,IAAI,cAAekI,EAAKwM,YAChC2S,GAAenf,EAAKwM,eAExBqT,IAAe,IAIbwB,GAAgB,SAAC5oB,EAAQnC,EAAS4qB,GACpC1B,GAAgB,QAGpB,OACI,cAACptB,GAAawwB,SAAd,CAAuBhwB,MAAO,CAACwE,EAAS/E,EAAaC,EAAaC,EAAeC,EAAemB,EAAgBlB,IAAhH,SACI,cAACuJ,GAAW4mB,SAAZ,CAAqBhwB,MAAO,CAAC4L,GAAcygB,GAAiBxgB,GAAaygB,GAAgBH,GAAWC,GAAcH,EAAeC,EAAkBrsB,GAAa0sB,GAAgBzgB,GAAaC,GAAiBC,GAAeC,GAAcC,GAAcC,GAAkBmT,GAAoBC,GAAqBjX,EAAe8D,GAAnU,SAEI,eAAC,IAAD,CAAQ6jB,SAAS,IAAjB,UAEI,cAAChY,GAAD,IACA,cAAC,GAAD,CAAa1O,KAAMujB,GAAYrjB,SAAS,gBAAgBC,OAAK,EAACC,sBAAoB,EAAlF,SACK,kBACG,qCAEuB,IAAlB6jB,GAAsB,2DAA8B,cAAC,IAAD,CACjDxtB,MAAOwtB,GACPvtB,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,OAAe,kDACjC,cAAC,GAAD,CAAQiB,QAAS,kBAAM0rB,IAAc,IAArC,yBAMZ,cAAC,GAAD,CAAaxjB,KAAMyjB,GAAavjB,SAAS,gBAAgBC,OAAK,EAACC,sBAAoB,EAAnF,SACK,kBACG,sCAE0B,IAArBikB,GAA4B,4DAA+B,cAAC,IAAD,CACxD5tB,MAAO0tB,GACPztB,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,OAAe,wDAA2B,cAAC,IAAD,CACpDJ,MAAO0tB,GACPztB,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,OACtB,cAAC,GAAD,CAAQiB,QAAS,kBAAM4rB,IAAe,IAAtC,yBAOZ,cAAC,GAAD,CAAa1jB,KAAM2jB,GAAezjB,SAAS,gBAAgBC,OAAK,EAACC,sBAAoB,EAArF,SACK,kBACG,qCAE4B,MAAvBmkB,GAA6B,qEAAwC,cAAC,IAAD,CAClE9tB,MAAOguB,GACP/tB,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,OAAuC,MAAvB0tB,GAA6B,sEAAyC,cAAC,IAAD,CAChG9tB,MAAOguB,GACP/tB,YAAa,OACbC,iBAAkB,IAClBC,mBAAmB,EACnBC,aAAc,OAAe,8EACrC,cAAC,GAAD,CAAQiB,QAAS,kBAAM8rB,IAAiB,IAAxC,yBAOZ,cAAC,GAAD,CAAa5jB,KAAM6jB,GAAgB3jB,SAAS,gBAAgBC,OAAK,EAACC,sBAAoB,EAAtF,SACK,kBACG,qCAE2B,IAAtB2jB,GAA0B,iEAAoC,cAAC,IAAD,CAC3DttB,MAAOstB,GACPrtB,YAAa,OACbE,mBAAmB,EACnBC,aAAc,OAAe,yDACjC,cAAC,GAAD,CAAQiB,QAAS,kBAAMgsB,IAAkB,IAAzC,yBAOZ,cAAC,EAAD,IAEA,cAAC,GAAD,UACI,cAAC,GAAD,MAEJ,eAAC,IAAD,WACI,cAAC,IAAD,CAAO6C,KAAK,IAAIC,OAAK,EAACC,UAAW5iB,KACjC,cAAC,IAAD,CAAO0iB,KAAK,YAAYC,OAAK,EAACC,UAAW/gB,KACzC,cAAC,IAAD,CAAO6gB,KAAK,WAAWC,OAAK,EAACC,UAAWle,KACxC,cAAC,IAAD,CAAOge,KAAK,YAAYC,OAAK,EAACC,UAAW/rB,KACzC,cAAC,IAAD,CAAO6rB,KAAK,cAAcC,OAAK,EAACC,UAAW/f,KAC3C,cAAC,IAAD,CAAO6f,KAAK,cAAcC,OAAK,EAACC,UAAWxa,KAC3C,cAAC,IAAD,CAAOsa,KAAK,SAASC,OAAK,EAACC,UAAW5Y,KACtC,cAAC,IAAD,CAAO0Y,KAAK,WAAWC,OAAK,EAACC,UAAW9X,KACxC,cAAC,IAAD,CAAO4X,KAAK,iBAAiBC,OAAK,EAACC,UAAWpW,KAC9C,cAAC,IAAD,CAAOkW,KAAK,gBAAgBC,OAAK,EAACC,UAAWhW,KAC7C,cAAC,IAAD,CAAO8V,KAAK,SAASC,OAAK,EAACC,UAAW/U,KACtC,cAAC,IAAD,CAAO6U,KAAK,gBAAgBC,OAAK,EAACC,UAAW/Q,KAC7C,cAAC,IAAD,CAAO6Q,KAAK,cAAcC,OAAK,EAACC,UAAW9P,KAC3C,cAAC,IAAD,CAAO4P,KAAK,iBAAiBC,OAAK,EAACC,UAAW7N,KAC9C,cAAC,IAAD,CAAO2N,KAAK,gBAAgBC,OAAK,EAACC,UAAW9K,KAC7C,cAAC,IAAD,CAAO4K,KAAK,YAAYC,OAAK,EAACC,UAAWlK,KACzC,cAAC,IAAD,CAAOgK,KAAK,cAAcC,OAAK,EAACC,UAAW5L,KAC3C,cAAC,IAAD,CAAO0L,KAAK,cAAcC,OAAK,EAACC,UAAW5H,KAC3C,cAAC,IAAD,CAAO0H,KAAK,iBAAiBC,OAAK,EAACC,UAAWvI,KAC9C,cAAC,IAAD,CAAOqI,KAAK,kBAAkBC,OAAK,EAACC,UAAW9H,QAEnD,cAAC,GAAD,YClsBL,OAA0B,4CCOzC,IAAM1a,GAAK,2NAmBLyiB,GAAQ,4CAKdC,IAASvR,OACP,eAAC,IAAMwR,WAAP,WACE,cAAC,GAAD,CAAO1iB,UAAU,WAAWC,UAAQ,EAACC,aAAW,EAACC,MAAI,EAACC,OAAK,EAA3D,SACE,wBAAQtM,IAAK6uB,GAAiBvmB,KAAK,gBAErC,cAAC6F,GAAD,IACA,cAAC,GAAD,IACA,cAACugB,GAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.df2c2af1.chunk.js","sourcesContent":["export enum Colors {\r\n\tDarkTransparant = 'rgba(16,21,34,.9)',\r\n\tLightTransparant = 'rgba(255,255,255,.9)',\r\n\tWhite = '#FFFFFF',\r\n\tBlack = '#000000',\r\n\tGreen = '#2D5A03',\r\n\tLightGreen = '#5FAA19',\r\n\tRed = '#FF0000',\r\n\tPrimaryBlue = '#4B59F7',\r\n\tSecondaryBlue = '#0467FB',\r\n\tBorder = '#28323E'\r\n}\r\n","import { IResponsiveValue } from './IResponsiveValue';\r\n\r\nexport const breakpointSetting: Required<Omit<\r\n\tIResponsiveValue<number>,\r\n\t'default'\r\n>> = {\r\n\txl: 1200,\r\n\tl: 992,\r\n\tm: 768,\r\n\ts: 576,\r\n};\r\n\r\n","import { IResponsive } from './IResponsiveValue';\r\nimport { breakpointSetting } from './settings';\r\n\r\ntype Key = keyof IResponsive;\r\nexport const breakpoint = Object.keys(breakpointSetting)\r\n\t.map((key) => [key, breakpointSetting[key as Key]] as [Key, number])\r\n\t.reduce(\r\n\t\t(prev, [key, width]) => ({\r\n\t\t\t...prev,\r\n\t\t\t...{ [key]: `@media (min-width: ${width}px)` },\r\n\t\t}),\r\n\t\t{} as IResponsive<string>,\r\n\t);\r\n","import React from \"react\";\r\nimport { StateContext } from \"../../../App\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport styled from \"@emotion/styled/macro\";\r\nimport { Colors } from \"../../../styles/theme/colors/Colors\";\r\n\r\nexport const CoinStats = () => {\r\n\r\n    const [, gangbalance, mmConnected, mainConnected, testConnected, , inGameFunds] = React.useContext(StateContext);\r\n\r\n    return (\r\n        <>\r\n            {mmConnected && mainConnected === true ? (\r\n                <StatsContainer key=\"statscontainerMain\">\r\n                    <StatsItem key=\"gangmainBalance\">\r\n                        <NumberFormat\r\n                            value={gangbalance}\r\n                            displayType={\"text\"}\r\n                            decimalSeparator={\".\"}\r\n                            thousandSeparator={true}\r\n                            decimalScale={0}\r\n                            prefix={\"Wallet ₲ Balance: \"}\r\n                        />\r\n                    </StatsItem>\r\n\r\n                    <StatsItem key=\"inGamemainFunds\">\r\n                        <NumberFormat\r\n                            value={inGameFunds}\r\n                            displayType={\"text\"}\r\n                            decimalSeparator={\".\"}\r\n                            thousandSeparator={true}\r\n                            decimalScale={0}\r\n                            prefix={\"In-game ₲ Balance: \"} />\r\n                    </StatsItem>\r\n                </StatsContainer>) : [(mmConnected && mainConnected !== true && testConnected === true ?\r\n                    <StatsContainer key=\"statscontainerTest\">\r\n                        <StatsItem key=\"gangtestbalance\">\r\n                            <NumberFormat\r\n                                value={gangbalance}\r\n                                displayType={\"text\"}\r\n                                decimalSeparator={\".\"}\r\n                                thousandSeparator={true}\r\n                                decimalScale={0}\r\n                                prefix={\"Wallet ₲ Balance: \"}\r\n                            />\r\n                        </StatsItem>\r\n\r\n                        <StatsItem key=\"inGametestFunds\">\r\n                            <NumberFormat\r\n                                value={inGameFunds}\r\n                                displayType={\"text\"}\r\n                                decimalSeparator={\".\"}\r\n                                thousandSeparator={true}\r\n                                decimalScale={0}\r\n                                prefix={\"In-game ₲ Balance: \"} />\r\n                        </StatsItem>\r\n                        <MMConnect key=\"TestNetMMConnect\">Testnet connected</MMConnect>\r\n                    </StatsContainer> : (mmConnected ? <MMConnect key=\"UnsupportedChain\">Unsupported chain</MMConnect> : null))]\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst StatsItem = styled.li`\r\n    position: relative;\r\n    padding: 7px 0px 0px 0px;\r\n`\r\n\r\nconst StatsContainer = styled.ul`\r\n    list-style-type: none;\r\n    justify-content: space-between;\r\n    color: ${Colors.White};\r\n    font-size: 10px;\r\n    text-align: center;\r\n    padding-left: 0;\r\n    align-self: center;\r\n\r\n    @media screen and (max-width: 960px) {\r\n        height: 120px;\r\n        color: #fff;\r\n        font-size: 1.2rem;\r\n        text-align: center;\r\n        &:hover {\r\n            color: #4b59f7;\r\n            transition: all 0.3s ease;\r\n        }\r\n    }\r\n`\r\n\r\nconst MMConnect = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    align-self: center;\r\n    text-decoration: none;\r\n    padding: 4px 8px;\r\n    height: 10px;\r\n    width: 100%;\r\n    border: none;\r\n    outline: none;\r\n    color: ${Colors.Red};\r\n    @media screen and (max-width: 960px) {\r\n        align-items: top;   \r\n    }\r\n`","export enum ZIndex {\r\n\tBackground = -1,\r\n\tSidebar = 100,\r\n\tNavIcon = 110,\r\n\tNavbar = 900,\r\n}\r\n","import React, { useState } from 'react';\r\nimport { FaBars, FaTimes } from 'react-icons/fa';\r\nimport { GiThompsonM1 } from \"react-icons/gi\";\r\n\r\nimport styled from '@emotion/styled/macro';\r\nimport { StateContext } from '../../App';\r\nimport { Link } from 'react-router-dom';\r\nimport { Colors } from '../../styles/theme/colors/Colors';\r\nimport { breakpoint } from '../../styles/theme/responsive/breakpoint';\r\nimport { CoinStats } from './coinstats/CoinStats';\r\nimport { ZIndex } from '../../styles/globals/ZIndex';\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    const [click, setClick] = useState(false)\r\n    const [gameClick, setGameClick] = useState(false)\r\n    const [, , , , , adminConnected,] = React.useContext(StateContext);\r\n    const handleClick = () => setClick(!click)\r\n    const closeMobileMenu = () => setClick(false)\r\n    const handleGameClick = () => setGameClick(!gameClick)\r\n    const closeGameMenu = () => setGameClick(false)\r\n    const handleBoth = () => { closeMobileMenu(); closeGameMenu() };\r\n\r\n    return (\r\n        <StyledNavbar>\r\n            <NavbarContainer>\r\n                <StyledMenuButton onClick={handleGameClick}>\r\n                    {gameClick\r\n                        ? <FaTimes size={36} color='white' />\r\n                        : <GiThompsonM1 size={36} color='white' />}\r\n                </StyledMenuButton>\r\n                <StyledLogoLink to=\"/\" onClick={handleBoth}>\r\n                    <StyledLogo src=\"images/logo_gang_101522.png\" />\r\n                    Blockgangsters\r\n                </StyledLogoLink>\r\n\r\n\r\n                <NavMenu onClick={handleClick} click={click}>\r\n                    <StyledNavLink to=\"/\">Home</StyledNavLink>\r\n                    <StyledNavLink to=\"/helppage\">Guide</StyledNavLink>\r\n                    <StyledNavLink to=\"/whitepaper\">Whitepaper</StyledNavLink>\r\n                    <StyledNavLink to=\"/contract\">Contract</StyledNavLink>\r\n                    <StyledNavLink to=\"/roadmap\">Roadmap</StyledNavLink>\r\n                    <StyledNavLink to=\"/tokenomics\">Tokenomics</StyledNavLink>\r\n                    {adminConnected && <StyledNavLink to=\"/admin\">Admin page</StyledNavLink>}\r\n                    <CoinStats />\r\n\r\n                </NavMenu>\r\n\r\n                <GameMobileMenu onClick={handleGameClick} gameClick={gameClick}>\r\n                    <StyledGameNavigation>\r\n                        <StyledTitle> Control Panel</StyledTitle>\r\n                        <StyledLink to='/deposit'>Deposit/Withdraw</StyledLink>\r\n                        <StyledSubtitle> Lone wolf </StyledSubtitle>\r\n                        <StyledLink to='/indprotection'>Buy protection</StyledLink>\r\n                        <StyledLink to='/attackplayer'>Attack a player</StyledLink>\r\n                        <StyledLink to='/crime'>Crime in the city</StyledLink>\r\n                        <StyledLink to='/crowdfunding'>Crowdfunding</StyledLink>\r\n                        <StyledLink to='/trainstats'>Train stats</StyledLink>\r\n                        <StyledSubtitle> Family </StyledSubtitle>\r\n                        <StyledLink to='/familycontrol'>Family control page</StyledLink>\r\n                        <StyledLink to='/familyshop'>Family shop</StyledLink>\r\n                        <StyledLink to='/attackfamily'>Family attack</StyledLink>\r\n                        <StyledLink to='/overview'>Family list</StyledLink>\r\n                        <StyledSubtitle> Leaderboards </StyledSubtitle>\r\n                        <StyledLink to='/richestplayers'>Richest players</StyledLink>\r\n                        <StyledLink to='/highestlevels'>Highest levels</StyledLink>\r\n                        <StyledLink to='/statistics'>Statistics</StyledLink>\r\n                    </StyledGameNavigation>\r\n                </GameMobileMenu>\r\n\r\n                <StyledMenuButton onClick={handleClick}>\r\n                    {click\r\n                        ? <FaTimes size={36} color='white' />\r\n                        : <FaBars size={36} color='white' />}\r\n                </StyledMenuButton>\r\n            </NavbarContainer>\r\n        </StyledNavbar >\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n\r\n\r\nconst StyledNavbar = styled.nav`\r\n            display: flex;\r\n            justify-content: space-between;\r\n            height: 80px;\r\n            width: 100%;\r\n            background: #101522;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            font-size: 1.2rem;\r\n            position: sticky;\r\n            top: 0;\r\n            z-index: ${ZIndex.Navbar};\r\n            border-bottom: 1px solid ${Colors.Border};\r\n            `\r\n\r\nconst StyledNavLink = styled(Link)`\r\n            color: ${Colors.White};\r\n            text-decoration: none;\r\n            text-align: center;\r\n            margin-left: 10px;\r\n            ${breakpoint.l} {\r\n                padding: 0 10px;\r\n            line-height: 80px;\r\n            text-align: left;\r\n\r\n    }\r\n            `\r\n\r\nexport const Nav = styled.nav`\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            background: #101522;\r\n            height: 80px;\r\n            width: 100vw;\r\n            position: sticky;\r\n            `\r\n\r\nexport const NavbarContainer = styled.div`\r\n            display: flex;\r\n            justify-content: space-between;\r\n            width: 100%;\r\n            height: 80px;\r\n            padding-right: 30px;\r\n            padding-left: 30px;\r\n            ${breakpoint.l} {\r\n\r\n            }\r\n            `\r\n\r\nexport const StyledLogoLink = styled(Link)`\r\n            font-family: 'The Godfather';\r\n            color: #fff;\r\n            cursor: pointer;\r\n            text-decoration: none;\r\n            font-size: 30px;\r\n            display: flex;\r\n            align-items: center;\r\n            text-align: center;\r\n            ${breakpoint.l} {\r\n                font-size: 65px;\r\n    }\r\n`\r\n\r\nexport const StyledLogo = styled.img`\r\n            display: none;\r\n    ${breakpoint.l} {\r\n        padding-right: 5px;\r\n        max-height: 80%;\r\n        max-width: 80%;\r\n        display: flex;\r\n    }\r\n`\r\n\r\nexport const StyledMenuButton = styled.div`\r\n            cursor: pointer;\r\n            z-index: ${ZIndex.NavIcon};\r\n            display: flex;\r\n            align-self: center; // vertically\r\n            ${breakpoint.l} {\r\n                display: none; // set to none when finished (7 nov 21)\r\n    }\r\n  `\r\n\r\nexport const NavMenu = styled.div`\r\n            display: flex;\r\n            flex-direction: column;\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n            margin-top: 80px;\r\n            width: 100vw;\r\n            height: 100vh;\r\n            display: ${({ click }) => (!click && 'none')};\r\n            background: #101522;\r\n\r\n\r\n            ${breakpoint.l} {\r\n                display: flex;\r\n            flex-direction: row;\r\n            position: inherit;\r\n            height: auto;\r\n            width: auto;\r\n            list-style: none;\r\n            text-align: center;\r\n            margin: 0;\r\n            background: none;\r\n    }\r\n            `\r\n\r\nexport const GameMobileMenu = styled.div`\r\n            display: flex;\r\n            flex-direction: column;\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n            margin-top: 80px;\r\n            width: 100vw;\r\n            height: 100vh;\r\n            display: ${({ gameClick }) => (!gameClick && 'none')};\r\n            background: #101522;\r\n\r\n\r\n            ${breakpoint.l} {\r\n                display: none;\r\n    }\r\n`\r\n\r\n\r\nexport const StyledTitle = styled.h1`  \r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: bold;\r\n`\r\n\r\nexport const StyledSubtitle = styled.div`\r\n    color: white;\r\n    margin-top: 0px;\r\n    margin-bottom: 0px;\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n    color: #fff;\r\n    display: flex;\r\n    text-decoration: none;\r\n    padding-left: 20px;\r\n    height: auto;\r\n    \r\n    &:hover {\r\n        border-left: 2px solid #4b59f7;\r\n    }\r\n`\r\n\r\nexport const StyledGameNavigation = styled.div`\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n`","import styled from '@emotion/styled/macro'\r\nimport { Link } from 'react-router-dom';\r\nimport { breakpoint } from '../../styles/theme/responsive/breakpoint';\r\n\r\nexport const FooterContainer = styled.div`\r\n    background-color:rgba(16,21,34,.9);\r\n    padding: 4rem 0 2rem 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    height: 100%;\r\n    ${breakpoint.m} {\r\n        margin-left: 20%;\r\n    }\r\n`;\r\n\r\nexport const FooterSubscription = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    color: #fff;\r\n`;\r\n\r\nexport const FooterSubHeading = styled.p`\r\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', 'Arial', 'sans-serif';\r\n    font-size: 24px;\r\n`;\r\n\r\nexport const FooterSubText = styled.p`\r\n    font-size: 20px;\r\n`\r\n\r\n\r\nexport const FooterLinkTitle = styled.h2`\r\n`\r\n\r\nexport const FooterLink = styled(Link)`\r\n    color: #fff;\r\n    text-decoration: none;\r\n\r\n&:hover {\r\n    color: #0467fb;\r\n    transition: 0.3s ease out;\r\n}`\r\n\r\nexport const SocialMedia = styled.section`\r\n    width: 100%;\r\n`\r\n\r\nexport const SocialMediaWrap = styled.div`\r\n    display: flex;\r\n    justify-content: space-between; //alignment of items on main axis. So here we keep space between but align-items holds centered @ cross axis\r\n    align-items: center; // default alignment for all items inside container -- along the cross axis!\r\n    width: 90%;\r\n    margin: 40px auto 0 auto;\r\n    flex-direction: column;\r\n\r\n    ${breakpoint.m} {\r\n        flex-direction: row;\r\n    }\r\n`\r\n\r\nexport const SocialLogo = styled(Link)`\r\n    color: #fff;\r\n    justify-self: start; //the surrounding box gave this box for example 1000 px width, but box is only 300px. In this case justify-self puts it left/middle/center etc\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    font-size: 2rem;\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nexport const SocialIcon = styled.img` //FaMagento is the logo \r\n    margin-right: 10px;\r\n    box-sizing: border-box;\r\n    max-height: 50px;\r\n    max-width: 50px; //resize to 50px in footer\r\n`\r\n\r\n\r\nexport const WebsiteRights = styled.small`\r\n    color: #fff;\r\n    align-items: center;\r\n`\r\n\r\nexport const SocialIcons = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 240px;\r\n`\r\n\r\nexport const SocialIconLink = styled.a`\r\n    color: #fff;\r\n    font-size: 24px;\r\n`\r\n\r\nexport const Ulist = styled.ul`\r\n    color: #fff;\r\n    font-size: 14px;\r\n    list-style-type: none;\r\n`\r\n\r\nexport const Uitem = styled.li`\r\n    color: #fff;\r\n    font-size: 14px;\r\n`\r\n","import React from 'react';\r\nimport { Ulist, Uitem, FooterContainer, FooterSubscription, FooterSubHeading, FooterSubText, SocialMedia, SocialMediaWrap, SocialLogo, WebsiteRights, SocialIcons, SocialIconLink, SocialIcon } from './Footer.elements';\r\nimport { FaTelegram, FaTwitter, FaDiscord } from 'react-icons/fa';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterContainer>\r\n            <FooterSubscription>\r\n                <FooterSubHeading>\r\n                    Join the underworld now to build your empire!\r\n                </FooterSubHeading>\r\n                <FooterSubText>Cash out from the control panel to your left.</FooterSubText>\r\n\r\n            </FooterSubscription>\r\n\r\n\r\n            <SocialMedia>\r\n                <SocialMediaWrap>\r\n                    <SocialLogo to=\"/\">\r\n                        <SocialIcon src=\"images/logo_gang_101522.png\" to=\"/\" />\r\n                        Blockgangsters\r\n                    </SocialLogo>\r\n                    <WebsiteRights><Ulist><Uitem>BlockGangsters © 2021, All rights reserved</Uitem>\r\n                        <Uitem>email us at info@blockgangsters.io</Uitem>\r\n                    </Ulist>\r\n                    </WebsiteRights>\r\n\r\n                    <SocialIcons>\r\n                        <SocialIconLink href=\"https://discord.gg/j3JGYthB\" target=\"_blank\" aria-label=\"Discord\">\r\n                            <FaDiscord />\r\n                        </SocialIconLink>\r\n                        <SocialIconLink href=\"https://twitter.com/blockgangsters\" target=\"_blank\" aria-label=\"Twitter\">\r\n                            <FaTwitter />\r\n                        </SocialIconLink>\r\n                        <SocialIconLink href=\"https://t.me/joinchat/hIJ1FYLDul1jNGQ0\" target=\"_blank\" aria-label=\"Telegram\">\r\n                            <FaTelegram />\r\n                        </SocialIconLink>\r\n                    </SocialIcons>\r\n\r\n                </SocialMediaWrap>\r\n            </SocialMedia>\r\n        </FooterContainer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","const tokenABI = [\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Approval\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Transfer\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"result\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"player\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"payOrCompensation\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"attorneyHired\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"sender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"used\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"bootstrapBought\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"player\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"timestamp\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"boughtProtection\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"player\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"crimeSuccess\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"crimeLoot\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"crimeStamp\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"crimeResult\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"player\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"rewardfunding\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"crowdFundGains\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"sender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ethDeposited\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"familyStarted\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"familyIndex\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"player\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"fundsDeposited\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"familyIndex\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"fundsDistributed\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"member\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"familyId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"joinedFamily\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"familyIndex\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"familyAttBonus\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"familyDefBonus\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"newFamilyItems\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"newFamilyRank\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"newFamilyRank\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"sender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"newPlayerAdded\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"familyIndex\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"successOrgAttack\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"orgAttackLoot\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"organizedAttackResult\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"successAttack\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"attacker\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"defender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"loot\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"attackStamp\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"playerAttacked\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"player\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"stamp\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"playerJailed\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"player\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"playerRemoved\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"sender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokensDeposited\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"receiver\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokensVested\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"sender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokensWithdrawn\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"choice\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"trainer\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"newxp\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"trainedStats\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"withdrawnBalance\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"approve\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"revenge\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"attackRandomPlayerRequest\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"time\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"buyProtection\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"crime\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"crimeStart\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"crowdFundingReturn\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"choice\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"crowdFundStart\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"subtractedValue\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"decreaseAllowance\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"depositFamilyBank\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"depositFunds\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_recipient\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"distributeFamilyBank\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getVesting\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"hireAttorney\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"addedValue\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"increaseAllowance\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"joinFamilyIndex\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"joinOrUprankFamily\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"user\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"leaveFamily\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"organizedAttack\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"requestId\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"randomness\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"rawFulfillRandomness\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"choice\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"receiveEth\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"removeFamily\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"entreeFee\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"missionFee\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"startFamily\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"choice\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"statsTraining\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"recipient\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transfer\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address payable\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferETH\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"sender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"recipient\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferFrom\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"category\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"item\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"upgradeFamilyItems\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"withdrawFunds\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"activePlayers\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"allowance\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"account\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"balanceOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"decimals\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint8\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint8\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getActiveList\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"indexInput\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getAllFamilyMembers\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getAttackStatus\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"account\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getAttackXP\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getClaimed\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getCrimeStatus\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getCrowdfundStatus\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"account\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getDefenseXP\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_user\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getFamilyAttBonus\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getFamilyBank\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_user\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getFamilyDefBonus\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getFamilyFees\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256[2]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256[2]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getFamilyNames\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bytes32[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"indexInput\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getFamilyOwner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_user\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getFamilyRank\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"playerAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getingameFunds\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getJailStatus\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_user\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getMemberFamilyIndex\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"name\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"randomNumber\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"stages\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"date\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokensUnlocked\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"symbol\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"totalSupply\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"vesterSupply\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]\r\n\r\n  export default tokenABI\r\n  ","import { ethers } from 'ethers'\r\nimport tokenABI from './EthABI'\r\nexport const tokenAddress = \"0x3D75D25B181D489E273290EdE9996F2159F6713f\";\r\nexport const linkAddress = \"0xb0897686c545045aFc77CF20eC7A532E3120E0F1\";\r\n\r\nexport async function getERCBalance(address) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  let balance = await gangContract.balanceOf(await signer.getAddress());\r\n  balance = ethers.utils.formatEther(balance);\r\n  return balance;\r\n}\r\n\r\nexport async function getLINKBalance() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const linkContract = new ethers.Contract(linkAddress, tokenABI, signer);\r\n  let balance = await linkContract.balanceOf(tokenAddress);\r\n  balance = ethers.utils.formatEther(balance);\r\n  return balance;\r\n}\r\n\r\nexport async function EthBalance(address) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  return provider.getBalance(address)\r\n};\r\n\r\nexport const connectWallet = async () => {\r\n\r\n  if (window.ethereum) { //check if Metamask is installed\r\n    try {\r\n      const address = await window.ethereum.send('eth_requestAccounts'); //connect Metamask\r\n      console.log(\"Succesfully connected to MetaMask\");\r\n      console.log(address)\r\n      const obj = {\r\n        connectedStatus: true,\r\n        status: \"\",\r\n        address: address\r\n      }\r\n      console.log(\"conn status: \", obj[\"connectedStatus\"])\r\n      return obj;\r\n    } catch (error) {\r\n      return {\r\n        connectedStatus: false,\r\n        status: \"🦊 Connect to Metamask using the button on the top right.\"\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      connectedStatus: false,\r\n      status: \"🦊 You must install Metamask into your browser: https://metamask.io/download.html\"\r\n    }\r\n  }\r\n};\r\n\r\nexport async function getingameFunds(address) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  if (address === undefined) {\r\n    address = await signer.getAddress();\r\n  }\r\n  let balance = await gangContract.getingameFunds(address); // failing here --> when entering manually OK.\r\n  return balance;\r\n}\r\n\r\nexport async function attackPlayer(revenge) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  let revengeAddress;\r\n  if (revenge === true) {\r\n    revengeAddress = \"0x000000000000000000000000000000000000dEaD\";\r\n  } else {\r\n    revengeAddress = signer.getAddress(); // all but 0x00..00dEaD means revenge\r\n  }\r\n  await gangContract.attackRandomPlayerRequest(revengeAddress);\r\n}\r\n\r\nexport async function crowdFundStart(amount, choice) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  await gangContract.crowdFundStart(amount, choice);\r\n}\r\n\r\nexport async function crowdFundingReturn() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  await gangContract.crowdFundingReturn();\r\n}\r\n\r\nexport async function buyProtection(time) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  await gangContract.buyProtection(time);\r\n}\r\n\r\n\r\nexport async function crime(choice) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  await gangContract.crimeStart(choice);\r\n}\r\n\r\nexport async function Statstraining(choice) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  await gangContract.statsTraining(choice);\r\n}\r\n\r\nexport async function hireAttorney() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  await gangContract.hireAttorney();\r\n}\r\n\r\nexport async function getJailStatus() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  let jailStatus = await gangContract.getJailStatus();\r\n  return jailStatus\r\n}\r\n\r\nexport async function getAttackStatus() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  let attackStatus = await gangContract.getAttackStatus();\r\n  return attackStatus\r\n}\r\n\r\nexport async function getCrowdfundStatus() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  let crowdfundStatus = await gangContract.getCrowdfundStatus();\r\n  return crowdfundStatus\r\n}\r\n\r\nexport async function getCrimeStatus() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  let crimeStatus = await gangContract.getCrimeStatus();\r\n  return crimeStatus\r\n}\r\n\r\nexport async function getAttackXP(address) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  if (address === undefined) {\r\n    address = await signer.getAddress();\r\n  }\r\n  let attackLevel = await gangContract.getAttackXP(address);\r\n  return attackLevel;\r\n}\r\n\r\nexport async function getDefenseXP(address) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  if (address === undefined) {\r\n    address = await signer.getAddress();\r\n  }\r\n  let defenseLevel = await gangContract.getDefenseXP(address);\r\n  return defenseLevel;\r\n}\r\n\r\nexport async function getActiveList() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  let activePlayerList = await gangContract.getActiveList();\r\n  return activePlayerList;\r\n}\r\n\r\n\r\nexport async function depositFunds(amount) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  let gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  await gangContract.depositFunds(amount);\r\n}\r\n\r\n\r\nexport async function withdrawFunds(amount) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  let gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  await gangContract.withdrawFunds(amount);\r\n}\r\n\r\nexport async function receiveEth(amount) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  let gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  await gangContract.receiveEth(1, { value: ethers.utils.parseEther(amount) });\r\n}\r\n\r\nexport async function transferETH() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  let gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  await gangContract.transferETH(signer.getAddress());\r\n}\r\n\r\nexport async function getClaimed() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  let amountVested = await gangContract.getClaimed();\r\n  return amountVested\r\n}\r\n\r\nexport async function getVesting() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  await gangContract.getVesting();\r\n}\r\n\r\nexport async function getIfActive() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n  let isActive = await gangContract.getActiveList();\r\n  let isActivePlayer = false;\r\n  let signerAddress = await signer.getAddress();\r\n  for (let i = 0; i < isActive.length; i++) {\r\n    if (isActive[i] === signerAddress) {\r\n      isActivePlayer = true;\r\n    }\r\n  }\r\n  return isActivePlayer;\r\n}\r\n","import styled from \"@emotion/styled/macro\"\r\nimport { ButtonHTMLAttributes } from \"react\"\r\nimport { Colors } from \"../../../../styles/theme/colors/Colors\"\r\n\r\ninterface ISubmitButtonProps\r\n    extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    primary?: boolean,\r\n    big?: boolean,\r\n    fontBig?: boolean\r\n}\r\nexport const SubmitButton = (props: ISubmitButtonProps) => {\r\n    return (\r\n        <StyledSubmitButton {...props} />\r\n    )\r\n}\r\n\r\nconst StyledSubmitButton = styled.button`\r\n    border-radius: 4px;\r\n    background: ${Colors.PrimaryBlue};\r\n    height: 38px;\r\n    width: 150px;\r\n    white-space: nowrap;\r\n    padding: '10px 20px';\r\n    color: #fff;\r\n    font-size: '16px';\r\n    outline: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    justify-self: center;\r\n\r\n    &:hover {\r\n        transition: all 1.0s ease-ease-out;\r\n        background: #616189;\r\n    }\r\n`\r\n\r\n","import styled from \"@emotion/styled/macro\"\r\nimport AnimatedNumbers from \"react-animated-numbers\";\r\n\r\ninterface IBoostrapCounterProps {\r\n    bootstrapUsed: number\r\n}\r\n\r\nexport const BootstrapCounter = ({ bootstrapUsed }: IBoostrapCounterProps) => {\r\n    return (\r\n        <StyledBoostrapCounter>\r\n            <AnimatedNumbers\r\n                includeComma\r\n                animateToNumber={bootstrapUsed}\r\n                configs={[\r\n                    { mass: 1, tension: 210, friction: 300 },\r\n                ]}\r\n            />\r\n            <StyledBoostrapCounterText> /1,000 bootstrap slots used </StyledBoostrapCounterText>\r\n        </StyledBoostrapCounter>\r\n    )\r\n}\r\n\r\nconst StyledBoostrapCounter = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst StyledBoostrapCounterText = styled.div`\r\n    \r\n`","import React, { FC } from 'react';\r\nimport styled from '@emotion/styled/macro';\r\nimport { receiveEth } from '../../../../components/EthFunctions';\r\nimport { SubmitButton } from '../../../../features/shared/ui/buttons/SubmitButton';\r\nimport Popup from 'reactjs-popup';\r\nimport NumberFormat from \"react-number-format\";\r\nimport { EthContext } from '../../../../App';\r\nimport { Colors } from '../../../../styles/theme/colors/Colors';\r\nimport { BootstrapCounter } from '../../../../features/bootstrapcounter/BootstrapCounter';\r\n\r\n\r\nexport const BootstrapSlots: FC = () => {\r\n\r\n    const [popUp, setPopUp] = React.useState(false);\r\n    const [inputValue, setInputValue] = React.useState(1);\r\n\r\n    const [, , , , , , , , , , , , , , , , , , bootstrapUsed,] = React.useContext(EthContext);\r\n\r\n    return (\r\n        <StyledBootstrapSlots>\r\n            <StyledPopup open={popUp} onClose={() => setPopUp(false)} position=\"center center\" modal closeOnDocumentClick>\r\n                {() => (\r\n                    <>\r\n                        <StyledRules>\r\n                            <StyledRulesTitle>Rules:</StyledRulesTitle>\r\n                            <StyledRulesItem> Max 1000 MATIC per player (can be in multiple transactions).</StyledRulesItem>\r\n                            <StyledRulesItem> Max 1000 players.</StyledRulesItem>\r\n                            <StyledRulesItem> End date December 31, 2021.</StyledRulesItem>\r\n                        </StyledRules>\r\n                        <StyledAmount>Amount:</StyledAmount>\r\n                        <NumberFormat\r\n                            thousandsGroupStyle=\"thousand\"\r\n                            value={inputValue}\r\n                            prefix=\"MATIC  \"\r\n                            decimalSeparator=\".\"\r\n                            displayType=\"input\"\r\n                            type=\"text\"\r\n                            thousandSeparator={true}\r\n                            allowNegative={false}\r\n                            onValueChange={({ value }) => {\r\n                                setInputValue(parseInt(value))\r\n                            }} />\r\n                        <SubmitButton onClick={() => { setPopUp(false); receiveEth(inputValue.toString()) }}> Go for it! </SubmitButton>\r\n                        <ReceiveContainer>\r\n                            Amount to receive: ₲<NumberFormat\r\n                                value={inputValue * 1000000}\r\n                                displayType={\"text\"}\r\n                                decimalSeparator={\".\"}\r\n                                thousandSeparator={true}\r\n                                decimalScale={0} />\r\n                        </ReceiveContainer>\r\n                    </>\r\n                )}\r\n            </StyledPopup>\r\n            <StyledContent>\r\n                <StyledTitle>Bootstrap slots available</StyledTitle>\r\n                <CounterWrapper>\r\n                    <BootstrapCounter bootstrapUsed={bootstrapUsed} />\r\n\r\n                </CounterWrapper>\r\n            </StyledContent>\r\n\r\n        </StyledBootstrapSlots>\r\n    )\r\n}\r\n\r\n// <BuyButton onClick={() => { setPopUp(true) }}> Get them!</BuyButton>\r\nconst StyledBootstrapSlots = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`\r\n\r\nconst StyledPopup = styled(Popup)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    &-overlay {\r\n        opacity: 1;\r\n    }\r\n    &-content {\r\n        padding: 20px;\r\n        background: ${Colors.DarkTransparant};\r\n        width: 400px;\r\n        height: 250px;\r\n        border: #505064;\r\n        border-radius: 15px;\r\n        border-width: 5px;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        display: flex;\r\n    }\r\n`\r\n\r\nconst StyledContent = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    color: white;\r\n    padding: 10px;\r\n    border-radius: 15px;\r\n    width: 100%;\r\n    \r\n    animation: blink 3s;\r\n    animation-iteration-count: infinite;\r\n    border: 1px #A27818 solid;\r\n    @keyframes blink { 50% { border-color: #5EA022 ; }  }\r\n`\r\n\r\nconst StyledRules = styled.div`\r\n    color: white;\r\n    flex-direction: row; \r\n    display: inline;\r\n    font-size: 25px;\r\n`\r\n\r\nconst StyledRulesTitle = styled.div`\r\n    color: white;\r\n    flex-direction: row; \r\n    list-style-type: none; \r\n    padding-left: 10px;\r\n    font-size: 20px;\r\n`\r\n\r\nconst StyledRulesItem = styled.div`\r\n    color: white;\r\n    flex-direction: row; \r\n    list-style-type: none; \r\n    padding-left: 10px;\r\n    font-size: 15px;\r\n`\r\n\r\nconst StyledAmount = styled.div`\r\n    color: white;\r\n`\r\n\r\nconst ReceiveContainer = styled.div`\r\n    color: white;\r\n    font-size: 10px;\r\n    display: flex;\r\n    padding-left: 0.5%;\r\n`\r\n\r\nconst CounterWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column; \r\n    width: 100%;\r\n`\r\n\r\nconst StyledTitle = styled.div`\r\n    font-size: 20px;\r\n`\r\n\r\nconst BuyButton = styled.button`\r\n    border-radius: 4px;\r\n    background: ${Colors.Green};\r\n    color: white;\r\n    border: none;\r\n\r\n    &:hover {\r\n        transition: all 0.3s ease-out;\r\n        background: ${Colors.LightGreen};\r\n    }\r\n\r\n`","import { Link } from 'react-router-dom'\r\nimport styled from '@emotion/styled/macro';\r\nimport { getIfActive } from '../../../EthFunctions';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { StateContext } from '../../../../App';\r\n\r\nexport const GameNavigation = () => {\r\n    const [activePlayer, setActivePlayer] = useState(false);\r\n    const [, , mmConnected, mainConnected, , ,] = React.useContext(StateContext);\r\n\r\n    useEffect(() => {\r\n        if (mmConnected && mainConnected) {\r\n            const getActiveStatus = async () => {\r\n                let resultActive = await getIfActive();\r\n                setActivePlayer(resultActive)\r\n            }\r\n            getActiveStatus();\r\n        }\r\n    }, [mmConnected, mainConnected]); // trigger on setTriggerEvents if we want to update every 20s\r\n\r\n    return (\r\n        <StyledGameNavigation>\r\n            {activePlayer === false ? <>\r\n                <StyledTitleIdle> Control Panel </StyledTitleIdle>\r\n                <StyledLinkIdle to='/deposit'>Deposit/Withdraw</StyledLinkIdle>\r\n                <StyledSubtitleIdle> Lone wolf </StyledSubtitleIdle>\r\n                <StyledLinkIdle to='/indprotection'>Buy protection</StyledLinkIdle>\r\n                <StyledLinkIdle to='/attackplayer'>Attack a player</StyledLinkIdle>\r\n                <StyledLinkIdle to='/crime'>Crime in the city</StyledLinkIdle>\r\n                <StyledLinkIdle to='/crowdfunding'>Crowdfunding</StyledLinkIdle>\r\n                <StyledLinkFade to='/trainstats'>Train stats to start!</StyledLinkFade>\r\n                <StyledSubtitleIdle> Family </StyledSubtitleIdle>\r\n                <StyledLinkIdle to='/familycontrol'>Family control page</StyledLinkIdle>\r\n                <StyledLinkIdle to='/familyshop'>Family shop</StyledLinkIdle>\r\n                <StyledLinkIdle to='/attackfamily'>Family attack</StyledLinkIdle>\r\n                <StyledLinkIdle to='/overview'>Family list</StyledLinkIdle>\r\n                <StyledSubtitleIdle> Leaderboards </StyledSubtitleIdle>\r\n                <StyledLinkIdle to='/richestplayers'>Richest players</StyledLinkIdle>\r\n                <StyledLinkIdle to='/highestlevels'>Highest levels</StyledLinkIdle>\r\n                <StyledLinkIdle to='/statistics'>Statistics</StyledLinkIdle> </> :\r\n\r\n                <>\r\n                    <StyledTitle> Control Panel </StyledTitle>\r\n                    <StyledLink to='/deposit'>Deposit/Withdraw</StyledLink>\r\n                    <StyledSubtitle> Lone wolf </StyledSubtitle>\r\n                    <StyledLink to='/indprotection'>Buy protection</StyledLink>\r\n                    <StyledLink to='/attackplayer'>Attack a player</StyledLink>\r\n                    <StyledLink to='/crime'>Crime in the city</StyledLink>\r\n                    <StyledLink to='/crowdfunding'>Crowdfunding</StyledLink>\r\n                    <StyledLink to='/trainstats'>Train stats</StyledLink>\r\n                    <StyledSubtitle> Family </StyledSubtitle>\r\n                    <StyledLink to='/familycontrol'>Family control page</StyledLink>\r\n                    <StyledLink to='/familyshop'>Family shop</StyledLink>\r\n                    <StyledLink to='/attackfamily'>Family attack</StyledLink>\r\n                    <StyledLink to='/overview'>Family list</StyledLink>\r\n                    <StyledSubtitle> Leaderboards </StyledSubtitle>\r\n                    <StyledLink to='/richestplayers'>Richest players</StyledLink>\r\n                    <StyledLink to='/highestlevels'>Highest levels</StyledLink>\r\n                    <StyledLink to='/statistics'>Statistics</StyledLink> </>}\r\n        </StyledGameNavigation>\r\n    )\r\n}\r\n\r\nexport const StyledGameNavigation = styled.div`\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n`\r\n\r\nexport const StyledTitle = styled.h1`  \r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: bold;\r\n`\r\n\r\nexport const StyledSubtitle = styled.div`\r\n    color: white;\r\n    margin-top: 0px;\r\n    margin-bottom: 0px;\r\n`\r\n\r\n\r\nexport const StyledItem = styled.div`\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n    color: #fff;\r\n    display: flex;\r\n    text-decoration: none;\r\n    padding-left: 20px;\r\n    height: 100%;\r\n    \r\n    &:hover {\r\n        border-left: 2px solid #4b59f7;\r\n    }\r\n`\r\n\r\nexport const StyledLinkFade = styled(Link)`\r\n    color: #fff;\r\n    display: flex;\r\n    text-decoration: none;\r\n    padding-left: 20px;\r\n    height: 100%;\r\n\r\n        animation-name: bounce-7;\r\n    animation-duration: 2s; /* or: Xms */\r\n    animation-iteration-count: infinite;\r\n    animation-direction: alternate; /* or: normal */\r\nanimation-timing-function: cubic-bezier(0.280, 0.840, 0.420, 1);    animation-fill-mode: forwards; /* or: backwards, both, none */\r\n     &:hover {\r\n        border-left: 2px solid #4b59f7;\r\n    }\r\n        @keyframes bounce-7 {\r\n        0%   { transform: scale(1,1)      translateX(0); }\r\n        10%  { transform: scale(1.1,.9)   translateX(0); }\r\n        30%  { transform: scale(.9,1.1)   translateX(+30px); }\r\n        50%  { transform: scale(1.05,.95) translateY(0); }\r\n        57%  { transform: scale(1,1)      translateX(-7px); }\r\n        64%  { transform: scale(1,1)      translateX(0); }\r\n        100% { transform: scale(1,1)      translateX(0); }\r\n    }\r\n`\r\n\r\nexport const StyledLinkIdle = styled(Link)`\r\n    color: grey;\r\n    display: flex;\r\n    text-decoration: none;\r\n    padding-left: 20px;\r\n    height: 100%;\r\n    \r\n    &:hover {\r\n        border-left: 2px solid #4b59f7;\r\n    }\r\n`\r\n\r\nexport const StyledTitleIdle = styled.h1`  \r\n    font-size: 20px;\r\n    color: grey;\r\n    font-weight: bold;\r\n`\r\n\r\nexport const StyledSubtitleIdle = styled.div`\r\n    color: grey;\r\n    margin-top: 0px;\r\n    margin-bottom: 0px;\r\n`","import styled from \"@emotion/styled/macro\"\r\n\r\ninterface IProgressBarProps {\r\n    percentage: number;\r\n}\r\n\r\nexport const ProgressBar = ({ percentage }: IProgressBarProps) => {\r\n    return (\r\n        <StyledProgressBarShell >\r\n            <StyledProgressBarFiller percentage={percentage} />\r\n        </StyledProgressBarShell>\r\n    )\r\n}\r\n\r\nconst StyledProgressBarShell = styled.div`\r\n    border: 1px solid grey;\r\n    width: 100%;\r\n`\r\n\r\nconst StyledProgressBarFiller = styled.div<{ percentage: number }>`\r\n    height: 10px;\r\n    background: green;\r\n    ${(props) => `\r\n        width: ${props.percentage}%;\r\n    `}\r\n`","import React from 'react';\r\n\r\n\r\nimport NumberFormat from \"react-number-format\";\r\nimport { EthContext } from '../../../../App';\r\nimport styled from '@emotion/styled/macro';\r\nimport { ProgressBar } from '../../../../features/progressbar/ProgressBar';\r\n\r\nexport const GameStats = () => {\r\n\r\n    const [defenseState, , attackState, , , , , , inGameFunds, , jailSeconds, attorneySeconds, attackSeconds, crimeSeconds, trainSeconds, crowdfundSeconds, , , , protectionHours] = React.useContext(EthContext);\r\n    return (\r\n        <StyledGameStats>\r\n            <LevelsItem>\r\n                Defense level: {Math.floor(defenseState / 1000000)}<ProgressBar percentage={(defenseState % 1000000) / 10000} />\r\n                Attack level: {Math.floor(attackState / 1000000)} <ProgressBar percentage={attackState % 1000000 / 10000} />\r\n                {jailSeconds === 0 ? <small style={{ color: 'green' }}> Not in jail </small> : <small style={{ color: 'red' }}> Jailed ({jailSeconds})</small>}<br />\r\n                {attorneySeconds === 0 ? <small style={{ color: 'green' }}> Attorney available </small> : <small style={{ color: 'red' }}> Attorney used ({attorneySeconds}) </small>}<br />\r\n                {attackSeconds > 0 ? <small style={{ color: 'red' }}> Attack cooldown ({attackSeconds})</small> : <small style={{ color: 'green' }}> Attack available</small>}<br />\r\n                {crimeSeconds > 0 ? <small style={{ color: 'red' }}> Crime cooldown ({crimeSeconds})</small> : <small style={{ color: 'green' }}> Crime available</small>}<br />\r\n                {trainSeconds > 0 ? <small style={{ color: 'red' }}> Training cooldown ({trainSeconds})</small> : <small style={{ color: 'green' }}> Training available</small>}<br />\r\n                {crowdfundSeconds > 0 ? <small style={{ color: 'red' }}> Crowdfund time left ({crowdfundSeconds})</small> : <small style={{ color: 'green' }}> Crowdfund available</small>}<br />\r\n                {protectionHours > 0 ? <small style={{ color: 'green' }}> {protectionHours} hours protection </small> : <small style={{ color: 'yellow' }}> Unprotected</small>}<br />\r\n\r\n                <NumberFormat\r\n                    value={inGameFunds}\r\n                    displayType={\"text\"}\r\n                    decimalSeparator={\".\"}\r\n                    thousandSeparator={true}\r\n                    decimalScale={4}\r\n                    prefix={\"₲: \"} />\r\n            </LevelsItem>\r\n\r\n        </StyledGameStats>\r\n    )\r\n}\r\n\r\nconst StyledGameStats = styled.div`\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n`\r\n\r\nconst LevelsItem = styled.div`\r\n    line-height: 25px;\r\n    color: white;\r\n`\r\n","import styled from \"@emotion/styled/macro\"\r\nimport { ButtonHTMLAttributes } from \"react\"\r\nimport { Colors } from \"../../../../styles/theme/colors/Colors\"\r\nimport { breakpoint } from \"../../../../styles/theme/responsive/breakpoint\"\r\n\r\ninterface IButtonProps\r\n    extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    primary?: boolean,\r\n    big?: boolean,\r\n    fontBig?: boolean\r\n}\r\n\r\n\r\nexport const Button = (props: IButtonProps) => {\r\n    return (\r\n        <StyledButton {...props} />\r\n    )\r\n}\r\n\r\nconst StyledButton = styled.button<{ primary?: boolean, big?: boolean, fontBig?: boolean }>`\r\n    border-radius: 4px;\r\n    background: ${({ primary }) => (primary ? Colors.PrimaryBlue : Colors.SecondaryBlue)};\r\n    white-space: nowrap;\r\n    padding: 9px 6px;\r\n    color: #fff;\r\n    font-size: ${({ fontBig }) => (fontBig ? '16px' : '12px')};\r\n    outline: none;\r\n    border: none;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        transition: all 0.3s ease-ease-out;\r\n        background: #fff;\r\n        background: ${({ primary }) => (primary ? Colors.PrimaryBlue : Colors.SecondaryBlue)};\r\n    }\r\n\r\n    ${breakpoint.l} {\r\n        padding: ${({ big }) => (big ? '12px 30px' : '12px 10px')};\r\n        font-size: ${({ fontBig }) => (fontBig ? '20px' : '16px')};\r\n    }\r\n`","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { StateContext } from \"../../../App\";\r\nimport { Button } from '../../../features/shared/ui/buttons/Button';\r\nimport { connectWallet } from \"../../EthFunctions\";\r\n\r\nexport const MetaMaskConnect = () => {\r\n\r\n    const [, , mmConnected, , , ,] = React.useContext(StateContext);\r\n\r\n    const connectToWallet = () => {\r\n        const reaction = connectWallet();\r\n        console.log(reaction.then((data) => {\r\n            if (data.connectedStatus === false) {\r\n                console.log(data.status)\r\n            }\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!mmConnected &&\r\n                <StyledMetaMaskConnect to=\"/sign-up\">\r\n                    <Button primary onClick={connectToWallet}>Connect MetaMask</Button>\r\n                </StyledMetaMaskConnect>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst StyledMetaMaskConnect = styled(Link)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-bottom: 10px;\r\n    \r\n`","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport styled from '@emotion/styled/macro';\r\nimport { BootstrapSlots } from './bootstrapslots/ui/BootstrapSlots';\r\nimport { GameNavigation } from './gamenavigation/ui/GameNavigation';\r\nimport { GameStats } from './gamestats/ui/GameStats';\r\nimport { MetaMaskConnect } from '../Navbar/metamaskconnect/MetaMaskConnect';\r\n\r\nconst Gamebar = () => {\r\n    return (\r\n        <StyledGamebar>\r\n            <MetaMaskConnect />\r\n            <BootstrapSlots />\r\n            <GameNavigation />\r\n            <GameStats />\r\n        </StyledGamebar>\r\n\r\n    )\r\n}\r\n\r\nexport default Gamebar\r\n\r\nconst StyledGamebar = styled.div`\r\n    padding-left: 30px;\r\n    padding-right: 30px;\r\n    padding-top: 10px;\r\n    box-sizing: border-box;\r\n`","export default __webpack_public_path__ + \"static/media/gemsblockgang.f7ad8639.mp4\";","import styled from '@emotion/styled/macro';\r\nimport { Colors } from '../../styles/theme/colors/Colors';\r\nimport { breakpoint } from '../../styles/theme/responsive/breakpoint';\r\nimport { FaTelegram, FaTwitter, FaDiscord } from 'react-icons/fa';\r\nimport React from 'react';\r\nimport { EthContext } from '../../App';\r\nimport { BootstrapCounter } from '../../features/bootstrapcounter/BootstrapCounter';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport gemsblockgang from './gemsblockgang.mp4';\r\n\r\nconst Home = () => {\r\n\r\n\r\n    const [, , , , , , , , , , , , , , , , , , bootstrapUsed] = React.useContext(EthContext);\r\n\r\n    return (\r\n        <StyledHome>\r\n            <StyledPageSection>\r\n                <StyledSectionPart>\r\n                    <StyledTitle>Main net is live!</StyledTitle>\r\n                    <StyledSubtitle>Re-listen our recent AMA with CryptoGems below.</StyledSubtitle>\r\n\r\n                </StyledSectionPart>\r\n                <StyledSectionPart>\r\n                    <Video className='videoTag' autoPlay playsInline loop muted>\r\n                        <source src={gemsblockgang} type='video/mp4' />\r\n                    </Video>\r\n                </StyledSectionPart>\r\n                <StyledAudioWrapper>\r\n                    <ReactAudioPlayer\r\n                        src=\"AMA.ogg\"\r\n                        controls\r\n                    />\r\n                </StyledAudioWrapper>\r\n                <StyledTimerText> Join us now on social media to get started right away! </StyledTimerText>\r\n                <StyledSocialIcons>\r\n                    <StyledSocialIconLink href=\"https://discord.gg/j3JGYthB\" target=\"_blank\" aria-label=\"Discord\">\r\n                        <FaDiscord />\r\n                    </StyledSocialIconLink>\r\n                    <StyledSocialIconLink href=\"https://twitter.com/blockgangsters\" target=\"_blank\" aria-label=\"Twitter\">\r\n                        <FaTwitter />\r\n                    </StyledSocialIconLink>\r\n                    <StyledSocialIconLink href=\"https://t.me/joinchat/hIJ1FYLDul1jNGQ0\" target=\"_blank\" aria-label=\"Telegram\">\r\n                        <FaTelegram />\r\n                    </StyledSocialIconLink>\r\n                </StyledSocialIcons>\r\n            </StyledPageSection>\r\n            <StyledPageSection>\r\n                <StyledSectionPart>\r\n                    <StyledTopLine>Blockgangsters.io</StyledTopLine>\r\n                    <StyledTitle>Real random numbers</StyledTitle>\r\n                    <StyledSubtitle>Security is our highest priority. As such, random-numbers will be generated by the gold standard called Chainlink VRF.</StyledSubtitle>\r\n                </StyledSectionPart>\r\n                <StyledSectionPart>\r\n                    <StyledImage src='/images/Chainlink_Logo_Blue.svg' />\r\n                </StyledSectionPart>\r\n            </StyledPageSection>\r\n            <StyledPageSection>\r\n                <StyledSectionPart>\r\n                    <StyledTopLine>Blockgangsters.io</StyledTopLine>\r\n                    <StyledTitle>Beta on Polygon Mumbai testnet starting soon!</StyledTitle>\r\n                    <StyledSubtitle>Two weeks of community testing will start from November 1 until November 16</StyledSubtitle>\r\n                </StyledSectionPart>\r\n                <StyledSectionPart>\r\n                    <StyledImage src='/images/gangster.svg' />\r\n                </StyledSectionPart>\r\n            </StyledPageSection>\r\n            <StyledPageSection>\r\n                <StyledSectionPart>\r\n                    <StyledTopLine>Blockgangsters.io</StyledTopLine>\r\n                    <StyledTitle>Mainnet launch November 16, 2021</StyledTitle>\r\n                    <StyledSubtitle>Be the first to join and bootstrap yourself until December 31, 2021. Bootstrapping will open on mainnet launch.</StyledSubtitle>\r\n                    <BootstrapCounter bootstrapUsed={bootstrapUsed} />\r\n                </StyledSectionPart>\r\n                <StyledSectionPart>\r\n                    <StyledImage src='/images/car.png' />\r\n                </StyledSectionPart>\r\n            </StyledPageSection>\r\n        </StyledHome>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n\r\nconst StyledHome = styled.div`\r\n                ::-webkit-scrollbar {\r\n                    display: none;\r\n}\r\n                `\r\nconst StyledPageSection = styled.div`\r\n\r\n                display: flex;\r\n                align-items: center;\r\n                flex-direction: column;\r\n\r\n                flex-wrap: wrap;\r\n                color: ${Colors.White};\r\n                background: ${Colors.DarkTransparant};\r\n                padding: 16px 16px;\r\n\r\n                ${breakpoint.m} {\r\n                    flex - direction: row;\r\n                width: 80%;\r\n                margin-left: 20%;\r\n                padding: 60px 50px;\r\n    }\r\n\r\n                :nth-child(even) {\r\n                    background: ${Colors.LightTransparant};\r\n                color: ${Colors.Black};\r\n    }\r\n                `\r\n\r\nconst StyledSectionPart = styled.div`\r\n                display: flex;\r\n                flex-direction: column;\r\n\r\n                ${breakpoint.l} {\r\n                    justify - content: center;\r\n                width: 50%;\r\n    }\r\n                `\r\n\r\nconst StyledTimerText = styled.div`\r\n                color: white;\r\n                font-size: 20px;\r\n                text-align: center;\r\n                `;\r\n\r\nconst StyledSocialIcons = styled.div`\r\n                display: flex;\r\n                margin-top: 40px;\r\n                justify-content: center;\r\n                align-items: center;\r\n                `\r\n\r\nconst StyledSocialIconLink = styled.a`\r\n                color: #fff;\r\n                font-size: 24px;\r\n                margin-left: 30px;\r\n                margin-right: 30px;\r\n                `\r\n\r\nconst StyledImage = styled.img`\r\n                width: 100%;\r\n                height: 100%;\r\n\r\n                ${breakpoint.l} {\r\n                    padding-left: 20px;\r\n    }\r\n                `\r\n\r\nconst StyledTopLine = styled.div`\r\n                font-size: 18px;\r\n                line-height: 16px;\r\n                letter-spacing: 1.4px;\r\n                margin-bottom: 16px;\r\n                `;\r\n\r\nconst StyledTitle = styled.h1`\r\n                margin-bottom: 24px;\r\n                font-size: 48px;\r\n                line-height: 1.1;\r\n                `\r\n\r\nconst StyledSubtitle = styled.p`\r\n                margin-bottom: 35px;\r\n                font-size: 18px;\r\n                line-height: 24px;\r\n                `\r\n\r\nconst Video = styled.video`\r\n                position: relative;\r\n                border-radius: 20px;\r\n                margin-bottom: 30px;\r\n                `;\r\n\r\nconst StyledAudioWrapper = styled.p`\r\n                margin-bottom: 10px;\r\n                justify-self: center;\r\n                align-self: center;\r\n                `\r\n","import styled from 'styled-components'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const TokenomicsContainer = styled.div`\r\nmax-width: 100vw;\r\nmax-height: 100vh;\r\npadding: 160px 0 0 0 ;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n\r\n//ChartTitle is above the chart, inside the chartwrapper\r\nexport const ChartTitle = styled.p`\r\nmax-width: 100vw;\r\njustify-content: center;\r\ndisplay: flex;\r\nposition: relative;\r\n`\r\n\r\n//TextWrapper is upper right, contains text explaining the chart\r\nexport const TextWrapper = styled.div`\r\nmax-width: 100vw;\r\npadding-top: 0;\r\npadding-bottom: 60px;\r\ndisplay:flex;\r\njustify-content: top;\r\nposition: relative; \r\ncolor: white;\r\nflex-direction: column; // This way the heading, subtitle and text are below eachother\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n\r\nexport const Heading = styled.h1`\r\nmargin-bottom: 24px;\r\nfont-size: 48px;\r\nline-height: 1.1;\r\ncolor: #f7f8fa;\r\n`\r\n\r\nexport const UnorderedList = styled.ul`\r\npadding-left: 20px;\r\n`\r\n\r\nexport const ListItem = styled.li`\r\npadding-left: 5px;\r\n`\r\n\r\n//AllocationContainer is around whole page (below TokenomicsContainer), sets background etc.\r\nexport const AllocationContainer = styled.div`\r\nmax-width: 100vw;\r\nmax-height: 100vh;\r\npadding: 0 0 0 0; // set the pie chart to 0 but text is (as standard) set to 160 px\r\nbackground: rgba(255,255,255,.7);\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\n`\r\n\r\n//TextWrapper is upper right, contains text explaining the chart\r\nexport const PieTextWrapper = styled.div`\r\nmax-width: 800px;\r\npadding: 30px 0 60px 0; // top right bottom left\r\ndisplay:ínline;\r\njustify-content: top;\r\nposition: relative; \r\ncolor: #1c2237;\r\nflex-direction: column; // This way the heading, subtitle and text are below eachother\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\nexport const HeadingPie = styled.h1`\r\nmargin-bottom: 24px;\r\nfont-size: 48px;\r\nline-height: 1.1;\r\ncolor: #1c2237;\r\n`\r\nexport const Hyperlink = styled.a`\r\ncolor: white;\r\ndisplay:inline;\r\nwhite-space: nowrap;\r\ntext-decoration: underline;\r\n\r\n`\r\n\r\nexport const HyperlinkWhite = styled.a`\r\ncolor: black;\r\ndisplay:inline;\r\ntext-decoration: underline;\r\n`\r\nexport const StyledLinkWhite = styled(Link)`\r\ncolor: black;\r\ndisplay:inline-block;\r\ntext-decoration: underline;\r\n`\r\n","import React from 'react';\r\nimport { ListItem, UnorderedList, Hyperlink, StyledLinkWhite } from './Helppage.elements';\r\nimport styled from '@emotion/styled/macro';\r\nimport { Colors } from '../../styles/theme/colors/Colors';\r\nimport { breakpoint } from '../../styles/theme/responsive/breakpoint';\r\n\r\nconst Helppage = () => {\r\n\r\n  return (\r\n\r\n    <StyledHome>\r\n      <StyledPageSection>\r\n\r\n        <StyledSectionPart>\r\n\r\n          <StyledTitle>Migration to polygon.</StyledTitle>\r\n          The main currency on the Polygon network is MATIC. To do any transaction on the Polygon network, fees have to be paid in MATIC. Before moving to Polygon, one should purchase MATIC tokens on another chain. In this example, we are purchasing MATIC on Ethereum. Among other options, the following sources are available:\r\n          <UnorderedList>\r\n            <ListItem><Hyperlink href=\"https://www.coinbase.com/price/polygon\" target=\"_blank\" rel=\"noreferrer noopener\">Coinbase</Hyperlink></ListItem>\r\n            <ListItem><Hyperlink href=\"https://www.binance.com/en/trade/MATIC_USDT\" target=\"_blank\" rel=\"noreferrer noopener\">Binance</Hyperlink></ListItem>\r\n            <ListItem><Hyperlink href=\"https://v2.info.uniswap.org/pair/0x819f3450da6f110ba6ea52195b3beafa246062de\" target=\"_blank\" rel=\"noreferrer noopener\">Uniswap</Hyperlink></ListItem>\r\n          </UnorderedList>\r\n          To move your funds from Ethereum mainnet to Polygon, it is recommended to use the official <Hyperlink href=\"https://wallet.polygon.technology/bridge\" target=\"_blank\" rel=\"noreferrer noopener\">Polygon bridge</Hyperlink>.\r\n          When moving from other chains, one can use <Hyperlink href=\"https://www.xpollinate.io/\" target=\"_blank\" rel=\"noreferrer noopener\">xpollinate.io</Hyperlink>. Hereafter, the official When moving from other chains, one can use <Hyperlink href=\"https://wallet.polygon.technology/swap/\" target=\"_blank\" rel=\"noreferrer noopener\">Swap for Gas</Hyperlink> function can be used to convert to MATIC.\r\n          Adding Polygon to Metamask can be achieved via this <Hyperlink href=\"https://community.metamask.io/t/how-to-add-custom-networks-to-metamask-like-binance-and-polygon-matic/3634\" target=\"_blank\" rel=\"noreferrer noopener\">Metamask community page</Hyperlink>.\r\n        </StyledSectionPart>\r\n      </StyledPageSection>\r\n\r\n      <StyledPageSection>\r\n        <StyledSectionPart>\r\n\r\n          <StyledTitle>On-boarding to Blockgangsters</StyledTitle>\r\n          The onboarding process to Blockgangsters.io is fairly simple. Option one is depositing funds via the <StyledLinkWhite href=\"https://blockgangsters.io/#/deposit\" rel=\"noreferrer noopener\">deposit function</StyledLinkWhite>.\r\n          The second option is by training your attack or defense for the first time.\r\n          The contract is coded such that performing your first training triggers your profile to be an active profile. <StyledLinkWhite href=\"https://blockgangsters.io/#/trainstats\" rel=\"noreferrer noopener\">Click here</StyledLinkWhite> to perform your first training.\r\n          Withdrawing all your funds from the game will in turn remove your account from the active profiles. That is, it will be ignored in attacks, families et cetera.\r\n        </StyledSectionPart>\r\n\r\n\r\n      </StyledPageSection>\r\n    </StyledHome>\r\n  )\r\n}\r\n\r\nexport default Helppage\r\n\r\nconst StyledHome = styled.div`\r\n\r\n`\r\nconst StyledPageSection = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    color: ${Colors.White};\r\n    background: ${Colors.DarkTransparant};\r\n    padding: 16px 16px;\r\n    max-width: 100%;\r\n    \r\n    ${breakpoint.m} {\r\n        flex-direction: row;\r\n        width: 80%;\r\n        margin-left: 20%;\r\n        padding: 60px 50px;\r\n    }\r\n\r\n    :nth-child(even) {\r\n        background: ${Colors.LightTransparant};\r\n        color: ${Colors.Black};\r\n    }\r\n`\r\n\r\nconst StyledSectionPart = styled.div`\r\n    display: inline;\r\n    flex-direction: column;\r\n    \r\n    ${breakpoint.l} {\r\n        justify-content: center;\r\n        width: 50%;\r\n    }\r\n`\r\n\r\n\r\nconst StyledTitle = styled.h1`\r\n    margin-bottom: 24px;\r\n    font-size: 48px;\r\n    line-height: 1.1;\r\n`\r\n","import styled from 'styled-components'\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const PDFContainer = styled.div`\r\nmax-width: 100%;\r\nmax-height: 100%;\r\npadding: 0 0 0 0 ;\r\nflex-direction: column; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\njustify-content: center;\r\nalign-self: center;\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\nexport const TextBox = styled.div`\r\npadding: 10px 10px 10px 10px;\r\nalign-self: center;\r\n`\r\n\r\nexport const PDFBox = styled.div`\r\npadding: 10px 10px 10px 10px;\r\nalign-self: center;\r\n`","export default __webpack_public_path__ + \"static/media/Godfather.4f9326e1.eot\";","export default __webpack_public_path__ + \"static/media/Godfather.9c1ada8a.svg\";","export default __webpack_public_path__ + \"static/media/Godfather.c7d9ec24.ttf\";","export default __webpack_public_path__ + \"static/media/Godfather.d98a9c32.woff\";","export default __webpack_public_path__ + \"static/media/Godfather.47924d74.woff2\";","import styled from \"@emotion/styled/macro\";\r\nimport { Colors } from \"./styles/theme/colors/Colors\";\r\nimport { breakpoint } from \"./styles/theme/responsive/breakpoint\";\r\nimport Godfather from \"./styles/fonts/Godfather.eot\";\r\nimport Godfather2 from \"./styles/fonts/Godfather.svg\";\r\nimport Godfather3 from \"./styles/fonts/Godfather.ttf\";\r\nimport Godfather4 from \"./styles/fonts/Godfather.woff\";\r\nimport Godfather5 from \"./styles/fonts/Godfather.woff2\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const PageWrapper = styled.div`\r\n    width: 100%;\r\n    max-height: 100%;\r\n    padding: 0 0;\r\n    background: ${Colors.DarkTransparant};\r\n\r\n    ${breakpoint.m} {\r\n        margin-left: 20%;\r\n        width: 80%;\r\n    }\r\n`\r\n\r\n\r\nexport const ColoredLine = ({ color }) => (\r\n    <hr\r\n        style={{\r\n            color: color,\r\n            backgroundColor: color,\r\n            height: 5\r\n        }}\r\n    />\r\n);\r\n\r\nexport const FontStyles = createGlobalStyle`\r\n@font-face {\r\n    font-family: 'The Godfather';\r\n    src: url(${Godfather}#iefix) format('embedded-opentype'),\r\n        url(${Godfather5}) format('woff2'),\r\n        url(${Godfather4}) format('woff'),\r\n        url(${Godfather3}) format('truetype'),\r\n        url(${Godfather2}) format('svg');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    font-display: swap;\r\n}\r\n`;","import React, { useState } from 'react';\r\nimport { PDFContainer, TextBox, PDFBox } from './Whitepaper.elements';\r\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\r\nimport { PageWrapper } from '../../globalStyles'\r\n\r\n\r\nconst Whitepaper = () => {\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n    setPageNumber(1);\r\n  }\r\n\r\n  function changePage(offset) {\r\n    setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n  }\r\n\r\n  function previousPage() {\r\n    changePage(-1);\r\n  }\r\n\r\n  function nextPage() {\r\n    changePage(1);\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <PageWrapper>\r\n      <PDFContainer>\r\n        <>\r\n          <TextBox>\r\n            <p>\r\n              Page {pageNumber || (numPages ? 1 : '--')} of {numPages || '--'}\r\n            </p>\r\n            <button\r\n              type=\"button\"\r\n              disabled={pageNumber <= 1}\r\n              onClick={previousPage}\r\n            >\r\n              Previous\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              disabled={pageNumber >= numPages}\r\n              onClick={nextPage}\r\n            >\r\n              Next\r\n            </button>\r\n          </TextBox>\r\n          <PDFBox>\r\n            <Document\r\n              file='Whitepaper.pdf'\r\n              onLoadSuccess={onDocumentLoadSuccess}\r\n            >\r\n              <Page pageNumber={pageNumber} />\r\n\r\n            </Document>\r\n          </PDFBox>\r\n\r\n        </>\r\n      </PDFContainer>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default Whitepaper","import styled from 'styled-components'\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const PDFContainer = styled.div`\r\nmax-width: 100%;\r\nmax-height: 100%;\r\npadding: 160px 0 0 0 ;\r\nflex-direction: column; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\njustify-content: center;\r\nalign-self: center;\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\nexport const TextBox = styled.div`\r\npadding: 10px 10px 10px 10px;\r\nalign-self: center;\r\n`\r\n\r\nexport const PDFBox = styled.div`\r\npadding: 10px 10px 10px 10px;\r\nalign-self: center;\r\n`","import React  from 'react';\r\nimport {PDFContainer} from './Contract.elements';\r\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport solidity from 'react-syntax-highlighter/dist/esm/languages/prism/solidity';\r\nimport {PageWrapper} from '../../globalStyles'\r\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\nSyntaxHighlighter.registerLanguage('solidity', solidity);\r\n\r\n\r\nconst Contract = () => {\r\n    const codeString = `// SPDX-License-Identifier: MIT\r\n    pragma solidity ^0.8.0;\r\n    \r\n    import \"./ERC20.sol\";\r\n    import \"./ganghelper.sol\";\r\n    //import \"hardhat/console.sol\";\r\n    import \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\";\r\n    \r\n    contract Token is ERC20(\"Blockgangsters\", \"GANG\"), helperContract, VRFConsumerBase {\r\n    \r\n        bytes32 internal keyHash;\r\n        uint256 internal fee;\r\n        uint256 public randomNumber;\r\n        \r\n            constructor () \r\n            VRFConsumerBase(\r\n                0x8C7382F9D8f56b33781fE506E897a4F1e2d17255, // VRF Coordinator\r\n                0x326C977E6efc84E512bB9C30f76E30c160eD06FB  // LINK Token\r\n            ) \r\n            \r\n            {\r\n                keyHash = 0x6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4;\r\n                fee = 0.0001 * 10 ** 18; // 0.1 LINK (Varies by network)\r\n        \r\n                initVestingStages();\r\n                _mint(address(this), vesterSupply); \r\n                _mint(owner, 1); // send a single coin to check that owner has been set correctly\r\n        }\r\n    \r\n        modifier onlyOwners () {\r\n            require(msg.sender == owner,'Only owner');\r\n            _;\r\n        }\r\n    \r\n        modifier onlyActive () {\r\n            require(activePlayer[msg.sender] != 0,'Only active player');\r\n            _;\r\n        }\r\n    \r\n        // --------------------------------  VARIABLES TO BE SET BEFORE LAUNCH ----------------------------------------\r\n        address public owner = 0x212057855F52669966a472Dc48B543dEEFE32A38;\r\n        uint public vesterSupply = 180000000000 * 10 ** 18; //total amount of tokens available to team over lifetime (= 180B)\r\n        uint256 vestingStartTimestamp = 1635721200; // Testnet stamp = 1 Nov 21\r\n    \r\n        // ------------------------------------------  BOOTSTRAP SETTINGS -----------------------------------------------\r\n        uint bootstrapLimit = 500e18; // put limit just over 0.5 to prevent rounding errors/annoyance\r\n        uint bootstrapClosed = 1640991600; // (31 dec 2021)\r\n        uint256 conversionRate = 1000000; // we want 0.5ETH = 1B --> ether * 2B || in matic: 1000 MATIC = 1B --> 1 MATIC = 1M\r\n    \r\n        // ------------------------------------------  IN-GAME SETTINGS -----------------------------------------------\r\n        // settings changed for testnet to test all functionality as quick as possible, change back before mainnet launch.\r\n        uint8[5] famAttBonuses = [0, 5, 10, 20, 40];\r\n        uint64[4] famAttCosts = [1000000000, 2000000000, 4000000000, 8000000000];\r\n        uint8[3] famDefBonuses = [0, 10, 20];\r\n        uint64[2] famDefCosts = [2000000000, 4000000000];\r\n    \r\n        uint trainingAddAttack = 110000000; // 500K in mainnet launch\r\n        uint trainingAddDefense = 9700000; // 500K in mainnet launch\r\n        uint statsTrainingCooldown = 120; // 86400 in mainnet launch\r\n        uint jailTime = 300; // 21600 in mainnet launch\r\n        uint attorneyTime = 300; // 21600 in mainnet launch\r\n        uint crowdFundTime = 600; // 2629743 in mainnet launch (1 month)\r\n        uint crimeTime = 300; // 7200 in mainnet launch (2 hours)\r\n        uint attackTime = 30; // 7200 in mainnet launch (2 hours)\r\n        uint orgAttackTime = 180; // 86400 in mainnet launch\r\n        uint safetyTime = 100; // (same for mainnet)\r\n    \r\n        // --------------------  Declaration of events --------------------------\r\n        event tokensVested(address indexed receiver, uint256 indexed amount);\r\n        event bootstrapBought(address indexed sender, uint256 indexed amount, uint256 indexed used);\r\n        event tokensDeposited(address indexed sender, uint256 indexed amount);\r\n        event tokensWithdrawn(address indexed sender, uint256 indexed amount);\r\n        event newPlayerAdded(address indexed sender); // when a player deposits ingame from 0 balance, a new player has entered the game\r\n        event joinedFamily(address indexed member, uint indexed familyId);\r\n        event familyStarted(bytes32 indexed name, address indexed owner);\r\n        event playerAttacked(bool successAttack, address indexed attacker, address indexed defender, uint loot, uint indexed attackStamp);\r\n        event playerJailed(address indexed player, uint indexed stamp);\r\n        event fundsDistributed(uint indexed familyIndex, uint indexed amount);\r\n        event fundsDeposited(uint indexed familyIndex, address indexed player, uint indexed amount);\r\n    \r\n        event trainedStats(uint indexed choice, address indexed trainer, uint indexed newxp);\r\n    \r\n        event newFamilyRank(uint indexed newFamilyRank);\r\n        event ethDeposited(address indexed sender, uint256 indexed amount);\r\n        event withdrawnBalance(uint256 indexed amount);\r\n        event playerRemoved(address indexed player);\r\n        event crowdFundGains(address indexed player, uint indexed rewardfunding);\r\n        event crimeResult(address indexed player, bool indexed crimeSuccess, uint crimeLoot, uint indexed crimeStamp); \r\n        event newFamilyItems(uint indexed familyIndex, uint indexed familyAttBonus, uint indexed familyDefBonus);\r\n        event attorneyHired(uint indexed result, address indexed player, uint indexed payOrCompensation); // index 1: 0= fail; 1 = success and pay fee; 2 = success and compensation. index 2: fee/compensation\r\n        event organizedAttackResult(uint indexed familyIndex, uint indexed successOrgAttack, uint indexed orgAttackLoot);\r\n        // ----------------------------------------------------------------------\r\n        // -------------------  Declaration of variables -------------------------\r\n        // ----------------------------------------------------------------------\r\n        mapping (address => uint) claimedLogbook; // This mapping stores the vested Percentage'\r\n        mapping (address => uint) internal boughtBootstrap; // this mapping stores the amount bought in Bootstrap of each participant\r\n        mapping (address => uint) internal ingameBalances; // we need users to actively deposit funds into the contract, otherwise we cannot change balances (selling/approving etc)\r\n        mapping(address => uint) internal ingameBalancesIndex; // we need to track which wallets are holding GANG\r\n        mapping(address => uint) internal activePlayer; // limit access to functions when not an active player with onlyActive modifier\r\n    \r\n        mapping(address => uint) internal defenseXP; // def XP per account\r\n        mapping(address => uint) internal protectionTime; // protect account from attacks\r\n        mapping(address => uint) internal attackXP; // att XP per account\r\n        mapping(address => uint) internal attackStamp; // \r\n        mapping(address => uint) internal jailStamp; // if jailed we need to know when -> + 6 hours until release\r\n        mapping(address => uint) internal attackPlayerInitiated; // if jailed we need to know when -> + 6 hours until release\r\n        mapping(address => uint) internal attorneyInitiated; // if jailed we need to know when -> + 6 hours until release\r\n        mapping(address => uint) internal attorneyStamp; // only hire an attorney once per jailing\r\n        mapping(address => uint) internal crowdFundStamp; // stamp of crowdfundstart\r\n        mapping(address => uint) internal crowdFundAmount; // amount invested (subtract from ingamefunds)\r\n        mapping(address => uint) internal crowdFundChoice; // stable / growth / speculative\r\n        mapping(address => uint) internal crowdFundActive; // dont start new campaign when current is active (claim first)\r\n        mapping(address => uint) internal crowdFundingInitiated; // dont start new campaign when current is active (claim first)\r\n        mapping(address => uint) internal lastWithdraw; // last withdrawal timestamp\r\n        mapping(address => uint) internal lastTraining; // last withdrawal timestamp\r\n        mapping(address => uint) internal missionStamp; // last mission timestamp\r\n        mapping(uint => uint) internal orgAttackStamp; // last mission timestamp\r\n    \r\n        mapping(address => uint) internal crimeNumber; // required to save crimeNumber after VRF request\r\n        mapping(address => uint) internal orgAttackInitiated; // extra safety not to spam LINK\r\n        // Chainlink VRF mappings to keep track of requests\r\n        mapping(bytes32 => address) internal requestToAddress;\r\n        mapping(bytes32 => uint) internal requestToMissionType;\r\n        uint8[5] requestsPerFunction = [4, 1, 2, 2, 3]; // e.g. attackrandomplayer needs 3 requests -> logged here\r\n        mapping(bytes32 => uint[]) internal randomnessArray; // mapping from requestId to an array containing multiple results\r\n    \r\n        uint familyIndex = 1; // start at index 1 --> we use index 0 to indicate not part of a family\r\n        uint bootstrapTotal = 0; // max 150B tokens\r\n        uint bootstrapTotalClosed = 0; // close when 150 reached\r\n        mapping(address => uint) internal familyRank; \r\n        mapping(address => uint) internal memberOfFamilyIndex; // dont start new campaign when current is active (claim first)\r\n        mapping(uint => uint) internal familyDefBonus; \r\n        mapping(uint => uint) internal familyAttBonus; \r\n        mapping(uint => uint) internal familyBank; \r\n        mapping(uint => uint) internal familyUnderbossClaimed; \r\n        \r\n        struct familyData {\r\n            uint familyIndexNew;\r\n            bytes32 familyName;\r\n            uint familyEntreeFee; \r\n            uint familyMissionFee;\r\n            address familyOwner;\r\n            address[] familyMembers; \r\n        }\r\n        mapping (uint => familyData) internal familydatamapping;\r\n    \r\n        address[] public activePlayers; // array containing all active addresses (balance > 0)\r\n    \r\n        uint randNonce;\r\n    \r\n        VestingStage[5] public stages; // create array to store vesting stages\r\n        uint bootstrapUsed;  // amount of times the bootstrap is used\r\n    \r\n        struct VestingStage {\r\n            uint256 date;\r\n            uint256 tokensUnlocked;\r\n        }\r\n    \r\n        // ----------------------------------------------------------------------\r\n        // -------------------  Vesting related functions  ----------------------\r\n        // ----------------------------------------------------------------------\r\n        function initVestingStages () internal {\r\n            uint256 QOfYear = 91 days;\r\n            stages[0].date = vestingStartTimestamp;\r\n            stages[1].date = vestingStartTimestamp + QOfYear;\r\n            stages[2].date = vestingStartTimestamp + QOfYear * 2;\r\n            stages[3].date = vestingStartTimestamp + QOfYear * 3;\r\n            stages[4].date = vestingStartTimestamp + QOfYear * 4;\r\n            stages[0].tokensUnlocked = 36000000000 * 10 ** 18; \r\n            stages[1].tokensUnlocked = 72000000000 * 10 ** 18; \r\n            stages[2].tokensUnlocked = 108000000000 * 10 ** 18; \r\n            stages[3].tokensUnlocked = 144000000000 * 10 ** 18; \r\n            stages[4].tokensUnlocked = 180000000000 * 10 ** 18; \r\n        }\r\n    \r\n        function getVesting() external onlyOwners returns (uint) {\r\n            uint toSend;\r\n            for (uint i = 0; i < stages.length; i++) {\r\n                if (msg.sender == owner && stages[i].date < block.timestamp) {\r\n                    toSend = stages[i].tokensUnlocked; // iterating so always take the biggest available value\r\n                }\r\n            } \r\n            toSend -= claimedLogbook[msg.sender];\r\n            _transfer(address(this), msg.sender, toSend);\r\n            claimedLogbook[msg.sender] += toSend;\r\n            emit tokensVested(msg.sender, toSend);\r\n            return toSend;\r\n        }\r\n    \r\n        function getClaimed() external view returns (uint) {\r\n            return claimedLogbook[msg.sender];\r\n        }\r\n    \r\n        // ----------------------------------------  Bootstrap   -------------------------------------------------\r\n        function receiveEth(uint choice) payable external {\r\n            if (choice == 1) { //access to Bootstrap\r\n                require(msg.value > 1 * 10 ** 17, \"Min 5 Matic not to flood\"); // tested 21 aug 21, change mainnet to 5^18\r\n                require(block.timestamp < bootstrapClosed, \"Closed\"); // tested 21 aug 21\r\n                require(bootstrapTotalClosed == 0, \"150B tokens reached\"); // all tokens are sold\r\n                require((boughtBootstrap[msg.sender] + msg.value) <= bootstrapLimit, \"max 1000 matic\"); // tested 21 aug 21\r\n                require(bootstrapUsed < 1000, \"1000 slots max\");\r\n                if (boughtBootstrap[msg.sender] == 0) {\r\n                    bootstrapUsed += 1;\r\n                }\r\n                if (bootstrapTotal > 150000 * 10 ** 18) {\r\n                    bootstrapTotalClosed = 1; // close the bootstrapping since 150B tokens are sold\r\n                }\r\n                boughtBootstrap[msg.sender] += msg.value;\r\n                bootstrapTotal += msg.value;\r\n                emit bootstrapBought(msg.sender, msg.value, bootstrapUsed);\r\n                _mint(msg.sender, msg.value*conversionRate);\r\n            }\r\n            emit ethDeposited(msg.sender, msg.value);\r\n        }\r\n    \r\n        function transferETH(address payable to) external onlyOwners {\r\n            to.transfer(address(this).balance);\r\n            emit withdrawnBalance(address(this).balance);\r\n        }\r\n        // ----------------------------------------  Transfer to game   -------------------------------------------------\r\n        function depositFunds(uint amount) external {\r\n            _burn(msg.sender, amount * 10 ** 18);\r\n            emit tokensDeposited(msg.sender, amount);\r\n            ingameBalances[msg.sender] += amount; \r\n            addPlayers();\r\n        }\r\n    \r\n        function withdrawFunds(uint amount) onlyActive external {\r\n            require(ingameBalances[msg.sender] >= amount, \"Balance\"); // tested 21 aug 21\r\n            require(lastWithdraw[msg.sender] <= block.timestamp - 604800, \"1/week\"); // only withdraw once per week\r\n            emit tokensWithdrawn(msg.sender, amount);\r\n            ingameBalances[msg.sender] -= amount; // \r\n            lastWithdraw[msg.sender] = block.timestamp; // set last withdrawdate to now.\r\n            _mint(msg.sender, amount* 10 ** 18);\r\n            removePlayers();\r\n        }\r\n    \r\n        function getingameFunds(address playerAddress) public view returns (uint) {\r\n            return ingameBalances[playerAddress];\r\n        }\r\n    \r\n        function addPlayers() internal {\r\n            uint playerFound;\r\n            if (activePlayers.length > 0) {\r\n                for (uint i = 0; i < activePlayers.length; i++) { \r\n                    if (activePlayers[i] == msg.sender) {\r\n                        playerFound = 1;\r\n                    }    \r\n                }\r\n                if (playerFound == 0) {\r\n                    activePlayers.push(msg.sender);\r\n                    emit newPlayerAdded(msg.sender);\r\n                    ingameBalancesIndex[msg.sender] = activePlayers.length - 1; // log the index of each address\r\n                } \r\n            } else {\r\n                activePlayers.push(msg.sender);\r\n                emit newPlayerAdded(msg.sender);\r\n                ingameBalancesIndex[msg.sender] = activePlayers.length - 1; // log the index of each address\r\n            }\r\n            activePlayer[msg.sender] = 1; // player is marked active\r\n        }\r\n    \r\n        function removePlayers() internal {\r\n            if (ingameBalances[msg.sender] == 0) {\r\n                uint indexToSwap = ingameBalancesIndex[msg.sender]; // index of (current) removed player\r\n                address playerToAdd = activePlayers[activePlayers.length -1]; // playertoadd is the player in the last index of active players\r\n                ingameBalancesIndex[playerToAdd] = indexToSwap; // set index of last index to index of insertion\r\n                activePlayers[indexToSwap] = playerToAdd; // last index player is inserted in place of removed player\r\n                ingameBalancesIndex[msg.sender] = 999999999; // cleaning up to be sure.\r\n                activePlayers.pop(); // delete last element of activeplayers\r\n            }\r\n            activePlayer[msg.sender] = 0; // player is marked inactive\r\n            emit playerRemoved(msg.sender);\r\n        }\r\n    \r\n        // -------------------------------------------  CHAINLINK VRF Functions  ---------------------------------------------------------\r\n        function getRandomNumber(uint randomRequestFunction) internal returns (bytes32 requestId) {\r\n            require(LINK.balanceOf(address(this)) >= fee, \"Not enough LINK - fill contract with faucet\");\r\n            bytes32 requestToAddressmapping = requestRandomness(keyHash, fee);\r\n            requestToAddress[requestToAddressmapping] = msg.sender;\r\n            requestToMissionType[requestToAddressmapping] = randomRequestFunction;\r\n            return requestToAddressmapping;\r\n        }\r\n    \r\n        /**\r\n         * Callback function used by VRF Coordinator\r\n         */\r\n        function fulfillRandomness(bytes32 requestId, uint256 randomness) internal override {\r\n            for (uint i = 0; i < requestsPerFunction[requestToMissionType[requestId]-1]; i++) {\r\n                randomnessArray[requestId].push(uint256(keccak256(abi.encode(randomness, i))));\r\n            }\r\n            if (requestToMissionType[requestId] == 1) {\r\n                fulfillAttackRandomPlayer(requestId);\r\n            } else if (requestToMissionType[requestId] == 2) {\r\n                fulfillAttorney(requestId);\r\n            } else if (requestToMissionType[requestId] == 3) {\r\n                fulfillCrowdFundingReturn(requestId);\r\n            } else if (requestToMissionType[requestId] == 4) {\r\n                fulfillCrime(requestId);\r\n            } else if (requestToMissionType[requestId] == 5) {\r\n                fulfillOrganizedAttack(requestId);\r\n            }\r\n            randomNumber = randomness;\r\n        }\r\n    \r\n        // --------------------------------------  In-game missions/functions  -----------------------------------------------------------\r\n    \r\n        function getDefenseXP(address account) public view returns (uint) {\r\n            if (defenseXP[account] > 100000000) { \r\n                return 100000000;\r\n            } else {\r\n                return defenseXP[account]; // exp/1M is level\r\n            } \r\n        }\r\n    \r\n        function getAttackXP(address account) public view returns (uint) {\r\n            if (attackXP[account] > 100000000) { \r\n                return 100000000;\r\n            } else {\r\n                return attackXP[account]; // exp/1M is level\r\n            } \r\n        }\r\n    \r\n    //    function getAddressesStats() external view returns (address [] memory, uint [] memory, uint [] memory, uint [] memory) {\r\n    //        address[] memory activePlayersList = new address[](activePlayers.length);\r\n    //        uint[] memory attackList = new uint[](activePlayers.length);\r\n    //        uint[] memory defenseList = new uint[](activePlayers.length);\r\n    //        uint[] memory ingameList = new uint[](activePlayers.length);\r\n    //        for (uint i = 0; i < activePlayers.length; i++) {\r\n    //            activePlayersList[i] = activePlayers[i];\r\n    //            attackList[i] = attackXP[activePlayers[i]];\r\n    //            defenseList[i] = defenseXP[activePlayers[i]];\r\n    //            ingameList[i] = ingameBalances[activePlayers[i]];\r\n    //        }\r\n    //        return (activePlayersList, attackList, defenseList, ingameList);\r\n    //    }   \r\n        function getActiveList() external view returns (address [] memory) {\r\n            return activePlayers;\r\n        }\r\n    \r\n        function statsTraining(uint choice) external {\r\n            require(lastTraining[msg.sender] <= block.timestamp - statsTrainingCooldown, \"Rest\");\r\n            require(choice == 1 || choice == 2 || choice == 3, \"invalid\"); // revert not necessary but for completeness added\r\n            if (activePlayer[msg.sender] == 0) {\r\n                addPlayers();\r\n            }\r\n            lastTraining[msg.sender] = block.timestamp;\r\n            if (choice == 1) {\r\n                attackXP[msg.sender] += trainingAddAttack;\r\n                emit trainedStats(1, msg.sender, attackXP[msg.sender]);\r\n            } else if (choice == 2) {\r\n                attackXP[msg.sender] += trainingAddAttack/2;\r\n                defenseXP[msg.sender] += trainingAddDefense/2;\r\n                emit trainedStats(1, msg.sender, attackXP[msg.sender]);\r\n                emit trainedStats(2, msg.sender, defenseXP[msg.sender]);\r\n            } else if (choice == 3) {\r\n                defenseXP[msg.sender] += trainingAddDefense;\r\n                emit trainedStats(2, msg.sender, defenseXP[msg.sender]);\r\n            }\r\n        }\r\n    \r\n        function buyProtection(uint time) external onlyActive {\r\n            // time to cover is in days. As such, first calculate end-time.\r\n            uint endTime = block.timestamp + 86400*time;\r\n            // 86400 = 1 day, lets put 1 day at 1% of balance\r\n            require(ingameBalances[msg.sender] > time/100);\r\n            protectionTime[msg.sender] = endTime;\r\n            ingameBalances[msg.sender] -= ingameBalances[msg.sender]*time/100;\r\n        }\r\n    \r\n        function attackRandomPlayerRequest() external onlyActive {\r\n            require(ingameBalancesIndex[msg.sender] < 999999999, \"Not active\");\r\n            require(ingameBalances[msg.sender] > 1000000, \"1M Gang\"); \r\n            require(jailStamp[msg.sender] < block.timestamp, \"jail\");\r\n            require(attackStamp[msg.sender] < block.timestamp-attackTime, \"You're still resting\");\r\n            require(activePlayers.length > 1, \"no other players to attack\");\r\n            require(attackPlayerInitiated[msg.sender] < block.timestamp - safetyTime, \"extra safety\");\r\n            attackPlayerInitiated[msg.sender] = block.timestamp;\r\n            // first request the random numbers, then split up the function to fulfill request after Chainlink answers\r\n            attackStamp[msg.sender] = block.timestamp;\r\n            getRandomNumber(1);\r\n        }\r\n    \r\n        function fulfillAttackRandomPlayer(bytes32 requestId) internal {\r\n            address attackInitiator = requestToAddress[requestId];\r\n            uint attackIndex = randomnessArray[requestId][0] % activePlayers.length; //index of player to attack\r\n            uint rollAttack = randomnessArray[requestId][1] % 101; // roll to figure out succesful or not\r\n            uint rollLoot = randomnessArray[requestId][2] % 100; // roll to see how much is stolen\r\n            uint jailRoll = randomnessArray[requestId][3] % 100; // 50% chance to end up in jail\r\n            if (activePlayers[attackIndex] == attackInitiator) {\r\n                if (attackIndex == 0) {\r\n                    attackIndex += 1; // index 0 so need to increase by 1\r\n                } else {\r\n                    attackIndex -= 1; // if not 0 safely reduce by 1\r\n                }\r\n            }\r\n            uint attackChance = attChance[getAttackXP(attackInitiator)/1000000];\r\n            uint defenseChance =  defChance[getDefenseXP(activePlayers[attackIndex])/1000000];\r\n            uint chanceSuccess;\r\n            \r\n            if (attackChance > defenseChance) {\r\n                chanceSuccess =  attackChance - defenseChance;\r\n            } else {\r\n                chanceSuccess = 0;\r\n            }\r\n            if (rollAttack < chanceSuccess && protectionTime[activePlayers[attackIndex]]<block.timestamp) {\r\n                attackXP[attackInitiator] += 100000; // 100K XP on succesful attack\r\n                uint totalLoot = lootPercentage[rollLoot] * ingameBalances[activePlayers[attackIndex]] /1000; //remember 1000 = 100%, so we need to calc back to percentages.\r\n                if (memberOfFamilyIndex[attackInitiator] != 0) { // pay family fees\r\n                    ingameBalances[attackInitiator] += totalLoot*(100-familydatamapping[memberOfFamilyIndex[attackInitiator]].familyMissionFee)/100;\r\n                    familyBank[memberOfFamilyIndex[attackInitiator]] += totalLoot*familydatamapping[memberOfFamilyIndex[attackInitiator]].familyMissionFee/100;\r\n                } else {\r\n                    ingameBalances[attackInitiator] += totalLoot;\r\n                }\r\n                ingameBalances[activePlayers[attackIndex]] -= totalLoot;\r\n                emit playerAttacked(true, attackInitiator, activePlayers[attackIndex], totalLoot, block.timestamp); // 1 is attack success\r\n            } else {\r\n                uint failFee = ingameBalances[attackInitiator]*100/5000; // pay 2% of ingamefunds as fee (min 1 M)\r\n                if (failFee < 1000000) {\r\n                    failFee = 1000000;\r\n                }\r\n                 ingameBalances[attackInitiator] -= failFee;\r\n                if (jailRoll < 50) {\r\n                    jailStamp[attackInitiator] = block.timestamp + jailTime; \r\n                    emit playerJailed(attackInitiator, jailStamp[attackInitiator]);\r\n                } \r\n                emit playerAttacked(false, attackInitiator, activePlayers[attackIndex], failFee, block.timestamp); // 0 is attack failed\r\n            }\r\n        }\r\n        \r\n    \r\n        function getJailStatus() external view onlyActive returns (uint, uint, uint, uint) {\r\n            uint jailStatus;\r\n            uint attorneyStatus;\r\n            if (jailStamp[msg.sender] <= block.timestamp) {\r\n                jailStatus = 1; // otherwise stay 0\r\n            }\r\n            if (attorneyStamp[msg.sender] <= block.timestamp - attorneyTime) {\r\n                attorneyStatus = 1;\r\n            }\r\n            uint jailBlocks;\r\n            uint attorneyBlocks;\r\n            if (jailStatus == 0) {\r\n                jailBlocks = jailStamp[msg.sender] - block.timestamp;\r\n            } \r\n            if (attorneyStatus == 0) {\r\n                attorneyBlocks = attorneyTime - (block.timestamp - attorneyStamp[msg.sender]);\r\n            }\r\n            \r\n            return (jailStatus, attorneyStatus, jailBlocks, attorneyBlocks); // first index: jailed (0) or not jailed (1), second index: attorney available (no=0, yes=1)\r\n        } \r\n        \r\n        function getAttackStatus() external view returns (uint) {\r\n            return attackStamp[msg.sender];\r\n        }\r\n        \r\n        function getCrimeStatus() external view returns (uint) {\r\n            return missionStamp[msg.sender];\r\n        }\r\n        \r\n        function getCrowdfundStatus() external view returns (uint, uint) {\r\n            if (crowdFundStamp[msg.sender] < block.timestamp - crowdFundTime && crowdFundActive[msg.sender] == 0) {\r\n                return (0, 0); // finished + claimed\r\n            } else if (crowdFundStamp[msg.sender] < block.timestamp - crowdFundTime && crowdFundActive[msg.sender] == 1) {\r\n                return (1, 0); // finished + unclaimed\r\n            } else {\r\n                return (1, crowdFundStamp[msg.sender]); // in progress + timestamp\r\n            }\r\n        }\r\n    \r\n        function hireAttorney() external onlyActive {\r\n            require(ingameBalances[msg.sender] > (50000 + 10000 * (defenseXP[msg.sender] + attackXP[msg.sender])  /1000000), \"A fund\");\r\n            require(jailStamp[msg.sender] >= block.timestamp, \"Not jailed\"); \r\n            require(attorneyStamp[msg.sender] <= block.timestamp - attorneyTime, \"A used\"); \r\n            require(attorneyInitiated[msg.sender] < block.timestamp - safetyTime, \"extra safety\");\r\n            attorneyInitiated[msg.sender] = block.timestamp;\r\n            attorneyStamp[msg.sender] = block.timestamp;\r\n            getRandomNumber(2); // fix getRandomNumber sequencing\r\n        }\r\n    \r\n        function fulfillAttorney(bytes32 requestId) internal {\r\n            address attorneyInitiator = requestToAddress[requestId];\r\n            uint attorneyRoll = randomnessArray[requestId][0] % 100; //index of player to attack\r\n            if (attorneyRoll < 50) {\r\n                emit attorneyHired(0, attorneyInitiator, 0); // it failed\r\n            } else if (attorneyRoll < 75) {\r\n                ingameBalances[attorneyInitiator] -= 50000 + 10000 * (defenseXP[attorneyInitiator] + attackXP[attorneyInitiator])  /1000000;\r\n                jailStamp[attorneyInitiator] = 0; // released from jail\r\n                emit attorneyHired(1, attorneyInitiator, 50000 + 10000 * (defenseXP[attorneyInitiator] + attackXP[attorneyInitiator])  /1000000); // index 1: 1 = success but pay. index 2: payment\r\n            } else {\r\n                uint bonusPayment = ingameBalances[attorneyInitiator]*2/100 + 50000000;\r\n                ingameBalances[attorneyInitiator] += bonusPayment;\r\n                jailStamp[attorneyInitiator] = 0; // released from jail\r\n                emit attorneyHired(2, attorneyInitiator, bonusPayment); // index 1: 2 = success and compensation. index 2: compensation\r\n            }\r\n            \r\n        }\r\n    \r\n        function crowdFundStart(uint amount, uint choice) external onlyActive {\r\n            require(ingameBalances[msg.sender] > amount, \"C fund\");\r\n            require(crowdFundStamp[msg.sender] < block.timestamp - crowdFundTime, \"Still inv\");  // 2629743 sec = 1 month\r\n            require(choice == 1 || choice == 2 || choice == 3, \"Inv C\");\r\n            require(crowdFundActive[msg.sender] == 0, \"Claim first\"); // use crowdFundingReturn() before starting another\r\n            // function to lock into a crowdfunding campaign\r\n            crowdFundAmount[msg.sender] = amount;\r\n            ingameBalances[msg.sender] -= amount;\r\n            crowdFundStamp[msg.sender] = block.timestamp;\r\n            crowdFundChoice[msg.sender] = choice;\r\n            crowdFundActive[msg.sender] = 1; // campaign active\r\n        }\r\n    \r\n        function crowdFundingReturn() external onlyActive { // trigger this function to get the returns of current campaign\r\n            require(crowdFundStamp[msg.sender] < block.timestamp - crowdFundTime, \"Inv waiting\");  // 2629743 sec = 1 month\r\n            require(crowdFundStamp[msg.sender] != 0, \"Idle\");\r\n            require(crowdFundAmount[msg.sender] > 0, \"Am 0\");\r\n            require(crowdFundingInitiated[msg.sender] < block.timestamp - safetyTime, \"extra safety\");\r\n            crowdFundingInitiated[msg.sender] = block.timestamp;\r\n            getRandomNumber(3); // fix getRandomNumber sequencing\r\n        }\r\n    \r\n        function fulfillCrowdFundingReturn(bytes32 requestId) internal {\r\n            address crowdFundInitiator = requestToAddress[requestId];\r\n            uint crowdFundRoll = randomnessArray[requestId][0] % 100; \r\n            uint bonusRoll = randomnessArray[requestId][1] % 100;\r\n            uint crowdFundReward;\r\n            if (crowdFundChoice[crowdFundInitiator] == 1) { // stable\r\n                if (crowdFundRoll < 90) {\r\n                    // as expected\r\n                    crowdFundStamp[crowdFundInitiator] = 0;\r\n                    crowdFundReward = crowdFundAmount[crowdFundInitiator]*105/100;\r\n                } else if (crowdFundRoll < 92) {\r\n                    // outperforming\r\n                     crowdFundStamp[crowdFundInitiator] = 0;\r\n                     crowdFundReward = crowdFundAmount[crowdFundInitiator]*(105+(bonusReturn[bonusRoll]/10))/100; \r\n                } else {\r\n                    // bankruptcy (no update to ingamebalances, but reset crowdfundtimer)\r\n                    crowdFundStamp[crowdFundInitiator] = 0;\r\n                } \r\n            } else if (crowdFundChoice[crowdFundInitiator] == 2) { // growth\r\n                 if (crowdFundRoll < 60) {\r\n                    // as expected\r\n                    crowdFundStamp[crowdFundInitiator] = 0;\r\n                    crowdFundReward = crowdFundAmount[crowdFundInitiator]*105/100;\r\n                } else if (crowdFundRoll < 70) {\r\n                    // outperforming\r\n                     crowdFundStamp[crowdFundInitiator] = 0;\r\n                     crowdFundReward = crowdFundAmount[crowdFundInitiator]*(105+(bonusReturn[bonusRoll]/10))/100; \r\n                } else {\r\n                    // bankruptcy (no update to ingamebalances, but reset crowdfundtimer)\r\n                    crowdFundStamp[crowdFundInitiator] = 0;\r\n                } \r\n            } else { // speculative (use speculativeReturn)\r\n                if (crowdFundRoll < 22) {\r\n                    // outperforming\r\n                     crowdFundStamp[crowdFundInitiator] = 0;\r\n                     crowdFundReward = crowdFundAmount[crowdFundInitiator]*(105+(bonusReturn[bonusRoll]/10))/100;\r\n                } else {\r\n                    // bankruptcy (no update to ingamebalances, but reset crowdfundtimer)\r\n                    crowdFundStamp[crowdFundInitiator] = 0;\r\n                } \r\n            }\r\n            ingameBalances[crowdFundInitiator] += crowdFundReward;\r\n            crowdFundActive[crowdFundInitiator] = 0; // campaign claimed, open for new campaign\r\n            crowdFundAmount[crowdFundInitiator] = 0; // completeness\r\n            emit crowdFundGains(crowdFundInitiator, crowdFundReward);\r\n        }\r\n        \r\n        function crimeStart(uint crime) external onlyActive {\r\n            require(crime == 1 || crime == 2 || crime == 3 || crime == 4 || crime == 5, \"Invalid\");\r\n            require(jailStamp[msg.sender] < block.timestamp, \"jail\");\r\n            require(missionStamp[msg.sender] < block.timestamp - crimeTime, \"Resting\");\r\n            crimeNumber[msg.sender] = crime; \r\n            if (crime == 2) {\r\n                require(attackXP[msg.sender]/1000000 >= 20, \"A lvl low\");\r\n            } else if (crime == 3) {\r\n                require(attackXP[msg.sender]/1000000 >= 30, \"A lvl low\");\r\n            } else if (crime == 4) {\r\n                require(attackXP[msg.sender]/1000000 >= 40, \"A lvl low\");\r\n            } else if (crime == 5) {\r\n                require((attackXP[msg.sender]/1000000 + defenseXP[msg.sender]/1000000) > 80, \"80 lvl\");\r\n            }\r\n            // immediately set stamps to make sure user doesn't spam requests\r\n            missionStamp[msg.sender] = block.timestamp;  \r\n            getRandomNumber(4); // fix getRandomNumber sequencing\r\n        }\r\n    \r\n    \r\n        function fulfillCrime(bytes32 requestId) internal {\r\n            // connect VRF results to rolls\r\n            uint rollAttack = randomnessArray[requestId][0] % 101;\r\n            uint rollReward = randomnessArray[requestId][1] % 100; \r\n            address crimeInitiator = requestToAddress[requestId];\r\n            uint missionSuccess = 0;\r\n            uint totalLootCrime;\r\n            uint chanceIndex;\r\n            bool succesfulCrime = true;\r\n            uint crime = crimeNumber[crimeInitiator]; // transfer over crime from crimeStart -> mapping -> fulfill\r\n            if (attackXP[crimeInitiator]/1000000 > 100) {\r\n                chanceIndex = 100;\r\n            } else {\r\n                chanceIndex = attackXP[crimeInitiator]/1000000;\r\n            }\r\n    \r\n            if (crime == 1) {\r\n                uint missionChance = pettyChance[chanceIndex]; \r\n                if (rollAttack < missionChance) {\r\n                    totalLootCrime = 10000000*rollReward/100 + 500000*(attackXP[crimeInitiator]/1000000)*rollReward/100;\r\n                    missionSuccess = 1;\r\n                }\r\n            } else if (crime == 2) {\r\n                uint missionChance = villaChance[chanceIndex]; \r\n                if (rollAttack < missionChance) {\r\n                    totalLootCrime = 25000000*rollReward/100 + 250000*(attackXP[crimeInitiator]/1000000)*rollReward/100;\r\n                    missionSuccess = 1;\r\n                }\r\n            } else if (crime == 3) {\r\n                uint missionChance = robberyChance[chanceIndex]; \r\n                if (rollAttack < missionChance) {\r\n                    totalLootCrime = 50000000*rollReward/100 + 400000*(attackXP[crimeInitiator]/1000000)*rollReward/100;\r\n                    missionSuccess = 1;\r\n                }\r\n            } else if (crime == 4) {\r\n                uint missionChance = ransomChance[chanceIndex]; \r\n                if (rollAttack < missionChance) {\r\n                    totalLootCrime = 70000000*rollReward/100 + 500000*(attackXP[crimeInitiator]/1000000)*rollReward/100;\r\n                    missionSuccess = 1;\r\n                }\r\n            } else if (crime == 5) {\r\n                uint missionChance = hijackChance[chanceIndex]; \r\n                if (rollAttack < missionChance) {\r\n                    totalLootCrime = 800000*(attackXP[crimeInitiator]/1000000 + defenseXP[crimeInitiator]/1000000)*rollReward/100;\r\n                    missionSuccess = 1;\r\n                }\r\n            }\r\n    \r\n            if (missionSuccess == 1 && memberOfFamilyIndex[crimeInitiator] != 0) {\r\n                ingameBalances[crimeInitiator] += totalLootCrime*(100-familydatamapping[memberOfFamilyIndex[crimeInitiator]].familyMissionFee)/100;\r\n                familyBank[memberOfFamilyIndex[crimeInitiator]] += totalLootCrime*familydatamapping[memberOfFamilyIndex[crimeInitiator]].familyMissionFee/100;\r\n            } else {\r\n                ingameBalances[crimeInitiator] += totalLootCrime; // = 0 when not succesful\r\n            }\r\n    \r\n            if (missionSuccess == 0) {\r\n                jailStamp[crimeInitiator] = block.timestamp + jailTime;\r\n                succesfulCrime = false;\r\n            }\r\n            emit crimeResult(crimeInitiator, succesfulCrime, totalLootCrime, block.timestamp);\r\n        }\r\n    \r\n        // ----------------------------------------------------------------------\r\n        // ------------------- Family missions/functions  -----------------------\r\n        // ----------------------------------------------------------------------    \r\n        function startFamily(bytes32 name, uint entreeFee, uint missionFee) external onlyActive {\r\n            require((attackXP[msg.sender]/1000000 + defenseXP[msg.sender]/1000000) > 100, \"Not experienced\");\r\n            require(ingameBalances[msg.sender] > 1000000000, \"Fund\");\r\n            require(familyRank[msg.sender] < 80, \"Already boss\");\r\n            require (entreeFee >= 0 && missionFee >= 0 && missionFee < 100, \"Fees incorrect\");\r\n            // 1 = associate, 2 = soldier, 3 = caporegime, 4 = underboss, 5 = boss\r\n            memberOfFamilyIndex[msg.sender] = familyIndex; // we need to track who is in what family, otherwise there is no way to get all necessary bonuses.\r\n            familydatamapping[familyIndex].familyIndexNew = familyIndex;\r\n            familydatamapping[familyIndex].familyName = name;\r\n            familydatamapping[familyIndex].familyEntreeFee = entreeFee; // fee that new members have to pay to enter \r\n            familydatamapping[familyIndex].familyMissionFee = missionFee;\r\n            familydatamapping[familyIndex].familyOwner = msg.sender; // owner of the family\r\n            familydatamapping[familyIndex].familyMembers.push(msg.sender); //remember: can only push one item at a time\r\n            familyIndex += 1; // make new index\r\n            familyRank[msg.sender] = 80;\r\n            ingameBalances[msg.sender] -= 1000000000;\r\n            emit familyStarted(name, msg.sender);\r\n        }\r\n    \r\n        function getFamilyNames() external view returns (bytes32 [] memory) {\r\n            bytes32[] memory familyNames = new bytes32[](familyIndex - 1);\r\n            for (uint i=1; i < familyIndex; i++) {\r\n                familyNames[i-1] = familydatamapping[i].familyName;\r\n            }\r\n            return familyNames;\r\n        }\r\n        \r\n        function getFamilyFees(uint index) external view returns(uint [2] memory) {\r\n            return [familydatamapping[index].familyEntreeFee, familydatamapping[index].familyMissionFee];\r\n        }\r\n        \r\n        function getFamilyOwner(uint indexInput) external view returns (address) {\r\n            return familydatamapping[indexInput].familyOwner;\r\n        }\r\n    \r\n        function getFamilyRank(address _user) public view returns (uint) { // to check family bonuses (internal)\r\n            return familyRank[_user];\r\n        }\r\n    \r\n        function getFamilyBank(uint index) external view returns (uint) {\r\n            return familyBank[index];\r\n        }\r\n    \r\n        function getAllFamilyMembers(uint indexInput) external view returns (address [] memory) { // to check family bonuses (internal)\r\n            return familydatamapping[indexInput].familyMembers;\r\n        }\r\n    \r\n        function getMemberFamilyIndex(address _user) public view returns (uint) { // to check family bonuses (internal)\r\n            return memberOfFamilyIndex[_user];\r\n        }\r\n    \r\n        function getFamilyDefBonus(address _user) public view returns (uint) {\r\n            return  getFamilyRank(_user) + familyDefBonus[getMemberFamilyIndex(_user)];\r\n            }\r\n        \r\n        function getFamilyAttBonus(address _user) public view returns (uint) {\r\n            uint memberofFamily = getMemberFamilyIndex(_user);\r\n            return familyAttBonus[memberofFamily];\r\n            }\r\n    \r\n        function joinOrUprankFamily(uint joinFamilyIndex) external onlyActive { \r\n            require(joinFamilyIndex >= 1 && joinFamilyIndex < familyIndex, \"Fa unknown\");\r\n            require(familyRank[msg.sender] != 80, \"= Boss\");\r\n            if (memberOfFamilyIndex[msg.sender] != joinFamilyIndex) { \r\n                // meaning this player is joining instead of upgrading\r\n                require(getMemberFamilyIndex(msg.sender) == 0, \"Leave current\");\r\n                require(ingameBalances[msg.sender] >= familydatamapping[joinFamilyIndex].familyEntreeFee, \"Funding\");\r\n                ingameBalances[msg.sender] -= familydatamapping[joinFamilyIndex].familyEntreeFee; // pay the entree fee\r\n                familyBank[joinFamilyIndex] += familydatamapping[joinFamilyIndex].familyEntreeFee; // transfer entree fee to family bank\r\n                familydatamapping[joinFamilyIndex].familyMembers.push(msg.sender); //pushing this member to this family\r\n                emit joinedFamily(msg.sender, joinFamilyIndex);\r\n    \r\n            }\r\n            memberOfFamilyIndex[msg.sender] = joinFamilyIndex; // set this family as the player's new family\r\n            if (attackXP[msg.sender]/1000000 + defenseXP[msg.sender]/1000000 > 199 && familyUnderbossClaimed[joinFamilyIndex] == 0) {\r\n                familyRank[msg.sender] = 70;\r\n                familyUnderbossClaimed[joinFamilyIndex] = 1;\r\n            } else if (attackXP[msg.sender]/1000000 + defenseXP[msg.sender]/1000000 > 124) {\r\n                familyRank[msg.sender] = 50;\r\n            } else if (attackXP[msg.sender]/1000000 + defenseXP[msg.sender]/1000000 > 74) {\r\n                familyRank[msg.sender] = 30;\r\n            } else {\r\n                familyRank[msg.sender] = 10;\r\n            }\r\n            emit newFamilyRank(familyRank[msg.sender]); // emits the family rank of player (10/30/50/70/80)\r\n        }\r\n    \r\n        function leaveFamily(address user) external onlyActive {\r\n            require(user == msg.sender || msg.sender == familydatamapping[getMemberFamilyIndex(user)].familyOwner, \"kick yourself or kicked by boss\");\r\n            for (uint i=0; i < familydatamapping[getMemberFamilyIndex(user)].familyMembers.length; i++) {\r\n                if (familydatamapping[getMemberFamilyIndex(user)].familyMembers[i] == user) {\r\n                    familydatamapping[getMemberFamilyIndex(user)].familyMembers[i] = familydatamapping[getMemberFamilyIndex(user)].familyMembers[familydatamapping[getMemberFamilyIndex(user)].familyMembers.length - 1];\r\n                }\r\n            }    \r\n            // remove family rights\r\n            familydatamapping[getMemberFamilyIndex(user)].familyMembers.pop();\r\n            memberOfFamilyIndex[user] = 0;\r\n            familyRank[user] = 0;\r\n        }\r\n    \r\n        function upgradeFamilyItems(uint category, uint item) external onlyActive {\r\n            uint currentFamilyIndex = getMemberFamilyIndex(msg.sender);    \r\n            require(familydatamapping[currentFamilyIndex].familyOwner == msg.sender, \"Not owner\");\r\n    \r\n            if (category == 1) {\r\n                require(familyBank[currentFamilyIndex] > famAttCosts[item-1], \"Funding\");\r\n                require(familyAttBonus[currentFamilyIndex] == famAttBonuses[item-1], \"Not sequential\");\r\n                familyBank[currentFamilyIndex] -= famAttCosts[item-1];\r\n                familyAttBonus[getMemberFamilyIndex(msg.sender)] = famAttBonuses[item];\r\n            } else if (category == 2) {\r\n                require(familyBank[currentFamilyIndex] > famDefCosts[item-1], \"Funding\");\r\n                require(familyDefBonus[currentFamilyIndex] == famDefBonuses[item-1], \"Not sequential\");\r\n                familyBank[currentFamilyIndex] -= famDefCosts[item-1];\r\n                familyDefBonus[getMemberFamilyIndex(msg.sender)] = famDefBonuses[item];\r\n            }\r\n            emit newFamilyItems(currentFamilyIndex, familyAttBonus[getMemberFamilyIndex(msg.sender)], familyDefBonus[getMemberFamilyIndex(msg.sender)]);\r\n        }\r\n    \r\n        function removeFamily() external onlyActive {\r\n            require(familydatamapping[getMemberFamilyIndex(msg.sender)].familyMembers.length <= 1, \"Kick membs\");\r\n            require(familyRank[msg.sender] == 80, \"Not boss\");\r\n            if (memberOfFamilyIndex[msg.sender] != familyIndex - 1) {\r\n                familydatamapping[memberOfFamilyIndex[msg.sender]] = familydatamapping[familyIndex - 1]; // last index is inserted here, unless this is the last index, then just lower the indexer\r\n            }\r\n            familyIndex -= 1; // one less family in total\r\n            memberOfFamilyIndex[msg.sender] = 0;\r\n            familyRank[msg.sender] = 0;\r\n        }\r\n    \r\n        function distributeFamilyBank(address _recipient, uint amount) external onlyActive {\r\n            uint currentFamilyIndex = getMemberFamilyIndex(msg.sender);    \r\n            require(familyBank[currentFamilyIndex] > amount);\r\n            require(familyRank[msg.sender] == 80, \"Not boss\");\r\n            ingameBalances[_recipient] += amount;\r\n            familyBank[memberOfFamilyIndex[msg.sender]] -= amount;\r\n            emit fundsDistributed(currentFamilyIndex, amount);\r\n        }\r\n        \r\n        function depositFamilyBank(uint amount) external onlyActive {\r\n            uint currentFamilyIndex = getMemberFamilyIndex(msg.sender);    \r\n            require(ingameBalances[msg.sender] > amount);\r\n            ingameBalances[msg.sender] -= amount;\r\n            familyBank[memberOfFamilyIndex[msg.sender]] += amount;\r\n            emit fundsDeposited(currentFamilyIndex, msg.sender, amount);\r\n    \r\n        }\r\n    \r\n        function organizedAttack() external onlyActive {\r\n            uint currentFamilyIndex = getMemberFamilyIndex(msg.sender);\r\n            require(orgAttackStamp[currentFamilyIndex] < block.timestamp - orgAttackTime, \"Family is resting\");\r\n    \r\n            require(familyIndex > 2, \"no counterparty\");\r\n            require(familyRank[msg.sender] >= 50, \"rank not high enough\");\r\n            require(orgAttackInitiated[msg.sender] < block.timestamp - safetyTime, \"extra safety\");\r\n            orgAttackStamp[currentFamilyIndex] = block.timestamp;\r\n            orgAttackInitiated[msg.sender] = block.timestamp;\r\n            getRandomNumber(5); // fix getRandomNumber sequencing\r\n    \r\n        }\r\n    \r\n        function fulfillOrganizedAttack(bytes32 requestId) internal { \r\n            address OrganizedInitiator = requestToAddress[requestId];\r\n            uint familyRoll = randomnessArray[requestId][0] % (familyIndex-1)+1;\r\n            if (familyRoll == memberOfFamilyIndex[OrganizedInitiator]) {\r\n                if (familyRoll > 1) {\r\n                    familyRoll -= 1; // if own family is not index 0 or 1(!), safely reduce index by 1\r\n                } else {\r\n                    familyRoll += 1; // if it is index 0, go to 1\r\n                }\r\n            }\r\n            uint successRoll = randomnessArray[requestId][1] % 101; \r\n            uint lootRoll = randomnessArray[requestId][2] % 51;\r\n    \r\n            // 2: sum up all the defense bonuses of defending party\r\n            uint defendingFamily = 0;\r\n            for (uint i=0; i < familydatamapping[familyRoll].familyMembers.length; i++) {\r\n                defendingFamily += getFamilyDefBonus(familydatamapping[familyRoll].familyMembers[i]) + defenseXP[familydatamapping[familyRoll].familyMembers[i]]/1000000;\r\n            }\r\n            // 3: figure out the attack bonuses of attack family --> use familydatamapping[familyIndex].familyMembers\r\n            uint attackingFamily = 0;\r\n            for (uint i=0; i < familydatamapping[memberOfFamilyIndex[OrganizedInitiator]].familyMembers.length; i++) {\r\n                attackingFamily += getFamilyAttBonus(familydatamapping[memberOfFamilyIndex[OrganizedInitiator]].familyMembers[i]) + attackXP[familydatamapping[memberOfFamilyIndex[OrganizedInitiator]].familyMembers[i]] /1000000;\r\n            }\r\n            // 5: roll (we use the attack brackets for individual attacks, that is, 50% higher att than def bonus means index 50, att < def means 20% chance)\r\n            uint familyAttackChance;\r\n            uint attackSuccess;\r\n            if (attackingFamily > defendingFamily) {\r\n                familyAttackChance = ((attackingFamily-defendingFamily)*100)/defendingFamily;\r\n                attackSuccess = 0;  \r\n                if (familyAttackChance > 101) {\r\n                    attackSuccess = 1;\r\n                } else { // note that <0 is filtered out by attackingFamily > defendingFamily a few lines above\r\n                    // use the indices\r\n                    if (successRoll < attChance[familyAttackChance]) { //  \r\n                        // attack succesful\r\n                        attackSuccess = 1;\r\n                    }\r\n                }\r\n                // 6: figure out the rewards\r\n                emit organizedAttackResult(memberOfFamilyIndex[OrganizedInitiator], 1, lootRoll*familyBank[familyRoll]/100); // first emit, or addition is included\r\n                familyBank[memberOfFamilyIndex[OrganizedInitiator]] += lootRoll*familyBank[familyRoll]/100; // loot\r\n                familyBank[familyRoll] -= lootRoll*familyBank[familyRoll]/100; // loot\r\n                \r\n            } else {\r\n                emit organizedAttackResult(memberOfFamilyIndex[OrganizedInitiator], 0,0); // if att < def, att fails so 0, 0    \r\n            }\r\n        }\r\n    }\r\n    `;\r\n    return (\r\n\r\n      <PageWrapper>\r\n        <PDFContainer>\r\n        <SyntaxHighlighter showLineNumbers=\"true\" language=\"solidity\" style={dark} customStyle={{\r\n                    backgroundColor: \"transparent\",\r\n                    opacity: \"1\",\r\n                    marginTop: \"-2rem\",\r\n                    maxwidth: \"50vw\",\r\n                }}  >\r\n      {codeString}\r\n    </SyntaxHighlighter>\r\n    </PDFContainer>\r\n   </PageWrapper>\r\n    )\r\n}\r\n\r\nexport default Contract","import styled from 'styled-components'\r\nimport {FaGripLines} from 'react-icons/fa';\r\nimport {MdDone, MdWatchLater} from 'react-icons/md';\r\nexport const InfoSec = styled.div`\r\ncolor: #fff;\r\npadding: 160px 0;\r\nmargin-left: 20vw;\r\n\r\nbackground: ${({lightBg}) => (lightBg ? 'rgba(255,255,255,.9);' : 'rgba(16,21,34,.9);')};\r\n@media screen and (max-width: 768px) {\r\n    margin: 0;\r\n};\r\n`\r\n\r\n\r\nexport const IconToDo = styled(MdWatchLater)` //FaMagento is the logo \r\nmargin-right: 0.5rem;\r\nbox-sizing: border-box;\r\nmax-height: 100%;\r\n`\r\n\r\nexport const IconFinished = styled(MdDone)` //FaMagento is the logo \r\nmargin-right: 0.5rem;\r\nbox-sizing: border-box;\r\nmax-height: 100%;\r\n`\r\n\r\nexport const IconProgress = styled(FaGripLines)` //FaMagento is the logo \r\nmargin-right: 0.5rem;\r\nbox-sizing: border-box;\r\nmax-height: 100%;\r\n`","import React from 'react';\r\nimport { InfoSec, IconFinished, IconToDo, IconProgress } from './Roadmap.elements';\r\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\n\r\nconst Roadmap = ({ img, alt, start }) => {\r\n  return (\r\n\r\n    <InfoSec>\r\n      <VerticalTimeline>\r\n\r\n\r\n        <VerticalTimelineElement\r\n          iconStyle={{ background: 'rgb(16, 204, 82)', color: '#fff' }}\r\n          icon={null}\r\n        />\r\n\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--work\"\r\n          contentStyle={{ background: '#232745', color: '#fff' }}\r\n          contentArrowStyle={{ borderRight: '7px solid #232745' }}\r\n          date=\"Q1 2021\"\r\n          iconStyle={{ background: '#196F3D', color: '#fff' }}\r\n          icon={<IconFinished />}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">First version Smart Contract completed</h3>\r\n        </VerticalTimelineElement>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--work\"\r\n          contentStyle={{ background: '#232745', color: '#fff' }}\r\n          contentArrowStyle={{ borderRight: '7px solid #232745' }}\r\n          date=\"Q2 2021\"\r\n          iconStyle={{ background: '#196F3D', color: '#fff' }}\r\n          icon={<IconFinished />}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">Smart Contract verification</h3>\r\n          <p>Smart Contract is tested with the help of Hardhat.</p>\r\n\r\n        </VerticalTimelineElement>\r\n\r\n\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--work\"\r\n          contentStyle={{ background: '#232745', color: '#fff' }}\r\n          contentArrowStyle={{ borderRight: '7px solid #232745' }}\r\n          date=\"Q2 2021\"\r\n          iconStyle={{ background: '#196F3D', color: '#fff' }}\r\n          icon={<IconFinished />}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">Website is under construction.</h3>\r\n          <p>React website under construction. Metamask is chosen as first supported wallet. Multi-wallet support scheduled 2022.</p>\r\n        </VerticalTimelineElement>\r\n\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--work\"\r\n          contentStyle={{ background: '#232745', color: '#fff' }}\r\n          contentArrowStyle={{ borderRight: '7px solid #232745' }}\r\n          date=\"Q3 2021\"\r\n          iconStyle={{ background: '#196F3D', color: '#fff' }}\r\n          icon={<IconFinished />}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">Chainlink VRF implemented.</h3>\r\n          <p> Truely random numbers are of the highest priority. As such, every transaction is first logged within the BlockGangsters contract. Hereafter, Chainlink VRF is contacted, which will respond after 10 blocks. This way, an immutable random outcome is generated of each action. </p>\r\n        </VerticalTimelineElement>\r\n\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--work\"\r\n          contentStyle={{ background: '#232745', color: '#fff' }}\r\n          contentArrowStyle={{ borderRight: '7px solid #232745' }}\r\n          date=\"Q3 2021\"\r\n          iconStyle={{ background: '#196F3D', color: '#fff' }}\r\n          icon={<IconFinished />}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">Smart Contract Live on testnet</h3>\r\n          <p>Contract is deployed on Polygon Mumbai testnet to further test game functions. </p>\r\n\r\n        </VerticalTimelineElement>\r\n\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--work\"\r\n          contentStyle={{ background: '#232745', color: '#fff' }}\r\n          contentArrowStyle={{ borderRight: '7px solid #232745' }}\r\n          date=\"Nov 1, 2021\"\r\n          iconStyle={{ background: '#196F3D', color: '#fff' }}\r\n          icon={<IconFinished />}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">Smart Contract Live on Polygon Mumbai</h3>\r\n          <p>Transaction fees are currently too high on Ethereum for this transaction model. As such initial deployment is scheduled on Binance Smart Chain.</p>\r\n        </VerticalTimelineElement>\r\n\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--work\"\r\n          contentStyle={{ background: '#232745', color: '#fff' }}\r\n          contentArrowStyle={{ borderRight: '7px solid #232745' }}\r\n          date=\"Nov 16, 2021\"\r\n          iconStyle={{ background: '#196F3D', color: '#fff' }}\r\n          icon={<IconFinished />}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">Mainnet launch</h3>\r\n          <p>To ensure everybody obtains a fair share of ₲, GANG is fairly launched on November 16, 2021. Extra tokens can be bought for 1 month after launch.</p>\r\n        </VerticalTimelineElement>\r\n\r\n\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--work\"\r\n          contentStyle={{ background: '#232745', color: '#fff' }}\r\n          contentArrowStyle={{ borderRight: '7px solid #232745' }}\r\n          date=\"Q1 2022\"\r\n          iconStyle={{ background: '#9A7D0A', color: '#fff' }}\r\n          icon={<IconProgress />}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">UI updates, collecting community feedback</h3>\r\n          <p>The first quarter of 2022 will be used to iron out UI bugs. After community approval, the focus will be shifted towards game functionality updates.</p>\r\n        </VerticalTimelineElement>\r\n\r\n\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--work\"\r\n          contentStyle={{ background: '#232745', color: '#fff' }}\r\n          contentArrowStyle={{ borderRight: '7px solid #232745' }}\r\n          date=\"Q2/Q3 2022\"\r\n          iconStyle={{ background: '#232745', color: '#fff' }}\r\n          icon={<IconToDo />}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">Game functionality upgrades</h3>\r\n          <p>The environment of the Ethereum ecosystem currently changes significantly. The team monitors closely for possibilities after the merge. The end goal is to launch on mainnet Ethereum with ERC-1155 functionality. That is, offer both ₲ tokens and NFT's from the same platform.</p>\r\n        </VerticalTimelineElement>\r\n\r\n\r\n      </VerticalTimeline>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </InfoSec>\r\n  )\r\n}\r\n\r\nexport default Roadmap","import styled from 'styled-components'\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const TokenomicsContainer = styled.div`\r\nmax-width: 100%;\r\nmax-height: 100%;\r\npadding: 160px 0;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n//Chartwrapper is upper left, contains chart\r\nexport const ChartWrapper = styled.div`\r\nmax-width: 700px;\r\njustify-content: center;\r\ndisplay: flex;\r\nposition: relative;\r\nflex-direction: column; // to put the title above the chart (instead of next to each other, = row)\r\n`\r\n\r\n//ChartTitle is above the chart, inside the chartwrapper\r\nexport const ChartTitle = styled.div`\r\nmax-width: 700px;\r\njustify-content: center;\r\ndisplay: flex;\r\nposition: relative;\r\n`\r\n\r\n//TextWrapper is upper right, contains text explaining the chart\r\nexport const TextWrapper = styled.div`\r\nmax-width: 800px;\r\npadding-top: 0;\r\npadding-bottom: 60px;\r\ndisplay:flex;\r\njustify-content: top;\r\nposition: relative; \r\ncolor: white;\r\nflex-direction: column; // This way the heading, subtitle and text are below eachother\r\n\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\nexport const TopLine = styled.div`\r\ncolor: #a9b3c1;\r\nfont-size: 18px;\r\nline-height: 16px;\r\nletter-spacing: 1.4px;\r\nmargin-bottom: 0px;\r\n`;\r\n\r\nexport const Heading = styled.h1`\r\nmargin-bottom: 24px;\r\nfont-size: 48px;\r\nline-height: 1.1;\r\ncolor: #f7f8fa;\r\n`\r\n\r\nexport const UnorderedList = styled.ul`\r\npadding-left: 20px;\r\n`\r\n\r\nexport const ListItem = styled.li`\r\npadding-left: 5px;\r\n`\r\n\r\n//AllocationContainer is around whole page (below TokenomicsContainer), sets background etc.\r\nexport const AllocationContainer = styled.div`\r\nmax-width: 100%;\r\nmax-height: 100%;\r\npadding: 0 0 0 0; // set the pie chart to 0 but text is (as standard) set to 160 px\r\nbackground-color: rgba(255, 255, 255,.6);\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\n`\r\n\r\n//Chartwrapper is upper left, contains chart\r\nexport const PieWrapper = styled.div`\r\nmax-width: 700px;\r\njustify-content: center;\r\ndisplay: flex;\r\nposition: relative;\r\nflex-direction: column; // to put the title above the chart (instead of next to each other, = row)\r\n`\r\n\r\n//ChartTitle is above the chart, inside the chartwrapper\r\nexport const PieTitle = styled.div`\r\nmax-width: 700px;\r\nmargin-left: 150px;\r\ndisplay: flex;\r\nposition: relative;\r\n`\r\n\r\nexport const TopLinePie = styled.div`\r\ncolor: #4B59F7;\r\nfont-size: 18px;\r\nline-height: 16px;\r\nletter-spacing: 1.4px;\r\nposition: absolute;\r\nmargin-top: 120px;\r\n\r\n`;\r\n\r\n\r\n//TextWrapper is upper right, contains text explaining the chart\r\nexport const PieTextWrapper = styled.div`\r\nmax-width: 800px;\r\npadding: 160px 0 0 0; // top right bottom left\r\ndisplay:flex;\r\njustify-content: top;\r\nposition: relative; \r\ncolor: #1c2237;\r\nflex-direction: column; // This way the heading, subtitle and text are below eachother\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\nexport const HeadingPie = styled.h1`\r\nmargin-bottom: 24px;\r\nfont-size: 48px;\r\nline-height: 1.1;\r\ncolor: #1c2237;\r\n`\r\n\r\n","export const dataSet = [\r\n  {\r\n    name: 'Q3 \\'21',\r\n    Team: 0,\r\n    Bootstrap: 0,\r\n    Rewards: 0,\r\n  },\r\n  {\r\n    name: 'Q4 \\'21',\r\n    Team: 36,\r\n    Bootstrap: 150,\r\n    Rewards: 75,\r\n  },\r\n  {\r\n    name: 'Q1 \\'22',\r\n    Team: 72,\r\n    Bootstrap: 150,\r\n    Rewards: 150,\r\n  },\r\n  {\r\n      name: 'Q2 \\'22',\r\n      Team: 108,\r\n      Bootstrap: 150,\r\n      Rewards: 225,\r\n    },\r\n    {\r\n      name: 'Q3 \\'22',\r\n      Team: 144,\r\n      Bootstrap: 150,\r\n      Rewards: 300,\r\n    },\r\n    {\r\n      name: 'Q4 \\'22',\r\n      Team: 180,\r\n      Bootstrap: 150,\r\n      Rewards: 375,\r\n    },\r\n    {\r\n      name: 'Q1 \\'23',\r\n      Team: 180,\r\n      Bootstrap: 150,\r\n      Rewards: 450,\r\n    },\r\n    {\r\n      name: 'Q2 \\'23',\r\n      Team: 180,\r\n      Bootstrap: 150,\r\n      Rewards: 525,\r\n    },\r\n    {\r\n        name: 'Q3 \\'23',\r\n        Team: 180,\r\n        Bootstrap: 150,\r\n        Rewards: 600,\r\n      },\r\n      {\r\n        name: 'Q4 \\'23',\r\n        Team: 180,\r\n        Bootstrap: 150,\r\n        Rewards: 675\r\n      }\r\n];\r\n\r\nexport const data = [\r\n  { name: 'Marketing', value: 20 },\r\n  { name: 'Team', value: 30 },\r\n  { name: 'Oracle', value: 10},\r\n  { name: 'Audits', value: 20 },\r\n  { name: 'Long term treasury', value: 20 },\r\n];","import React, { useCallback, useState }  from 'react';\r\nimport {TokenomicsContainer, ChartWrapper, TextWrapper, TopLine, Heading, ChartTitle, ListItem, UnorderedList, AllocationContainer, PieWrapper, PieTitle, HeadingPie, TopLinePie, PieTextWrapper} from './Tokenomics.elements';\r\nimport {dataSet, data} from './Data' \r\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, PieChart, Pie, Sector} from 'recharts';\r\nimport {PageWrapper} from '../../globalStyles'\r\n\r\nconst renderActiveShape = (props: any) => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    \r\n  } = props;\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\r\n        {payload.name}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill=\"none\"\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill=\"#333\"\r\n      >{`${(percent * 100).toFixed(0)}%`}</text>\r\n    </g>\r\n  );\r\n};\r\n\r\n\r\nconst Tokenomics = () => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const onPieEnter = useCallback(\r\n    (_, index) => {\r\n      setActiveIndex(index);\r\n    },\r\n    [setActiveIndex]\r\n  );\r\n    return (\r\n\r\n      <PageWrapper>\r\n        <TokenomicsContainer>\r\n\r\n          <ChartWrapper>\r\n            <ChartTitle><TopLine>Total Supply (aim 1T after 2 years)</TopLine></ChartTitle>\r\n              <AreaChart\r\n                width={500}\r\n                height={350}\r\n                data={dataSet}\r\n                margin={{\r\n                  top: 10,\r\n                  right: 30,\r\n                  left: 0,\r\n                  bottom: 0,\r\n                }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Area type=\"monotone\" dataKey=\"Team\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n                <Area type=\"monotone\" dataKey=\"Bootstrap\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\r\n                <Area type=\"monotone\" dataKey=\"Rewards\" stackId=\"1\" stroke=\"#ffc658\" fill=\"#ffc658\" />\r\n              </AreaChart>\r\n            </ChartWrapper>\r\n          <TextWrapper>\r\n            \r\n            <Heading>Total Supply</Heading>\r\n            No hard cap is set to the max supply of ₲. The reason is that playing the game should be encouraged and as such, inflating the game against passive holders is incentivised. The following shares are programmed into the game:\r\n            <UnorderedList>\r\n              <ListItem>180,000,000,000 (180B) Team Tokens: Team tokens are released (vested) over the course of 15 months.</ListItem>\r\n              <ListItem>150,000,000,000 (150B, maximum) tokens can be bought to bootstrap early adaptors. This option is locked automatically after 1 month / 1000 participants.</ListItem>\r\n              <ListItem>Rewards from playing the game.</ListItem>\r\n            </UnorderedList>\r\n          \r\n          </TextWrapper>\r\n        </TokenomicsContainer>\r\n\r\n        <AllocationContainer>\r\n          <PieTextWrapper>\r\n            \r\n            <HeadingPie>Team allocation</HeadingPie>\r\n              <UnorderedList>\r\n                <ListItem>20% Marketing.</ListItem>\r\n                <ListItem>30% reserved for (future) team salaries.</ListItem>\r\n                <ListItem>10% reserved for funding LINK balance of contract.</ListItem>\r\n                <ListItem>20% external audits.</ListItem>\r\n                <ListItem>20% long term treasury.</ListItem>\r\n              </UnorderedList>\r\n          </PieTextWrapper>\r\n          <PieWrapper>\r\n            <PieTitle><TopLinePie>Allocation of the team-reserved tokens</TopLinePie></PieTitle>\r\n            <PieChart width={600} height={600}>\r\n              <Pie\r\n                activeIndex={activeIndex}\r\n                activeShape={renderActiveShape}\r\n                data={data}\r\n                cx={300}\r\n                cy={300}\r\n                innerRadius={80}\r\n                outerRadius={110}\r\n                fill=\"#4B59F7\"\r\n                dataKey=\"value\"\r\n                onMouseEnter={onPieEnter}\r\n              />\r\n            </PieChart>\r\n            </PieWrapper>\r\n          \r\n        </AllocationContainer>\r\n   </PageWrapper>\r\n    )\r\n}\r\n\r\nexport default Tokenomics","import styled from '@emotion/styled/macro';\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const CrimeContainer = styled.div`\r\nmax-width: 70%;\r\nmax-height: 100%;\r\npadding: 30px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const Title = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 160px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const SubTitle = styled.h4`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 20px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`","import {CrimeContainer, Title, SubTitle} from './Admin.elements';\r\nimport React, {useEffect }  from 'react';\r\nimport {tokenAddress, getLINKBalance, transferETH, getClaimed, getVesting } from '../../components/EthFunctions';\r\nimport {ethers} from 'ethers';\r\nimport NumberFormat from \"react-number-format\";\r\nimport {StateContext} from '../../App';\r\nimport {ColoredLine, PageWrapper} from '../../globalStyles'\r\nimport { SubmitButton } from '../../features/shared/ui/buttons/SubmitButton';\r\n\r\n\r\n\r\nconst Admin = () => {\r\n\r\n    const [, , mmConnected, , , ] = React.useContext(StateContext);\r\n    const [linkBalance, setLinkBalance] = React.useState(0);\r\n    const [ethBalance, setEthBalance] = React.useState(0);\r\n    const [vested, setVested] = React.useState(0);\r\n\r\n    useEffect(() => {  \r\n      const fetchEvents = async() => {\r\n        console.log(\"mm conn: \", mmConnected)\r\n        if (mmConnected) {\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          const balance = await provider.getBalance(tokenAddress);\r\n          //const balanceToEth = balance.div(10**18);\r\n          console.log(\"MATIC in contract: \", (ethers.utils.formatEther( balance )))\r\n          setEthBalance(ethers.utils.formatEther( balance ));\r\n          const linkBalance = await getLINKBalance();\r\n          setLinkBalance(linkBalance);\r\n          const tokensVested = await getClaimed();\r\n          setVested(ethers.utils.formatEther( tokensVested ));\r\n        }\r\n      }\r\n        fetchEvents();\r\n    }, [mmConnected]); // trigger on setTriggerEvents if we want to update every 20s\r\n\r\n    //event tokensDeposited(address indexed sender, uint256 indexed amount);\r\n    //event tokensWithdrawn(address indexed sender, uint256 indexed amount);\r\n\r\n    return (\r\n        <PageWrapper>\r\n          <Title> Admin page </Title><br />\r\n          <SubTitle> Available LINK in contract: <NumberFormat\r\n            value={linkBalance}\r\n            decimalSeparator=\".\"\r\n            displayType=\"text\"\r\n            decimalScale={3}\r\n            type=\"text\" />  ( or <NumberFormat\r\n                value={linkBalance/0.0001 }\r\n                decimalSeparator=\".\"\r\n                displayType=\"text\"\r\n                decimalScale={4}\r\n                type=\"text\" /> actions)     \r\n            </SubTitle>\r\n            <SubTitle> Available MATIC in contract: <NumberFormat\r\n            value={ethBalance}\r\n            decimalSeparator=\".\"\r\n            displayType=\"text\"\r\n            decimalScale={3}\r\n            type=\"text\" />   \r\n            <SubmitButton onClick={() => { transferETH()}}> Withdraw! </SubmitButton> </SubTitle> \r\n\r\n            <SubTitle> Vested GANG tokens: <NumberFormat\r\n            value={vested}\r\n            decimalSeparator=\".\"\r\n            displayType=\"text\"\r\n            decimalScale={0}\r\n            type=\"text\" />   \r\n            <SubmitButton onClick={() => { getVesting()}}> Use vesting! </SubmitButton> </SubTitle> \r\n\r\n            \r\n\r\n            <CrimeContainer>\r\n\r\n\r\n            \r\n\r\n            </CrimeContainer>\r\n            <ColoredLine color=\"red\" />\r\n\r\n        </PageWrapper>\r\n        \r\n    )\r\n}\r\n\r\nexport default Admin\r\n","import {useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom'\r\n\r\nexport default function ScrollToTop() {\r\n    const {pathname} = useLocation()\r\n    useEffect(() => {\r\n        window.scrollTo(0,0)\r\n    }, [pathname]\r\n    );\r\n    return null;\r\n}","import styled from 'styled-components';\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const CrimeContainer = styled.div`\r\nmax-width: 70%;\r\nmax-height: 100%;\r\npadding: 30px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const Title = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 160px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const SubTitle = styled.h4`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 20px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`","import { CrimeContainer, Title, SubTitle } from './Deposit.elements';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { tokenAddress, withdrawFunds, depositFunds } from '../../components/EthFunctions';\r\nimport { ethers } from 'ethers';\r\nimport tokenABI from '../../components/EthABI'\r\nimport NumberFormat from \"react-number-format\";\r\nimport { StateContext } from '../../App';\r\nimport { ColoredLine, PageWrapper } from '../../globalStyles'\r\nimport { SubmitButton } from '../../features/shared/ui/buttons/SubmitButton';\r\nimport styled from \"@emotion/styled/macro\";\r\n\r\n\r\n\r\nconst Deposit = () => {\r\n    const [inputValueDeposit, setInputValueDeposit] = React.useState();\r\n    const [inputValueWithdraw, setInputValueWithdraw] = React.useState();\r\n\r\n    const onChangeHandlerDeposit = event => {\r\n        setInputValueDeposit(event);\r\n    };\r\n\r\n    const onChangeHandlerWithdraw = event => {\r\n        setInputValueWithdraw(event);\r\n    };\r\n\r\n    const [depositEvents, setDepositEvents] = useState([]);\r\n    const [withdrawEvents, setWithdrawEvents] = useState([]);\r\n    const [, , mmConnected, , ,] = React.useContext(StateContext);\r\n\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            console.log(\"mm conn: \", mmConnected)\r\n            if (mmConnected) {\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const signer = provider.getSigner();\r\n                const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n                let providerBlock = await provider.getBlockNumber();\r\n\r\n                // deposit events\r\n                let depositFilter = gangContract.filters.tokensDeposited(null, null) // sender, amount\r\n                let deposit = await gangContract.queryFilter(depositFilter, providerBlock - 70000, providerBlock)\r\n                setDepositEvents(deposit.reverse())\r\n\r\n                // deposit events\r\n                let withdrawFilter = gangContract.filters.tokensWithdrawn(null, null) // sender, amount\r\n                let withdraw = await gangContract.queryFilter(withdrawFilter, providerBlock - 70000, providerBlock)\r\n                setWithdrawEvents(withdraw.reverse())\r\n            }\r\n        }\r\n        fetchEvents();\r\n    }, [mmConnected]); // trigger on setTriggerEvents if we want to update every 20s\r\n\r\n    //event tokensDeposited(address indexed sender, uint256 indexed amount);\r\n    //event tokensWithdrawn(address indexed sender, uint256 indexed amount);\r\n\r\n\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <Title> Deposit & Withdraw your ₲ </Title><br />\r\n            <SubTitle> Warning: only one withdrawal per week to limit safekeeping by players!</SubTitle>\r\n            <CrimeContainer>\r\n                Withdraw <NumberFormat\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    value={inputValueWithdraw}\r\n                    prefix=\"₲\"\r\n                    decimalSeparator=\".\"\r\n                    displayType=\"input\"\r\n                    type=\"text\"\r\n                    thousandSeparator={true}\r\n                    allowNegative={true}\r\n                    onValueChange={({ value }) => {\r\n                        onChangeHandlerWithdraw(value)\r\n                    }} />\r\n\r\n                <SubmitButton onClick={() => { withdrawFunds(inputValueWithdraw) }}> Go for it! </SubmitButton>\r\n\r\n            </CrimeContainer>\r\n\r\n            <CrimeContainer>\r\n                Deposit <NumberFormat\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    value={inputValueDeposit}\r\n                    prefix=\"₲\"\r\n                    decimalSeparator=\".\"\r\n                    displayType=\"input\"\r\n                    type=\"text\"\r\n                    thousandSeparator={true}\r\n                    allowNegative={true}\r\n                    onValueChange={({ value }) => {\r\n                        onChangeHandlerDeposit(value)\r\n                    }} />\r\n\r\n                <SubmitButton onClick={() => { depositFunds(inputValueDeposit) }}> Go for it! </SubmitButton>\r\n\r\n            </CrimeContainer>\r\n            {withdrawEvents.length > 0 || depositEvents.length > 0 ?\r\n                <ColoredLine color=\"red\" /> : null}\r\n\r\n            {withdrawEvents.length > 0 ?\r\n\r\n                <>\r\n                    <h1 style={{ color: \"white\" }}> Last withdrawals: </h1>\r\n                    {withdrawEvents.map((option, index) => (\r\n                        <h4 key={index} style={{ color: \"green\" }}> {option.args[0]} withdrew ₲<NumberFormat\r\n                            value={option.args[1].toNumber()}\r\n                            displayType={\"text\"}\r\n                            decimalSeparator={\".\"}\r\n                            thousandSeparator={true}\r\n                            decimalScale={0} /></h4>\r\n                    ))}</> : null}\r\n            {depositEvents.length > 0 ?\r\n\r\n                <>\r\n                    <h1 style={{ color: \"white\" }}> Last deposits: </h1>\r\n                    {depositEvents.map((option, index) => (\r\n                        <h4 key={index} style={{ color: \"green\" }}> {option.args[0]} deposited ₲<NumberFormat\r\n                            value={option.args[1].toNumber()}\r\n                            displayType={\"text\"}\r\n                            decimalSeparator={\".\"}\r\n                            thousandSeparator={true}\r\n                            decimalScale={0} /></h4>\r\n                    ))}</> : null}\r\n            <FillBox />\r\n        </PageWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Deposit\r\n\r\nconst FillBox = styled.div`\r\nflex-grow: 1;\r\n    display: flex;\r\n\r\n\r\n`;","import styled from 'styled-components';\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const AttackPlayerContainer = styled.div`\r\nmax-width: 100%;\r\nmax-height: 100%;\r\npadding: 160px 0;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\nexport const Line = styled.hr`\r\ncolor: rgba(0, 0, 0, 0.65);\r\nposition: fixed;\r\nwidth: 100%;\r\nheight: 100px;\r\nsize: 30;\r\n`\r\n\r\nexport const Title = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 160px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\nexport const SubTitle = styled.h4`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 20px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`","import React, { useEffect, useState } from 'react';\r\nimport { AttackPlayerContainer, Title, SubTitle } from './IndProtection.elements';\r\nimport { ColoredLine, PageWrapper } from '../../globalStyles'\r\nimport { SubmitButton } from '../../features/shared/ui/buttons/SubmitButton';\r\nimport { StateContext, EthContext } from '../../App';\r\nimport { buyProtection } from '../../components/EthFunctions';\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst IndProtection = () => {\r\n    const [, , mmConnected, , ,] = React.useContext(StateContext);\r\n    const [, , , , , , , , inGameFunds, , , , ,] = React.useContext(EthContext);\r\n\r\n    const [amount, setAmount] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            if (mmConnected) {\r\n\r\n\r\n            }\r\n        }\r\n\r\n        fetchEvents();\r\n    }, [mmConnected]); // trigger on setTriggerEvents if we want to update every 20s\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <Title> Buy protection against attacks </Title><br />\r\n            <SubTitle>Tip: buy protection when you have big bags.</SubTitle>\r\n            <AttackPlayerContainer>\r\n                Days to buy:\r\n\r\n                <NumberFormat\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    prefix=\"\"\r\n                    displayType=\"input\"\r\n                    thousandSeparator={true}\r\n                    allowNegative={false}\r\n                    placeholder={\"Enter days..\"}\r\n                    onValueChange={({ value }) => { setAmount(value) }}\r\n                    value={amount}\r\n                />\r\n\r\n\r\n\r\n                {amount > 0 ? <> This will cost: ₲<NumberFormat\r\n                    value={inGameFunds / 100 * amount}\r\n                    displayType={\"text\"}\r\n                    decimalSeparator={\".\"}\r\n                    thousandSeparator={true}\r\n                    decimalScale={0} /> </> : null}\r\n\r\n                <SubmitButton onClick={() => { buyProtection(amount) }}> Buy protection! </SubmitButton>\r\n\r\n            </AttackPlayerContainer>\r\n            <ColoredLine color=\"red\" />\r\n\r\n\r\n        </PageWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default IndProtection\r\n","import styled from 'styled-components';\r\n\r\nexport const AttackDoubleContainer = styled.div`\r\nmax-width: 100%;\r\nmax-height: 100%;\r\npadding: 00px 0;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\nalign-items: start;\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const AttackPlayerContainer = styled.div`\r\nmax-width: 40%;\r\nmax-height: 100%;\r\njustify-content: start;\r\nflex-direction: column; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n\r\nexport const Line = styled.hr`\r\ncolor: rgba(0, 0, 0, 0.65);\r\nposition: fixed;\r\nwidth: 100%;\r\nheight: 100px;\r\nsize: 30;\r\n`\r\n\r\nexport const Title = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 160px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\nexport const SubTitle = styled.h4`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 160px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`","import React, { useEffect, useState } from 'react';\r\nimport { AttackPlayerContainer, Title, SubTitle, AttackDoubleContainer } from './Attackplayer.elements';\r\nimport { ColoredLine, PageWrapper } from '../../globalStyles'\r\nimport { StateContext, EthContext } from '../../App';\r\nimport { tokenAddress, attackPlayer, hireAttorney } from '../../components/EthFunctions';\r\nimport { ethers } from 'ethers';\r\nimport tokenABI from '../../components/EthABI'\r\nimport NumberFormat from \"react-number-format\";\r\nimport { SubmitButton } from '../../features/shared/ui/buttons/SubmitButton';\r\n\r\nconst Attackplayer = () => {\r\n    const [, , mmConnected, , ,] = React.useContext(StateContext);\r\n    const [, , , , , , , , , , jailSeconds, attorneySeconds, attackSeconds,] = React.useContext(EthContext);\r\n\r\n    const [events, setEvents] = useState([]);\r\n    const [lastAttacker, setLastAttacker] = useState();\r\n    const [lastLoot, setLastLoot] = useState();\r\n    const [lastResult, setLastResult] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            if (mmConnected) {\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const signer = provider.getSigner();\r\n                const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n                let providerBlock = await provider.getBlockNumber();\r\n\r\n                let attackFilter = gangContract.filters.playerAttacked(null, null, null, null, null)\r\n                let attackMeFilter = gangContract.filters.playerAttacked(null, null, ethers.utils.getAddress(window.ethereum.selectedAddress), null, null)\r\n                let events = await gangContract.queryFilter(attackFilter, providerBlock - 70000, providerBlock)\r\n                let eventsMe = await gangContract.queryFilter(attackMeFilter, providerBlock - 70000, providerBlock)\r\n                let lastEventsMe = eventsMe.reverse();\r\n                if (lastEventsMe.length !== 0) {\r\n                    setLastAttacker(lastEventsMe[0].args[1]);\r\n                    setLastLoot(lastEventsMe[0].args[3].toNumber());\r\n                    setLastResult(lastEventsMe[0].args[0]);\r\n                }\r\n                setEvents(events.reverse())\r\n            }\r\n        }\r\n\r\n        fetchEvents();\r\n    }, [mmConnected]); // trigger on setTriggerEvents if we want to update every 20s\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <SubTitle>Tip: train your attack for a higher chance of success!</SubTitle>\r\n\r\n            <AttackDoubleContainer>\r\n\r\n                <AttackPlayerContainer>\r\n                    <Title> Attack random player </Title><br />\r\n\r\n                    {attackSeconds === 0 && jailSeconds === 0 ? <SubmitButton onClick={() => { attackPlayer(\"0x000000000000000000000000000000000000dEaD\") }}> Attack player</SubmitButton> : null}\r\n                    {jailSeconds > 0 && attorneySeconds === 0 ? <SubmitButton onClick={() => { hireAttorney() }}> Hire attorney</SubmitButton> : null}\r\n\r\n\r\n                </AttackPlayerContainer>\r\n\r\n                <AttackPlayerContainer>\r\n                    <Title> Revenge yourself! </Title><br />\r\n                    {lastResult === true ? <>{lastAttacker} stole ₲<NumberFormat\r\n                        value={lastLoot}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        decimalScale={0} /> </> : \"the last attacker failed!\"}\r\n                    {attackSeconds === 0 && jailSeconds === 0 ? (lastResult === true ? <SubmitButton onClick={() => { attackPlayer(\"1234\") }}> Take revenge </SubmitButton> :\r\n                        <SubmitButton onClick={() => { attackPlayer(\"1234\") }}> Further Humiliation! </SubmitButton>) : null}\r\n                    {jailSeconds > 0 && attorneySeconds === 0 ? <SubmitButton onClick={() => { hireAttorney() }}> Hire attorney</SubmitButton> : null}\r\n\r\n\r\n                </AttackPlayerContainer>\r\n            </AttackDoubleContainer>\r\n            <ColoredLine color=\"red\" />\r\n            <h1 style={{ color: \"white\" }}> Last attacks: </h1>\r\n            {events.map((option, index) => (\r\n                index > 2 ? null : (option.args[0] === true ?\r\n                    <h4 key={index} style={{ color: \"green\" }}> index {index} -- {option.args[1]} attacked {option.args[2]} for a loot of: ₲<NumberFormat\r\n                        value={option.args[3].toNumber()}\r\n                        displayType={\"text\"}\r\n                        decimalSeparator={\".\"}\r\n                        thousandSeparator={true}\r\n                        decimalScale={0} /></h4> :\r\n                    <h4 style={{ color: \"red\" }}> index {index} --  {option.args[1]} failed to attack {option.args[2]} costing: ₲ <NumberFormat\r\n                        value={option.args[3].toNumber()}\r\n                        displayType={\"text\"}\r\n                        decimalSeparator={\".\"}\r\n                        thousandSeparator={true}\r\n                        decimalScale={0} /></h4>)\r\n            ))}\r\n\r\n        </PageWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Attackplayer\r\n","import styled from 'styled-components';\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const CrimeContainer = styled.div`\r\nmax-width: 90%;\r\nmax-height: 100%;\r\npadding: 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: column; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const ChartContainer = styled.div`\r\nwidth: 100%;\r\nmax-height: 100%;\r\npadding: 0px 40px;\r\njustify-content: center;\r\nalign-items: center;\r\nflex-direction: column; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const SelectContainer = styled.div`\r\nwidth: 80%;\r\nmax-height: 100%;\r\npadding: 0px 40px;\r\njustify-content: center;\r\nalign-items: center;\r\nalign-self: center;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const Title = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 160px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const SubTitle = styled.h4`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\nmargin-bottom: -20px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n`\r\n","import { CrimeContainer, Title, ChartContainer, SubTitle, SelectContainer } from './Crime.elements';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { tokenAddress, crime } from '../../components/EthFunctions';\r\nimport { ethers } from 'ethers';\r\nimport tokenABI from '../../components/EthABI'\r\nimport NumberFormat from \"react-number-format\";\r\nimport { StateContext, EthContext } from '../../App';\r\nimport { ColoredLine, PageWrapper } from '../../globalStyles'\r\nimport { SubmitButton } from '../../features/shared/ui/buttons/SubmitButton';\r\nimport Select from 'react-select'\r\nimport { BarChart, Text, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\r\n\r\nconst Crime = () => {\r\n    const [, , mmConnected, , ,] = React.useContext(StateContext);\r\n    const [, , attackState, , , , , , , , jailSeconds, , , crimeSeconds] = React.useContext(EthContext);\r\n\r\n    const options = [\r\n        { value: '1', label: 'Petty crime' },\r\n        { value: '2', label: 'Break into a villa' },\r\n        { value: '3', label: 'Armed robbery' },\r\n        { value: '4', label: 'Hack a company and ask for ransom' },\r\n        { value: '5', label: 'Hijack a private jet' }\r\n    ]\r\n\r\n\r\n    const [inputValue, setInputValue] = React.useState(options[0].value);\r\n    const [pettyChance, setPettyChance] = React.useState(0);\r\n    const [villaChance, setVillaChance] = React.useState(0);\r\n    const [robChance, setRobChance] = React.useState(0);\r\n    const [hackChance, setHackChance] = React.useState(0);\r\n    const [hijackChance, setHijackChance] = React.useState(0);\r\n\r\n    const onChangeHandler = event => {\r\n        setInputValue(event.value);\r\n    };\r\n\r\n\r\n    const [events, setEvents] = useState([]);\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            if (mmConnected) {\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const signer = provider.getSigner();\r\n                const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n                let providerBlock = await provider.getBlockNumber();\r\n\r\n                // attack events\r\n                let crimeFilter = gangContract.filters.crimeResult(window.ethereum.selectedAddress, null, null, null) // success, loot, stamp\r\n                let events = await gangContract.queryFilter(crimeFilter, providerBlock - 70000, providerBlock)\r\n                setEvents(events.reverse())\r\n                console.log(\"Events are: \", events)\r\n            }\r\n        }\r\n        fetchEvents();\r\n    }, [mmConnected]); // trigger on setTriggerEvents if we want to update every 20s\r\n\r\n    useEffect(() => {\r\n        const setChances = async () => {\r\n            if (mmConnected) {\r\n\r\n                setPettyChance(1.2 - 0.8 * 2 ** -((attackState / 1000000 / 20)) > 1 ? 1 : 1.2 - 0.8 * 2 ** -((attackState / 1000000 / 20)));\r\n                setVillaChance(1.1 - 0.8 * 2 ** -((attackState / 1000000 / 30)) > 1 ? 1 : 1.1 - 0.8 * 2 ** -((attackState / 1000000 / 30)));\r\n                setRobChance(1.1 - 0.8 * 2 ** -((attackState / 1000000 - 15) / 40) > 1 ? 1 : 1.1 - 0.8 * 2 ** -((attackState / 1000000 - 15) / 40));\r\n                setHackChance(1.1 - 0.8 * 2 ** -((attackState / 1000000 - 35) / 40));\r\n                setHijackChance(1.1 - 0.8 * 2 ** -((attackState / 1000000 - 55) / 35));\r\n                //setOptionsState([...optionsState,\r\n                //  {value: \"1\", label: pettyChance},\r\n                //  {value: \"2\", label: villaChance},\r\n                //  {value: \"3\", label: robChance},\r\n                //  {value: \"4\", label: hackChance},\r\n                //  {value: \"5\", label: hijackChance},\r\n                //])\r\n            }\r\n        }\r\n        setChances();\r\n    }, [attackState, mmConnected]);\r\n\r\n    const data = [\r\n        {\r\n            name: 'Petty',\r\n            value: pettyChance * 100,\r\n        },\r\n        {\r\n            name: 'Villa',\r\n            value: villaChance * 100,\r\n        },\r\n        {\r\n            name: 'Robbery',\r\n            value: robChance * 100,\r\n        },\r\n        {\r\n            name: 'Hacking',\r\n            value: hackChance * 100,\r\n        },\r\n        {\r\n            name: 'Hijacking',\r\n            value: hijackChance * 100,\r\n        }\r\n\r\n    ]\r\n\r\n    const customStyles = {\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            borderBottom: '2px dotted blue',\r\n            color: state.isSelected ? 'white' : 'black',\r\n            backgroundColor: state.isSelected ? 'blue' : 'white',\r\n            \"&:hover\": {\r\n                backgroundColor: \"lightgrey\"\r\n            }\r\n        }),\r\n        control: (provided) => ({\r\n            ...provided,\r\n            marginTop: \"\",\r\n        }),\r\n        container: base => ({\r\n            ...base,\r\n            flex: 1\r\n        })\r\n    }\r\n\r\n    const CustomizedLabelB = ({ kapi, metric, viewBox }) => {\r\n        return (\r\n            <Text\r\n                x={0}\r\n                y={0}\r\n                fill='white'\r\n                dx={-150}\r\n                dy={30}\r\n                textAnchor=\"start\"\r\n                width={180}\r\n                transform=\"rotate(-90)\"\r\n            >\r\n                Success rate (%)\r\n            </Text>\r\n        );\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <Title> Crime </Title><br />\r\n            <CrimeContainer>\r\n\r\n                <ChartContainer>\r\n                    <SubTitle> Your chance of success </SubTitle><br />\r\n                    <BarChart\r\n                        width={500}\r\n                        height={300}\r\n                        data={data}\r\n                        margin={{\r\n                            top: 5,\r\n                            right: 30,\r\n                            left: 20,\r\n                            bottom: 5,\r\n                        }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis label={<CustomizedLabelB />} />\r\n                        <Tooltip />\r\n                        <Bar dataKey=\"value\" fill=\"#2C3D83\" />\r\n                    </BarChart>\r\n                </ChartContainer>\r\n\r\n\r\n                <SelectContainer>   {jailSeconds === 0 && crimeSeconds === 0 ?\r\n                    <Select defaultValue={options[0]} options={options} onChange={onChangeHandler} styles={customStyles} /> : null}\r\n\r\n                    {jailSeconds !== 0 || crimeSeconds !== 0 ? \"You are not ready yet!\" : <SubmitButton onClick={() => { crime(inputValue) }}> Go for it! </SubmitButton>}\r\n                </SelectContainer>\r\n            </CrimeContainer>\r\n\r\n            <ColoredLine color=\"red\" />\r\n\r\n\r\n\r\n\r\n\r\n            <h1 style={{ color: \"white\" }}> Your last crimes: </h1>\r\n            {events.map((option, index) => (\r\n                index > 2 ? null : (option.args[1] === true ?\r\n\r\n                    <h4 key={index} style={{ color: \"green\" }}>\r\n                        {Math.floor((Date.now() / 1000 - option.args[3].toNumber()) / 3600) > 0 ? <> {Math.floor((Date.now() / 1000 - option.args[3].toNumber()) / 3600)} hours ago </> : \"In the last hour \"}\r\n                        you looted ₲<NumberFormat\r\n                            value={option.args[2].toNumber()}\r\n                            displayType={\"text\"}\r\n                            decimalSeparator={\".\"}\r\n                            thousandSeparator={true}\r\n                            decimalScale={0} /> </h4> :\r\n                    <h4 key={index} style={{ color: \"red\" }}>\r\n                        {Math.floor((Date.now() / 1000 - option.args[3].toNumber()) / 3600) > 0 ? <> {Math.floor((Date.now() / 1000 - option.args[3].toNumber()) / 3600)} hours ago </> : \"In the last hour \"}\r\n\r\n                        you failed.. </h4>)\r\n            ))}\r\n        </PageWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Crime\r\n","import styled from 'styled-components';\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const CrimeContainer = styled.div`\r\nmax-width: 90%;\r\nmax-height: 100%;\r\npadding: 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const Title = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 160px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n\r\n\r\nexport const TitleTwo = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 0px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\nexport const Box = styled.h4`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 20px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\nexport const SubTitle = styled.h4`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 20px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\nexport const TextBox = styled.h6`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 20px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\nexport const Img = styled.img`\r\nborder-radius: 10px;\r\nmax-width: 70%;\r\nheight: auto;\r\nmargin-left: 50px;\r\n`","import { Title, SubTitle, TitleTwo, Box, TextBox } from './Crowdfunding.elements';\r\nimport React, { useEffect } from 'react';\r\nimport { tokenAddress, crowdFundStart, crowdFundingReturn } from '../../components/EthFunctions';\r\n\r\nimport { ethers } from 'ethers';\r\nimport tokenABI from '../../components/EthABI'\r\nimport NumberFormat from \"react-number-format\";\r\nimport { StateContext, EthContext } from '../../App';\r\nimport { ColoredLine, PageWrapper } from '../../globalStyles'\r\nimport { SubmitButton } from '../../features/shared/ui/buttons/SubmitButton';\r\nimport Select from 'react-select'\r\nimport { useTable } from 'react-table'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  table {\r\n    border-spacing: 0;\r\n    border: 1px solid black;\r\n    color: white;\r\n\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 0.5rem;\r\n      border-bottom: 1px solid black;\r\n      border-right: 1px solid black;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nfunction Table({ columns, data }) {\r\n    // Use the state and functions returned from useTable to build your UI\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n    })\r\n\r\n    // Render the UI for your table\r\n    return (\r\n        <table {...getTableProps()}>\r\n            <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {rows.map((row, i) => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Crowdfunding = () => {\r\n    const [, , mmConnected, , ,] = React.useContext(StateContext);\r\n    const [, , , , , , , , , , , , , , , crowdfundSeconds, crowdfundClaimable, setCrowdfundSeconds] = React.useContext(EthContext);\r\n\r\n    const options = [\r\n        { value: '1', label: 'Stable' },\r\n        { value: '2', label: 'Growth' },\r\n        { value: '3', label: 'Speculative' },\r\n\r\n    ]\r\n\r\n    const [gainsLast, setGainsLast] = React.useState([]);\r\n\r\n\r\n\r\n\r\n\r\n    const [choice, setChoice] = React.useState(1);\r\n    const [amount, setAmount] = React.useState();\r\n\r\n    const onChangeHandlerChoice = event => {\r\n        setChoice(event.value);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            if (mmConnected) {\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const signer = provider.getSigner();\r\n                const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n                let providerBlock = await provider.getBlockNumber();\r\n                let crowdFundFilter = gangContract.filters.crowdFundGains(null, null) // initiator, reward\r\n                let eventCrowdFund = await gangContract.queryFilter(crowdFundFilter, providerBlock - 70000, providerBlock)\r\n                setGainsLast(eventCrowdFund.reverse())\r\n            }\r\n        }\r\n        fetchEvents();\r\n    }, [mmConnected]); // trigger on setTriggerEvents if we want to update every 20s\r\n\r\n    const customStyles = {\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            borderBottom: '2px dotted blue',\r\n            color: state.isSelected ? 'white' : 'black',\r\n            backgroundColor: state.isSelected ? 'blue' : 'white',\r\n            \"&:hover\": {\r\n                backgroundColor: \"lightgrey\"\r\n            }\r\n        }),\r\n        control: (provided) => ({\r\n            ...provided,\r\n            marginTop: \"\",\r\n        }),\r\n        container: base => ({\r\n            ...base,\r\n            flex: 1\r\n        })\r\n    }\r\n    const onChangeHandler = event => {\r\n        setAmount(event);\r\n    };\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n\r\n            {\r\n                Header: 'Chosen investment',\r\n                accessor: 'chosen',\r\n            },\r\n            {\r\n                Header: 'Stable returns',\r\n                accessor: 'stable',\r\n            },\r\n            {\r\n                Header: 'outperforming',\r\n                accessor: 'outperform',\r\n            },\r\n            {\r\n                Header: 'Bankruptcy',\r\n                accessor: 'bankruptcy',\r\n            },\r\n\r\n        ],\r\n        [])\r\n\r\n    const data = React.useMemo(() =>\r\n        [\r\n            {\r\n                chosen: 'Stable investment',\r\n                stable: \"90%\",\r\n                outperform: \"2%\",\r\n                bankruptcy: \"8%\"\r\n            },\r\n            {\r\n                chosen: 'Growth investment',\r\n                stable: \"60%\",\r\n                outperform: \"10%\",\r\n                bankruptcy: \"30%\"\r\n            },\r\n            {\r\n                chosen: 'Stable investment',\r\n                stable: \"0%\",\r\n                outperform: \"22%\",\r\n                bankruptcy: \"78%\"\r\n            },\r\n        ], [])\r\n\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <Title> Crowdfunding page </Title><br />\r\n            <TextBox>Stable investments give peace of mind while speculative investments can net explosive returns. Below table helps you make a choice! Which type of investor are you?</TextBox>\r\n            <Styles>\r\n                <Table columns={columns} data={data} />\r\n            </Styles>\r\n\r\n\r\n            {crowdfundSeconds === 0 && crowdfundClaimable !== 1 ? <> <SubTitle> Start Crowdfunding </SubTitle>\r\n\r\n                <Select defaultValue={options[0]} options={options} onChange={onChangeHandlerChoice} styles={customStyles} />\r\n\r\n                <NumberFormat\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    prefix=\"₲ \"\r\n                    displayType=\"input\"\r\n                    thousandSeparator={true}\r\n                    allowNegative={false}\r\n                    placeholder={\"Enter amount..\"}\r\n                    onValueChange={({ value }) => { onChangeHandler(value) }}\r\n                    value={amount}\r\n                />\r\n                <SubmitButton onClick={() => { setCrowdfundSeconds(600); crowdFundStart(amount, choice) }}> Go for it! </SubmitButton> </> : <SubTitle> You are already invested. </SubTitle>}\r\n\r\n\r\n\r\n            <ColoredLine color=\"red\" />\r\n            <TitleTwo> Claim Crowdfunding rewards </TitleTwo>\r\n\r\n            {crowdfundSeconds === 0 && crowdfundClaimable === 1 ? <SubmitButton onClick={() => { crowdFundingReturn() }}> Claim your rewards! </SubmitButton> : (crowdfundSeconds === 0 && crowdfundClaimable === 0 ? <SubTitle> Start a crowdfunding campaign first. </SubTitle> : <SubTitle> You have to wait {crowdfundSeconds} seconds to claim. </SubTitle>)}\r\n\r\n            <ColoredLine color=\"red\" />\r\n\r\n            <SubTitle> Last rewards: </SubTitle>\r\n            {gainsLast.map((option, index) => (\r\n                index > 4 ? null : (option.args[1] > 0 ?\r\n\r\n                    <Box><h4 style={{ color: \"green\" }}>  {option.args[0]}\r\n                        {gainsLast[option.args[0]] !== undefined ? ethers.utils.parseBytes32String(gainsLast[option.args[0]]) : null} looted  {<NumberFormat\r\n                            value={option.args[1].toNumber()}\r\n                            prefix={\"₲ \"}\r\n                            displayType={\"text\"}\r\n                            decimalSeparator={\".\"}\r\n                            thousandSeparator={true}\r\n                            decimalScale={0} />}\r\n                    </h4>\r\n                    </Box>\r\n\r\n                    :\r\n                    <Box>\r\n                        <h4 style={{ color: \"red\" }}>  {option.args[0] !== undefined ? option.args[0] : null} Failed </h4> </Box>)\r\n            ))}\r\n        </PageWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Crowdfunding\r\n","import styled from 'styled-components';\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const CrimeContainer = styled.div`\r\nmax-width: 70%;\r\nmax-height: 100%;\r\npadding: 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const Title = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 160px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\nexport const SubTitle = styled.div`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 0px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`","import { CrimeContainer, Title, SubTitle } from './Trainstats.elements';\r\nimport React from 'react';\r\nimport { Statstraining } from '../../components/EthFunctions';\r\nimport { EthContext } from '../../App';\r\nimport { PageWrapper } from '../../globalStyles'\r\nimport { SubmitButton } from '../../features/shared/ui/buttons/SubmitButton';\r\nimport Select from 'react-select'\r\n\r\nconst Trainstats = () => {\r\n    const [, , , , , , , , , , jailSeconds, , , crimeSeconds, trainSeconds] = React.useContext(EthContext);\r\n\r\n    const [inputValue, setInputValue] = React.useState(1);\r\n\r\n    const options = [\r\n        { value: '1', label: 'Weights training' },\r\n        { value: '2', label: 'Boxing training' },\r\n        { value: '3', label: 'Self-defense classes' }\r\n    ]\r\n\r\n    const onChangeHandler = event => {\r\n        setInputValue(event.value);\r\n    };\r\n\r\n\r\n\r\n    const customStyles = {\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            borderBottom: '2px dotted blue',\r\n            color: state.isSelected ? 'white' : 'black',\r\n            backgroundColor: state.isSelected ? 'blue' : 'white',\r\n            \"&:hover\": {\r\n                backgroundColor: \"lightgrey\"\r\n            }\r\n        }),\r\n        control: (provided) => ({\r\n            ...provided,\r\n            marginTop: \"\",\r\n        }),\r\n        container: base => ({\r\n            ...base,\r\n            flex: 1\r\n        })\r\n    }\r\n\r\n\r\n    //<Input type=\"submit\" value=\"Submit\" />\r\n    return (\r\n        <PageWrapper>\r\n            <Title> Train stats </Title><br />\r\n            <SubTitle> The following stats are trained: <ul><li> Weights training: 100% attack</li><li>Boxing training: 50% attack & 50% defense</li><li>Self-defense classes: 100% defense</li></ul></SubTitle>\r\n\r\n            <CrimeContainer>\r\n                {jailSeconds === 0 && crimeSeconds === 0 && trainSeconds === 0 ?\r\n                    <><Select defaultValue={options[0]} options={options} onChange={onChangeHandler} styles={customStyles} /> <SubmitButton onClick={() => { Statstraining(inputValue) }}> Go for it! </SubmitButton> </> : \"You are not ready yet!\"}\r\n\r\n            </CrimeContainer>\r\n\r\n        </PageWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Trainstats\r\n","import styled from 'styled-components';\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\n\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const CrimeContainer = styled.div`\r\nmax-width: 90%;\r\nmax-height: 100%;\r\npadding: 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const Title = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 160px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\nexport const TitleTwo = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 0px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n\r\nexport const SubTitle = styled.h4`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 20px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\nexport const Img = styled.img`\r\nborder-radius: 10px;\r\nmax-width: 70%;\r\nheight: auto;\r\nmargin-left: 50px;\r\n`\r\n\r\nexport const LeaveButton = styled.button`\r\nborder-radius: 4px;\r\nbackground: red;\r\nwhite-space: nowrap;\r\npadding: 10px 20px;\r\ncolor: #fff;\r\nfont-size: 16px;\r\noutline: none;\r\nborder: none;\r\ncursor: pointer;\r\n\r\n&:hover {\r\n    transition: all 0.3s ease-out;\r\n    background: #581B1C;\r\n}\r\n\r\n@media screen and (max-width: 960px) {\r\n    width: 200px;\r\n}\r\n`","import {ethers} from 'ethers'\r\nimport tokenABI from './EthABI'\r\nimport {tokenAddress} from './EthFunctions'\r\n\r\n\r\nexport async function getMemberFamilyIndex() {\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n    let index = await gangContract.getMemberFamilyIndex(await signer.getAddress()); // get index of the current family\r\n  return index;\r\n}\r\n\r\nexport async function getFamilyNames() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n    const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n    let names = await gangContract.getFamilyNames(); // get index of the current family\r\n  return names;\r\n}\r\n\r\nexport async function getFamilyOwner(index) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n    const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n    let owner = await gangContract.getFamilyOwner(index); // get index of the current family\r\n  return owner;\r\n}\r\n\r\nexport async function getFamilyRank() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n    const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n    let owner = await gangContract.getFamilyRank(await signer.getAddress()); // get index of the current family\r\n  return owner;\r\n}\r\n\r\nexport async function getFamilyBank(index) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n    const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n    let bank = await gangContract.getFamilyBank(index); // get index of the current family\r\n  return bank;\r\n}\r\n\r\nexport async function getFamilyFees(index) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n    const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n    let fees = await gangContract.getFamilyFees(index); // get index of the current family\r\n  return fees;\r\n}\r\n\r\nexport async function getAllFamilyMembers(index) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n    const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n    let members = await gangContract.getAllFamilyMembers(index); // get index of the current family\r\n  return members;\r\n}\r\n\r\nexport async function distributeFamilyBank(address, amount) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n    const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n    await gangContract.distributeFamilyBank(address, amount); // get index of the current family\r\n}\r\n\r\nexport async function getFamilyDefBonus() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n    const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n    let defBonus = await gangContract.getFamilyDefBonus(await signer.getAddress()); // get index of the current family\r\n    return defBonus;\r\n}\r\n\r\nexport async function getFamilyAttBonus() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n    const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n    let attBonus = await gangContract.getFamilyAttBonus(await signer.getAddress()); // get index of the current family\r\n    return attBonus;\r\n}\r\n\r\nexport async function upgradeFamilyItems(category, item) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n        const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n        await gangContract.upgradeFamilyItems(category, item); // get index of the current family\r\n    }\r\n\r\nexport async function depositFamilyBank(amount) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n        const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n        await gangContract.depositFamilyBank(amount); // get index of the current family\r\n    }\r\n\r\nexport async function startFamily(name, EntreeFee , missionFee) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n    let nameToBytes = ethers.utils.formatBytes32String ( name );\r\n    const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n    await gangContract.startFamily(nameToBytes, EntreeFee, missionFee); // get index of the current family\r\n}\r\n\r\nexport async function organizedAttack() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n    const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n    await gangContract.organizedAttack(); // get index of the current family\r\n}\r\n\r\nexport async function joinOrUprankFamily(index) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n    const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n    await gangContract.joinOrUprankFamily(index); // get index of the current family\r\n}\r\n\r\nexport async function leaveFamily(address) {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n    const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n    if (address === null) {\r\n      address = signer.getAddress();\r\n    }\r\n    await gangContract.leaveFamily(address); // get index of the current family\r\n}","import { CrimeContainer, Title, TitleTwo, SubTitle, LeaveButton } from './Familycontrol.elements';\r\nimport React, { useEffect } from 'react';\r\nimport { joinOrUprankFamily, leaveFamily, getMemberFamilyIndex, getFamilyNames, getFamilyOwner, getFamilyRank, getAllFamilyMembers, startFamily, getFamilyBank, distributeFamilyBank, getFamilyDefBonus, getFamilyAttBonus } from '../../components/EthFamilyFunctions';\r\n\r\nimport { ethers } from 'ethers';\r\n\r\nimport NumberFormat from \"react-number-format\";\r\nimport { StateContext, EthContext } from '../../App';\r\nimport { ColoredLine, PageWrapper } from '../../globalStyles'\r\nimport { SubmitButton } from '../../features/shared/ui/buttons/SubmitButton';\r\n\r\n\r\nconst Familycontrol = () => {\r\n    const [, , mmConnected, , ,] = React.useContext(StateContext);\r\n    const [defenseState, , attackState, , , , , , , , , , , , , , , , ,] = React.useContext(EthContext);\r\n\r\n    const [familyName, setFamilyName] = React.useState(\"\");\r\n    const [myFamilyName, setMyFamilyName] = React.useState(\"\");\r\n\r\n    const [entreeFee, setEntreeFee] = React.useState();\r\n    const [missionFee, setMissionFee] = React.useState();\r\n    const [familyOwner, setFamilyOwner] = React.useState();\r\n    const [familyRank, setFamilyRank] = React.useState();\r\n    const [familyBank, setFamilyBank] = React.useState();\r\n    const [familyTransferInput, setFamilyTransferInput] = React.useState();\r\n    const [receiverAddress, setReceiverAddress] = React.useState();\r\n\r\n    const [allFamilyMembers, setAllFamilyMembers] = React.useState([]);\r\n    const [familyAttackBonus, setFamilyAttackBonus] = React.useState();\r\n    const [familyDefenseBonus, setFamilyDefenseBonus] = React.useState();\r\n    const [myFamilyIndex, setMyFamilyIndex] = React.useState();\r\n\r\n\r\n    const onChangeHandlerEntree = event => {\r\n        setEntreeFee(event);\r\n    };\r\n\r\n    const onChangeHandlerMission = event => {\r\n        setMissionFee(event);\r\n    };\r\n\r\n    const onChangeHandlerTransfer = event => {\r\n        setFamilyTransferInput(event);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            if (mmConnected) {\r\n                let familyId = await getMemberFamilyIndex();\r\n                let familyIdNumber = familyId.toNumber();\r\n                setMyFamilyIndex(familyIdNumber);\r\n                let FamilyNames = await getFamilyNames();\r\n                if (FamilyNames.length > 0 && familyIdNumber !== 0) {\r\n                    let familyNameString = ethers.utils.parseBytes32String(FamilyNames[familyIdNumber - 1]);\r\n                    setMyFamilyName(familyNameString)\r\n                }\r\n                let familyOwner = await getFamilyOwner(familyIdNumber);\r\n                console.log(\"fam owner: \", familyOwner)\r\n                setFamilyOwner(familyOwner)\r\n                let familyRank = await getFamilyRank(); // if rank = 80 -> youre the boss\r\n                setFamilyRank(familyRank.toNumber())\r\n                console.log(familyRank.toNumber())\r\n\r\n\r\n                let familyBank = await getFamilyBank(familyIdNumber);\r\n                setFamilyBank(familyBank.toNumber())\r\n                let allMembers = await getAllFamilyMembers(familyIdNumber);\r\n                setAllFamilyMembers(allMembers)\r\n\r\n                let defBonus = await getFamilyDefBonus();\r\n                setFamilyDefenseBonus(defBonus.toNumber());\r\n                let attBonus = await getFamilyAttBonus();\r\n                setFamilyAttackBonus(attBonus.toNumber());\r\n            }\r\n        }\r\n        fetchEvents();\r\n    }, [mmConnected]); // trigger on setTriggerEvents if we want to update every 20s\r\n\r\n\r\n    let levelArray = [10, 30, 50, 70];\r\n    let statsArray = [0, 74, 124, 199];\r\n\r\n    //<Input type=\"submit\" value=\"Submit\" />\r\n    return (\r\n        <PageWrapper>\r\n            <Title> Family control page </Title><br />\r\n            <SubTitle> Current Family: {familyOwner === \"0x0000000000000000000000000000000000000000\" ? \"Not in a family\" : <> {myFamilyName} <LeaveButton onClick={() => { leaveFamily() }}> Leave family </LeaveButton></>}</SubTitle>\r\n            <SubTitle> Current family bank: <NumberFormat value={familyBank} displayType={\"text\"} thousandSeparator={true} prefix={\"₲ \"} /> </SubTitle>\r\n            <SubTitle> Current family rank: {familyRank === 80 ? \"Boss\" : (familyRank === 70 ? \"Underboss\" : (familyRank === 50 ? \"Caporegime\" : (familyRank === 30 ? \"Soldier\" : (familyRank === 10 ? \"Associate\" : \"Not in a family\"))))}</SubTitle>\r\n            <SubTitle> Number of family members: {familyOwner === 0x0000000000000000000000000000000000000000 ? \"Not in a family\" : allFamilyMembers.length}</SubTitle>\r\n            <SubTitle> Family attack bonus: {familyAttackBonus}</SubTitle>\r\n            <SubTitle> Family defense bonus: {familyDefenseBonus}</SubTitle>\r\n            {statsArray[levelArray.indexOf(familyRank)] < (defenseState + attackState) / 1000000 ? <LeaveButton onClick={() => { joinOrUprankFamily(myFamilyIndex) }}> Uprank!</LeaveButton> : null}\r\n\r\n            <ColoredLine color=\"red\" />\r\n\r\n\r\n            {familyRank === 80 ? <><TitleTwo> Transfer from bank to player balance: </TitleTwo><SubTitle>Amount to transfer:\r\n                <NumberFormat\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    value={familyTransferInput}\r\n                    prefix=\"₲\"\r\n                    displayType=\"input\"\r\n                    type=\"text\"\r\n                    thousandSeparator={true}\r\n                    allowNegative={false}\r\n                    onValueChange={({ value }) => {\r\n                        onChangeHandlerTransfer(value)\r\n                    }} />\r\n\r\n                Address:\r\n                <input type=\"text\" value={receiverAddress} onChange={value => setReceiverAddress(value.target.value)} />\r\n                <SubmitButton onClick={() => { distributeFamilyBank(receiverAddress, familyTransferInput) }}> Go for it! </SubmitButton>\r\n\r\n            </SubTitle>  <ColoredLine color=\"red\" /> </> : null}\r\n\r\n            <CrimeContainer>\r\n\r\n\r\n\r\n\r\n                {familyRank === 0 ?\r\n                    <><TitleTwo>Start a family!</TitleTwo> <ul><li>  Family Name:        <input placeholder={\"Enter a name..\"} type=\"text\" value={familyName} onChange={value => setFamilyName(value.target.value)} />\r\n                    </li><li> Entree fee ({'>'}0)\r\n                            <NumberFormat\r\n                                placeholder={\"Enter entree fee..\"}\r\n                                thousandsGroupStyle=\"thousand\"\r\n                                value={entreeFee}\r\n                                prefix=\"₲\"\r\n                                decimalSeparator=\".\"\r\n                                displayType=\"input\"\r\n                                type=\"text\"\r\n                                thousandSeparator={true}\r\n                                allowNegative={false}\r\n                                onValueChange={({ value }) => {\r\n                                    onChangeHandlerEntree(value)\r\n                                }} />\r\n                        </li><li>\r\n                            Family cut on income: (0-100%): <NumberFormat\r\n                                placeholder={\"Enter family cut..\"}\r\n                                thousandsGroupStyle=\"thousand\"\r\n                                value={missionFee}\r\n                                decimalSeparator=\".\"\r\n                                displayType=\"input\"\r\n                                type=\"text\"\r\n                                thousandSeparator={true}\r\n                                allowNegative={true}\r\n                                onValueChange={({ value }) => {\r\n                                    onChangeHandlerMission(value)\r\n                                }} />\r\n\r\n                            <SubmitButton onClick={() => { startFamily(familyName, entreeFee, missionFee) }}> Start your family! </SubmitButton>\r\n\r\n                        </li></ul></> : null}\r\n            </CrimeContainer>\r\n\r\n\r\n        </PageWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Familycontrol\r\n","import styled from 'styled-components';\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const CrimeContainer = styled.div`\r\nmax-width: 90%;\r\nmax-height: 100%;\r\npadding: 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: column; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\nexport const ItemContainer = styled.div`\r\nwidth: 70vh;\r\nmax-height: 10vh;\r\npadding: 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const Title = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 160px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\nexport const TitleTwo = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 0px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n\r\nexport const SubTitle = styled.h4`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 20px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\nexport const Img = styled.img`\r\nborder-radius: 10px;\r\nmax-width: 70%;\r\nheight: auto;\r\nmargin-left: 50px;\r\n`","import { CrimeContainer, Title, SubTitle, ItemContainer } from './Familyshop.elements';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { tokenAddress } from '../../components/EthFunctions';\r\nimport { ethers } from 'ethers';\r\nimport tokenABI from '../../components/EthABI'\r\nimport NumberFormat from \"react-number-format\";\r\nimport { StateContext } from '../../App';\r\nimport { ColoredLine, PageWrapper } from '../../globalStyles'\r\nimport { SubmitButton } from '../../features/shared/ui/buttons/SubmitButton';\r\nimport Select from 'react-select'\r\nimport { upgradeFamilyItems, depositFamilyBank, getFamilyNames } from '../../components/EthFamilyFunctions';\r\n\r\nconst Familyshop = () => {\r\n    const [, , mmConnected, , ,] = React.useContext(StateContext);\r\n\r\n    const optionsAttack = [\r\n        { value: '1', label: 'Brass knuckles' },\r\n        { value: '2', label: 'Hand gun' },\r\n        { value: '3', label: 'Uzi' },\r\n        { value: '4', label: 'AK47' }\r\n    ]\r\n\r\n    const optionsDefense = [\r\n        { value: '1', label: 'Police vest' },\r\n        { value: '2', label: 'Military vest' },\r\n    ]\r\n\r\n    const [inputValueAtt, setInputValueAttack] = React.useState(optionsAttack[0].value);\r\n    const [inputValueDef, setInputValueDefense] = React.useState(optionsDefense[0].value);\r\n    const [inputValueDeposit, setInputValueDeposit] = React.useState();\r\n\r\n    const onChangeHandlerAttack = event => {\r\n        setInputValueAttack(event.value);\r\n    };\r\n\r\n\r\n    const onChangeHandlerDefense = event => {\r\n        setInputValueDefense(event.value);\r\n    };\r\n\r\n    const onChangeHandlerDeposit = event => {\r\n        setInputValueDeposit(event);\r\n    };\r\n\r\n    const [eventsDeposit, setEventsDeposit] = useState([]);\r\n    const [familyNamesState, setFamilyNamesState] = useState([]);\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            if (mmConnected) {\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const signer = provider.getSigner();\r\n                const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n                let providerBlock = await provider.getBlockNumber();\r\n\r\n\r\n                let familyDepositsFilter = gangContract.filters.fundsDeposited(null, null, null) // familyindex, sender, amount\r\n                let eventsDeposit = await gangContract.queryFilter(familyDepositsFilter, providerBlock - 70000, providerBlock)\r\n                setEventsDeposit(eventsDeposit.reverse())\r\n\r\n                let FamilyNames = await getFamilyNames();\r\n                setFamilyNamesState(FamilyNames);\r\n            }\r\n        }\r\n        fetchEvents();\r\n    }, [mmConnected]); // trigger on setTriggerEvents if we want to update every 20s\r\n\r\n\r\n\r\n    const customStyles = {\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            borderBottom: '2px dotted blue',\r\n            color: state.isSelected ? 'white' : 'black',\r\n            backgroundColor: state.isSelected ? 'blue' : 'white',\r\n            \"&:hover\": {\r\n                backgroundColor: \"lightgrey\"\r\n            }\r\n        }),\r\n        control: (provided) => ({\r\n            ...provided,\r\n            marginTop: \"\",\r\n        }),\r\n        container: base => ({\r\n            ...base,\r\n            flex: 1\r\n        })\r\n    }\r\n\r\n\r\n    //<Input type=\"submit\" value=\"Submit\" />\r\n    return (\r\n        <PageWrapper>\r\n            <CrimeContainer> <br />\r\n                <Title> Donate to family </Title>\r\n\r\n                <ItemContainer>\r\n                    <NumberFormat placeholder={\"enter amount..\"} onValueChange={({ value }) => { onChangeHandlerDeposit(value) }} value={inputValueDeposit} displayType={\"input\"} thousandSeparator={true} mask=\"Test\" prefix={\"₲ \"} />\r\n                    <SubmitButton onClick={() => { depositFamilyBank(inputValueDeposit) }}> Donate to family!</SubmitButton>\r\n                </ItemContainer>\r\n            </CrimeContainer>\r\n\r\n            <CrimeContainer>\r\n                <Title> Upgrade family items </Title>\r\n                <SubTitle> Note: select manually next upgrade. Contract will revert if not selected next upgrade. UI update will fix this asap.</SubTitle>\r\n                <ItemContainer>\r\n                    <Select defaultValue={optionsAttack[0]} options={optionsAttack} onChange={onChangeHandlerAttack} styles={customStyles} />\r\n                    <SubmitButton onClick={() => { upgradeFamilyItems(1, inputValueAtt) }}> Upgrade attack! </SubmitButton>\r\n                </ItemContainer>\r\n                <br />\r\n                <ItemContainer>\r\n                    <Select defaultValue={optionsDefense[0]} options={optionsDefense} onChange={onChangeHandlerDefense} styles={customStyles} />\r\n                    <SubmitButton onClick={() => { upgradeFamilyItems(2, inputValueDef) }}> Upgrade defense! </SubmitButton>\r\n                </ItemContainer>\r\n\r\n\r\n            </CrimeContainer>\r\n\r\n\r\n            <ColoredLine color=\"red\" />\r\n\r\n            <h1 style={{ color: \"white\" }}> Last deposits: </h1>\r\n            {eventsDeposit.map((option, index) => (\r\n                index > 2 ? null :\r\n                    <h4 style={{ color: \"green\" }}>{familyNamesState[option.args[0].toNumber() - 1] !== undefined ? ethers.utils.parseBytes32String(familyNamesState[option.args[0].toNumber() - 1]) : null} got donated <NumberFormat\r\n                        value={option.args[2].toString()}\r\n                        prefix={\"₲ \"}\r\n                        displayType={\"text\"}\r\n                        decimalSeparator={\".\"}\r\n                        thousandSeparator={true}\r\n                        decimalScale={0} /> by player {option.args[1].toString()}.</h4>\r\n            ))}\r\n        </PageWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Familyshop\r\n","import styled from 'styled-components';\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const CrimeContainer = styled.div`\r\nmax-width: 90%;\r\nmax-height: 100%;\r\npadding: 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: column; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\nexport const ItemContainer = styled.div`\r\nwidth: 70vh;\r\nmax-height: 10vh;\r\npadding: 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const Title = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 160px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\nexport const TitleTwo = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 0px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n\r\nexport const SubTitle = styled.h4`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 20px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\nexport const Img = styled.img`\r\nborder-radius: 10px;\r\nmax-width: 70%;\r\nheight: auto;\r\nmargin-left: 50px;\r\n`","import { CrimeContainer, Title, ItemContainer } from './Attackfamily.elements';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { tokenAddress } from '../../components/EthFunctions';\r\nimport { ethers } from 'ethers';\r\nimport tokenABI from '../../components/EthABI'\r\nimport NumberFormat from \"react-number-format\";\r\nimport { StateContext } from '../../App';\r\nimport { ColoredLine, PageWrapper } from '../../globalStyles'\r\nimport { getFamilyNames, organizedAttack } from '../../components/EthFamilyFunctions';\r\nimport { SubmitButton } from '../../features/shared/ui/buttons/SubmitButton';\r\n\r\nconst Attackfamily = () => {\r\n    const [, , mmConnected, , ,] = React.useContext(StateContext);\r\n\r\n    const [attackEvent, setAttackEvent] = useState([]);\r\n    const [familyNamesState, setFamilyNamesState] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            if (mmConnected) {\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const signer = provider.getSigner();\r\n                const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n                let providerBlock = await provider.getBlockNumber();\r\n\r\n                // attack events\r\n                let familyAttackFilter = gangContract.filters.organizedAttackResult(null, null, null) // familyindex, fam att bonus, fam def bonus\r\n                console.log(familyAttackFilter)\r\n                let event = await gangContract.queryFilter(familyAttackFilter, providerBlock - 70000, providerBlock)\r\n                setAttackEvent(event.reverse())\r\n                let FamilyNames = await getFamilyNames();\r\n                setFamilyNamesState(FamilyNames);\r\n            }\r\n        }\r\n        fetchEvents();\r\n    }, [mmConnected]); // trigger on setTriggerEvents if we want to update every 20s\r\n\r\n\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <CrimeContainer> <br />\r\n                <Title> Attack another random family </Title>\r\n\r\n                <ItemContainer>\r\n                    <SubmitButton onClick={() => { organizedAttack() }}> Attack family!</SubmitButton>\r\n                </ItemContainer>\r\n            </CrimeContainer>\r\n\r\n            <ColoredLine color=\"red\" />\r\n\r\n            <h1 style={{ color: \"white\" }}> Last attacks: </h1>\r\n            {attackEvent.map((option, index) => (\r\n                index > 4 ? null : (option.args[1] === true ?\r\n\r\n                    <h4 style={{ color: \"green\" }}>\r\n                        {familyNamesState[option.args[0].toNumber() - 1] !== undefined ? ethers.utils.parseBytes32String(familyNamesState[option.args[0].toNumber() - 1]) : null} looted  {<NumberFormat\r\n                            value={option.args[2].toString()}\r\n                            prefix={\"₲ \"}\r\n                            displayType={\"text\"}\r\n                            decimalSeparator={\".\"}\r\n                            thousandSeparator={true}\r\n                            decimalScale={0} />}\r\n                    </h4>\r\n\r\n\r\n                    :\r\n                    <h4 style={{ color: \"red\" }}> {familyNamesState[option.args[0].toNumber() - 1] !== undefined ? ethers.utils.parseBytes32String(familyNamesState[option.args[0].toNumber() - 1]) : null} Failed </h4>)\r\n            ))}\r\n        </PageWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Attackfamily\r\n","import styled from 'styled-components';\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const CrimeContainer = styled.div`\r\nmax-width: 90%;\r\nmax-height: 100%;\r\npadding: 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const Title = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 160px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\nexport const TitleTwo = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 0px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n\r\nexport const SubTitle = styled.h4`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 20px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\nexport const Img = styled.img`\r\nborder-radius: 10px;\r\nmax-width: 70%;\r\nheight: auto;\r\nmargin-left: 50px;\r\n`\r\n\r\nexport const LeaveButton = styled.button`\r\nborder-radius: 4px;\r\nbackground: red;\r\nwhite-space: nowrap;\r\npadding: 10px 20px;\r\ncolor: #fff;\r\nfont-size: 16px;\r\noutline: none;\r\nborder: none;\r\ncursor: pointer;\r\n\r\n&:hover {\r\n    transition: all 0.3s ease-out;\r\n    background: #581B1C;\r\n}\r\n\r\n@media screen and (max-width: 960px) {\r\n    width: 200px;\r\n}\r\n`\r\n\r\nexport const JoinButton = styled.button`\r\nborder-radius: 4px;\r\nbackground: #2A422E;\r\nwhite-space: nowrap;\r\npadding: 10px 20px;\r\ncolor: white;\r\nfont-size: 16px;\r\noutline: none;\r\nborder: none;\r\ncursor: pointer;\r\n\r\n&:hover {\r\n    transition: all 0.3s ease-out;\r\n    background: #0A1C0D;\r\n}\r\n\r\n@media screen and (max-width: 960px) {\r\n    width: 200px;\r\n}\r\n`","import {CrimeContainer, Title, SubTitle, LeaveButton, JoinButton} from './Overview.elements';\r\nimport React, {useEffect}  from 'react';\r\nimport {getMemberFamilyIndex, getFamilyNames, getFamilyOwner, getAllFamilyMembers, getFamilyBank, getFamilyFees, joinOrUprankFamily, leaveFamily} from '../../components/EthFamilyFunctions';\r\n\r\nimport {ethers} from 'ethers';\r\nimport {StateContext} from '../../App';\r\nimport {ColoredLine, PageWrapper} from '../../globalStyles'\r\nimport { useTable, useSortBy  } from \"react-table\";\r\n\r\n\r\n\r\nfunction Table({columns, data}){\r\n\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({ columns, data }, useSortBy);\r\n\r\nreturn (\r\n\r\n\r\n<table {...getTableProps()} style={{ border: 'solid 2px white' }}>\r\n<thead>\r\n{headerGroups.map(headerGroup => (\r\n    <tr {...headerGroup.getHeaderGroupProps()}>\r\n      {headerGroup.headers.map(column => (\r\n          <th\r\n              {...column.getHeaderProps(column.getSortByToggleProps())}\r\n              style={{\r\n                borderBottom: 'solid 2px white',\r\n                color: 'white',\r\n              }}\r\n          >\r\n            {column.render('Header')}\r\n            <span>\r\n              {column.isSorted\r\n                  ? column.isSortedDesc\r\n                      ? '🔽'\r\n                      : '🔼'\r\n                  : '🔽'}\r\n           </span>\r\n          </th>\r\n      ))}\r\n    </tr>\r\n))}\r\n</thead>\r\n<tbody {...getTableBodyProps()}>\r\n{rows.map(row => {\r\n  prepareRow(row)\r\n  return (\r\n      <tr {...row.getRowProps()}>\r\n        {row.cells.map(cell => {\r\n          return (\r\n              <td\r\n                  {...cell.getCellProps()}\r\n                  style={{\r\n                    padding: '10px',\r\n                    border: 'solid 1px gray',\r\n                  }}\r\n              >\r\n                {cell.render('Cell')}\r\n              </td>\r\n          )\r\n        })}\r\n      </tr>\r\n  )\r\n})}\r\n</tbody>\r\n</table>\r\n\r\n)}\r\n\r\n\r\n\r\nconst Overview = () => {\r\n    const [, , mmConnected, , , ] = React.useContext(StateContext);\r\n    const [amountMembers, setAmountMembers] = React.useState([])\r\n    const [familyNamesString, setFamilyNamesString] = React.useState([])\r\n    //const [finishedFlag, setFinishedFlag] = React.useState(0);\r\n    const [datatest, setDatatest] = React.useState([]);\r\n    const [myFamilyName, setMyFamilyName] = React.useState(\"\");\r\n    const [amountFamilies, setAmountFamilies] = React.useState();\r\n\r\n    const [familyOwner, setFamilyOwner] = React.useState();\r\n\r\n    const [familyBank, setFamilyBank] = React.useState([]);\r\n    const [familyEntreeFee, setFamilyEntreeFee] = React.useState([]);\r\n    const [familyMissionFee, setFamilyMissionFee] = React.useState([]);\r\n\r\n    const columns = React.useMemo(\r\n      () => [\r\n        {\r\n          Header: 'Family',\r\n          accessor: 'col1', // accessor is the \"key\" in the data\r\n        },\r\n        {\r\n          Header: 'Amount of members',\r\n          accessor: 'col3', // accessor is the \"key\" in the data\r\n        },\r\n        {\r\n          Header: 'Entree Fee',\r\n          accessor: 'col4', // accessor is the \"key\" in the data\r\n        },\r\n        {\r\n          Header: 'Mission Fee',\r\n          accessor: 'col5', // accessor is the \"key\" in the data\r\n        },\r\n        {\r\n          Header: 'Family bank',\r\n          accessor: 'col6', // accessor is the \"key\" in the data\r\n        },\r\n        {\r\n          Header: 'Family index',\r\n          accessor: 'col7', // accessor is the \"key\" in the data\r\n        },   \r\n        {     \r\n          Header: \"Join family\",\r\n          Cell: ({ cell }) => (\r\n            <JoinButton onClick={() => { joinOrUprankFamily(cell.row.values.col7)}}> Join {cell.row.values.col7}\r\n            </JoinButton>\r\n          )\r\n        }\r\n      ],\r\n      []\r\n    )\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    useEffect(() => {  \r\n      setDatatest([]);\r\n      if (amountMembers.length !== 0) {\r\n\r\n      amountMembers.forEach((row, index) => {\r\n\r\n        setDatatest(datatest => [...datatest, {col1: familyNamesString[index],\r\n          col3: amountMembers[index],\r\n          col4: familyEntreeFee[index],\r\n          col5: familyMissionFee[index],\r\n          col6: familyBank[index],   \r\n          col7: index +1}])\r\n      });\r\n    }\r\n  }, [familyNamesString, amountMembers, familyEntreeFee, familyMissionFee, familyBank ]);\r\n\r\n\r\n\r\n    useEffect(() => { \r\n      const fetchEvents = async() => {\r\n        if (mmConnected) {    \r\n          let familyId = await getMemberFamilyIndex();\r\n          let familyIdNumber = familyId.toNumber();\r\n  \r\n          let familyOwner = await getFamilyOwner(familyIdNumber); \r\n          setFamilyOwner(familyOwner)\r\n          let FamilyNames = await getFamilyNames(); \r\n          if (familyIdNumber !== 0) {\r\n            let myFamilyName = ethers.utils.parseBytes32String(FamilyNames[familyId - 1]);\r\n            setMyFamilyName(myFamilyName)\r\n          }\r\n\r\n\r\n  \r\n          setAmountFamilies(FamilyNames.length)\r\n          for (let i = 0; i < FamilyNames.length; i++) {\r\n            let allMembers = await getAllFamilyMembers(i+1);\r\n            let familyFees = await getFamilyFees(i+1);\r\n            let entreeFee = familyFees[0].toNumber();\r\n            let missionFee = familyFees[1].toNumber();\r\n            setFamilyEntreeFee(familyEntreeFee => [...familyEntreeFee, entreeFee]);\r\n            setFamilyMissionFee(familyMissionFee => [...familyMissionFee, missionFee]);\r\n            \r\n            let bankEntree = await getFamilyBank(i+1);\r\n            setFamilyBank(familyBank => [...familyBank, bankEntree.toNumber()]);\r\n\r\n            setFamilyNamesString(familyNamesString => [...familyNamesString, ethers.utils.parseBytes32String(FamilyNames[i])]);\r\n            setAmountMembers(amountMembers => [...amountMembers, allMembers.length]);\r\n          }\r\n          //setFinishedFlag(1);\r\n        }\r\n      }\r\n      fetchEvents();\r\n\r\n    }, [mmConnected]); // trigger on setTriggerEvents if we want to update every 20s\r\n\r\n    return (\r\n        <PageWrapper>\r\n          <Title> Family ranking </Title><br />\r\n          <SubTitle> Current Family: {familyOwner === \"0x0000000000000000000000000000000000000000\" ? \"Not in a family\" : <> {myFamilyName} <LeaveButton onClick={() => { leaveFamily()}}> Leave family </LeaveButton></>}</SubTitle>\r\n          <SubTitle> Amount of families: {amountFamilies}</SubTitle>\r\n\r\n          <ColoredLine color=\"red\" />\r\n\r\n      <CrimeContainer>\r\n        <Table \r\n          columns={columns} \r\n          data = {datatest}\r\n        />\r\n      </CrimeContainer>\r\n        </PageWrapper> \r\n    )\r\n}\r\n\r\nexport default Overview\r\n","import styled from 'styled-components';\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const CrimeContainer = styled.div`\r\nmax-width: 90%;\r\nmax-height: 100%;\r\npadding: 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const Title = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 160px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\nexport const TitleTwo = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 0px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n\r\nexport const SubTitle = styled.h4`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 20px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\nexport const Img = styled.img`\r\nborder-radius: 10px;\r\nmax-width: 70%;\r\nheight: auto;\r\nmargin-left: 50px;\r\n`","import {CrimeContainer, Title} from './Highestlevels.elements';\r\nimport React, {useEffect }  from 'react';\r\nimport {getAttackXP, getDefenseXP, getActiveList} from '../../components/EthFunctions';\r\n\r\nimport {StateContext} from '../../App';\r\nimport { useTable, useSortBy  } from \"react-table\";\r\nimport {PageWrapper} from '../../globalStyles'\r\n\r\n\r\n\r\nfunction Table({columns, data}){\r\n\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({ columns, data }, useSortBy);\r\n\r\nreturn (\r\n\r\n\r\n<table {...getTableProps()} style={{ border: 'solid 2px white' }}>\r\n<thead>\r\n{headerGroups.map(headerGroup => (\r\n    <tr {...headerGroup.getHeaderGroupProps()}>\r\n      {headerGroup.headers.map(column => (\r\n          <th\r\n              {...column.getHeaderProps(column.getSortByToggleProps())}\r\n              style={{\r\n                borderBottom: 'solid 2px white',\r\n                color: 'white',\r\n              }}\r\n          >\r\n            {column.render('Header')}\r\n            <span>\r\n              {column.isSorted\r\n                  ? column.isSortedDesc\r\n                      ? '🔽'\r\n                      : '🔼'\r\n                  : '🔽'}\r\n           </span>\r\n          </th>\r\n      ))}\r\n    </tr>\r\n))}\r\n</thead>\r\n<tbody {...getTableBodyProps()}>\r\n{rows.map(row => {\r\n  prepareRow(row)\r\n  return (\r\n      <tr {...row.getRowProps()}>\r\n        {row.cells.map(cell => {\r\n          return (\r\n              <td\r\n                  {...cell.getCellProps()}\r\n                  style={{\r\n                    padding: '10px',\r\n                    border: 'solid 1px gray',\r\n                  }}\r\n              >\r\n                {cell.render('Cell')}\r\n              </td>\r\n          )\r\n        })}\r\n      </tr>\r\n  )\r\n})}\r\n</tbody>\r\n</table>\r\n\r\n)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet playerList = []; // take out of const to be visible in effect\r\nlet attackXPList = []; // take out of const to be visible in effect\r\nlet defenseXPList = [];\r\n\r\n\r\nconst Highestlevels = () => {\r\n    const [, , mmConnected, , , ] = React.useContext(StateContext);\r\n\r\n    const [finishedFlag, setFinishedFlag] = React.useState(0);\r\n\r\n    const [datatest, setDatatest] = React.useState([]);\r\n\r\n\r\n    const columns = React.useMemo(\r\n      () => [\r\n        {\r\n          Header: 'Address',\r\n          accessor: 'col1', // accessor is the \"key\" in the data\r\n        },\r\n        {\r\n          Header: 'Attack XP',\r\n          accessor: 'col2',\r\n        },\r\n        {\r\n          Header: 'Defense XP',\r\n          accessor: 'col3', // accessor is the \"key\" in the data\r\n        },\r\n      ],\r\n      []\r\n    )\r\n\r\n\r\n\r\n    useEffect(() => {  \r\n      setDatatest([]);\r\n\r\n      if (playerList.length !== 0) {\r\n        playerList.forEach((row, index) => {\r\n          setDatatest(datatest => [...datatest, {col1: playerList[index],\r\n            col2: attackXPList[index],\r\n            col3: defenseXPList[index]}])    \r\n        });\r\n      }\r\n  }, [finishedFlag]);\r\n\r\n\r\n\r\n    useEffect(() => { \r\n      \r\n      const fetchEvents = async() => {\r\n        if (mmConnected) {\r\n          playerList = await getActiveList();\r\n  \r\n          // get list of ingamefunds per player\r\n          for (let i = 0; i < playerList.length; i++) {\r\n            let stringAddress = playerList[i].toString();\r\n            let attackItem = await getAttackXP(stringAddress);\r\n            attackXPList.push(attackItem.toNumber());\r\n          }\r\n          for (let i = 0; i < playerList.length; i++) {\r\n            let stringAddress = playerList[i].toString();\r\n            let defenseItem = await getDefenseXP(stringAddress);\r\n            defenseXPList.push(defenseItem.toNumber());\r\n          }\r\n          setFinishedFlag(1);\r\n        }\r\n      }\r\n        fetchEvents();\r\n    }, [mmConnected]); // trigger on setTriggerEvents if we want to update every 20s\r\n\r\n    // function getFamilyNames() external view returns (bytes32 [] memory) {\r\n    //    function getFamilyOwner(uint indexInput) external view returns (address) {\r\n    //     function getFamilyRank(address _user) internal view returns (uint) { // to check family bonuses (internal)\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//<Input type=\"submit\" value=\"Submit\" />\r\n    return (\r\n        <PageWrapper>\r\n          <Title> Highest levels </Title><br />\r\n\r\n            <CrimeContainer>\r\n            <Table \r\n        columns={columns} \r\n        data = {datatest}\r\n      />\r\n\r\n            </CrimeContainer>\r\n           \r\n\r\n        </PageWrapper>\r\n        \r\n    )\r\n}\r\n\r\nexport default Highestlevels\r\n","import styled from 'styled-components';\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const CrimeContainer = styled.div`\r\nmax-width: 90%;\r\nmax-height: 100%;\r\npadding: 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const Title = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 160px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\nexport const TitleTwo = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 0px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n\r\nexport const SubTitle = styled.h4`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 20px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\nexport const Img = styled.img`\r\nborder-radius: 10px;\r\nmax-width: 70%;\r\nheight: auto;\r\nmargin-left: 50px;\r\n`","import {CrimeContainer, Title} from './Richestplayers.elements';\r\nimport React, {useEffect }  from 'react';\r\nimport {getActiveList, getingameFunds} from '../../components/EthFunctions';\r\nimport {PageWrapper} from '../../globalStyles'\r\nimport {StateContext} from '../../App';\r\nimport { useTable, useSortBy  } from \"react-table\";\r\n\r\nfunction Table({columns, data}){\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({ columns, data }, useSortBy);\r\n\r\nreturn (\r\n\r\n\r\n<table {...getTableProps()} style={{ border: 'solid 2px white' }}>\r\n<thead>\r\n{headerGroups.map(headerGroup => (\r\n    <tr {...headerGroup.getHeaderGroupProps()}>\r\n      {headerGroup.headers.map(column => (\r\n          <th\r\n              {...column.getHeaderProps(column.getSortByToggleProps())}\r\n              style={{\r\n                borderBottom: 'solid 2px white',\r\n                color: 'white',\r\n              }}\r\n          >\r\n            {column.render('Header')}\r\n            <span>\r\n              {column.isSorted\r\n                  ? column.isSortedDesc\r\n                      ? '🔽'\r\n                      : '🔼'\r\n                  : '🔽'}\r\n           </span>\r\n          </th>\r\n      ))}\r\n    </tr>\r\n))}\r\n</thead>\r\n<tbody {...getTableBodyProps()}>\r\n{rows.map(row => {\r\n  prepareRow(row)\r\n  return (\r\n      <tr {...row.getRowProps()}>\r\n        {row.cells.map(cell => {\r\n          return (\r\n              <td\r\n                  {...cell.getCellProps()}\r\n                  style={{\r\n                    padding: '10px',\r\n                    border: 'solid 1px gray',\r\n                  }}\r\n              >\r\n                {cell.render('Cell')}\r\n              </td>\r\n          )\r\n        })}\r\n      </tr>\r\n  )\r\n})}\r\n</tbody>\r\n</table>\r\n\r\n)}\r\n\r\nlet playerList = []; // take out of const to be visible in effect\r\nlet ingameFundList = []; // take out of const to be visible in effect\r\n\r\nconst Richestplayers = () => {\r\n    const [, , mmConnected, , , ] = React.useContext(StateContext);\r\n\r\n    const [finishedFlag, setFinishedFlag] = React.useState(0);\r\n    const [, ] = React.useState(0);\r\n\r\n    const [datatest, setDatatest] = React.useState([]);\r\n\r\n    const columns = React.useMemo(\r\n      () => [\r\n        {\r\n          Header: 'Address',\r\n          accessor: 'col1', // accessor is the \"key\" in the data\r\n        },\r\n        {\r\n          Header: 'Ingame Funds',\r\n          accessor: 'col3', // accessor is the \"key\" in the data\r\n        },\r\n      ],\r\n      []\r\n    )\r\n\r\n    useEffect(() => {  \r\n      setDatatest([]);\r\n      if (playerList.length !== 0) { \r\n        console.log(\"Player list is: \", playerList)\r\n        playerList.forEach((row, index) => {\r\n          setDatatest(datatest => [...datatest, {col1: playerList[index],\r\n            col3: ingameFundList[index]}])    \r\n        });\r\n      }\r\n  }, [finishedFlag]);\r\n\r\n    useEffect(() => {  \r\n      const fetchEvents = async() => {\r\n        if (mmConnected) {\r\n          playerList = await getActiveList();\r\n          for (let i = 0; i < playerList.length; i++) {\r\n            let stringAddress = playerList[i].toString();\r\n            let fundItem = await getingameFunds(stringAddress);\r\n            ingameFundList.push(fundItem.toNumber());\r\n          }\r\n          setFinishedFlag(1);\r\n\r\n        }\r\n      }\r\n      fetchEvents();\r\n    }, [mmConnected]); // trigger on setTriggerEvents if we want to update every 20s\r\n\r\n    return (\r\n        <PageWrapper>\r\n          <Title> Richest players </Title><br />\r\n\r\n            <CrimeContainer>\r\n            <Table \r\n        columns={columns} \r\n        data = {datatest}\r\n      />\r\n            </CrimeContainer>\r\n        </PageWrapper>\r\n        \r\n    )\r\n}\r\n\r\nexport default Richestplayers\r\n","import styled from 'styled-components';\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const CrimeContainer = styled.div`\r\nmax-width: 90%;\r\nmax-height: 100%;\r\npadding: 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: column; // this is standard, fit from left to right\r\ndisplay: flex;\r\ncolor: white;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n//TokenomicsContainer is around whole page, sets background etc.\r\nexport const Title = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 160px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\nexport const TitleTwo = styled.h1`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 0px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\n\r\n\r\nexport const SubTitle = styled.h4`\r\nmax-width: 100%;\r\nmax-height: 10%;\r\n\r\npadding: 20px 40px 0px 40px;\r\njustify-content: space-around;\r\nflex-direction: row; // this is standard, fit from left to right\r\ndisplay: relative;\r\ncolor: white;\r\nvertical-align: text-top;\r\n\r\n@media screen and (max-width: 768px) {\r\n    padding-bottom: 65px;\r\n};\r\n`\r\nexport const Img = styled.img`\r\nborder-radius: 10px;\r\nmax-width: 70%;\r\nheight: auto;\r\nmargin-left: 50px;\r\n`","import { CrimeContainer, Title, SubTitle } from './Statistics.elements';\r\nimport React, { useEffect } from 'react';\r\nimport { getAttackXP, getDefenseXP, getActiveList, getingameFunds } from '../../components/EthFunctions';\r\nimport { getFamilyNames } from '../../components/EthFamilyFunctions';\r\nimport { PageWrapper } from '../../globalStyles'\r\nimport NumberFormat from \"react-number-format\";\r\nimport { StateContext } from '../../App';\r\n\r\nconst Statistics = () => {\r\n  const [, , mmConnected, , ,] = React.useContext(StateContext);\r\n\r\n  const [totalAmountPlayers, setTotalAmountPlayers] = React.useState();\r\n  const [totalIngameFunds, setTotalIngameFunds] = React.useState();\r\n\r\n\r\n  const [totalAmountFamilies, setTotalAmountFamilies] = React.useState();\r\n  const [totalAttackXP, setTotalAttackXP] = React.useState();\r\n  const [totalDefenseXP, setTotalDefenseXP] = React.useState();\r\n\r\n\r\n\r\n  // function getFamilyNames() external view returns (bytes32 [] memory) {\r\n  //    function getFamilyOwner(uint indexInput) external view returns (address) {\r\n  //     function getFamilyRank(address _user) internal view returns (uint) { // to check family bonuses (internal)\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      if (mmConnected) {\r\n        let FamilyNames = await getFamilyNames();\r\n        let playerList = await getActiveList();\r\n        setTotalAmountFamilies(FamilyNames.length)\r\n        let totalAtt = 0;\r\n        let totalDef = 0;\r\n        let totalFunds = 0;\r\n\r\n        // get list of ingamefunds per player\r\n        for (let i = 0; i < playerList.length; i++) {\r\n          let stringAddress = playerList[i].toString();\r\n          let attackItem = await getAttackXP(stringAddress);\r\n          let attackInt = attackItem.toNumber();\r\n          totalAtt = totalAtt + attackInt;\r\n        }\r\n        for (let i = 0; i < playerList.length; i++) {\r\n          let stringAddress = playerList[i].toString();\r\n          let defenseItem = await getDefenseXP(stringAddress);\r\n          totalDef = totalDef + defenseItem.toNumber();\r\n        }\r\n\r\n        for (let i = 0; i < playerList.length; i++) {\r\n          let stringAddress = playerList[i].toString();\r\n          let fundsItem = await getingameFunds(stringAddress);\r\n          totalFunds = totalFunds + fundsItem.toNumber();\r\n        }\r\n\r\n        setTotalAmountPlayers(playerList.length);\r\n        setTotalAttackXP(totalAtt);\r\n        setTotalDefenseXP(totalDef);\r\n        setTotalIngameFunds(totalFunds);\r\n      }\r\n    }\r\n    fetchEvents();\r\n  }, [mmConnected]); // trigger on setTriggerEvents if we want to update every 20s\r\n\r\n\r\n\r\n  //<Input type=\"submit\" value=\"Submit\" />\r\n  return (\r\n    <PageWrapper>\r\n      <Title> Statistics </Title><br />\r\n\r\n      <CrimeContainer>\r\n        {totalAmountPlayers !== 0 ? <SubTitle> Total amount of players: <NumberFormat value={totalAmountPlayers} displayType={\"text\"} thousandSeparator={true} /> </SubTitle> : \"null\"}\r\n        {totalAmountPlayers !== 0 ? <SubTitle> Total ingame funds: <NumberFormat value={totalIngameFunds} displayType={\"text\"} thousandSeparator={true} prefix={\"₲\"} /> </SubTitle> : \"null\"}\r\n        {totalAmountPlayers !== 0 ? <SubTitle> Total amount of families: <NumberFormat value={totalAmountFamilies} displayType={\"text\"} thousandSeparator={true} /> </SubTitle> : \"null\"}\r\n        {totalAmountPlayers !== 0 ? <SubTitle> Total Attack XP obtained: <NumberFormat value={totalAttackXP} displayType={\"text\"} thousandSeparator={true} /> </SubTitle> : \"null\"}\r\n        {totalAmountPlayers !== 0 ? <SubTitle> Total Defense XP obtained: <NumberFormat value={totalDefenseXP} displayType={\"text\"} thousandSeparator={true} /> </SubTitle> : \"null\"}\r\n\r\n\r\n\r\n\r\n      </CrimeContainer>\r\n\r\n\r\n    </PageWrapper>\r\n\r\n  )\r\n}\r\n\r\nexport default Statistics\r\n","import React, { FC } from 'react';\r\n\r\nimport styled from '@emotion/styled/macro'\r\nimport { ZIndex } from '../../../../styles/globals/ZIndex';\r\nimport { breakpoint } from '../../../../styles/theme/responsive/breakpoint';\r\nimport { Colors } from '../../../../styles/theme/colors/Colors';\r\n\r\nexport const Sidebar: FC = ({ children }) => {\r\n\treturn (\r\n\t\t<StyledSidebar>\r\n\t\t\t<StyledSidebarMenu>\r\n\t\t\t\t{children}\r\n\t\t\t</StyledSidebarMenu>\r\n\t\t</StyledSidebar>\r\n\t);\r\n};\r\n\r\n\r\nconst StyledSidebar = styled.div`\r\n\tposition: absolute;\r\n\tbox-sizing: border-box;\r\n\t\r\n`;\r\n\r\nconst StyledSidebarMenu = styled.div`\r\n\theight: 100%;\r\n\tposition: fixed;\r\n\tz-index: ${ZIndex.Sidebar};\r\n    width: 20%;\r\n\ttop: 0;\r\n\toverflow-y: auto;\r\n\topacity: 0;\r\n\ttransform: translateX(25%);\r\n\tpointer-events: none;\r\n    margin-top: 80px;\r\n\r\n\tbackground-color: ${Colors.DarkTransparant};\r\n\r\n\t${breakpoint.m} {\r\n\t\ttransform: translateX(0);\r\n\t\topacity: 1;\r\n\t\tpointer-events: initial;\r\n\t}\r\n\r\n\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Footer from './components/Footer/Footer'\r\nimport Gamebar from './components/Gamebar/Gamebar'\r\nimport Home from './pages/HomePage/Home';\r\nimport Helppage from './pages/Helppage/Helppage';\r\nimport Whitepaper from './pages/Whitepaper/Whitepaper';\r\nimport Contract from './pages/Contract/Contract';\r\nimport Roadmap from './pages/Roadmap/Roadmap';\r\nimport Tokenomics from './pages/Tokenomics/Tokenomics'\r\nimport Admin from './pages/Admin/Admin'\r\nimport ScrollToTop from './components/ScrollToTop';\r\nimport Deposit from './pages/Deposit/Deposit';\r\nimport IndProtection from './pages/IndProtection/IndProtection';\r\nimport Attackplayer from './pages/Attackplayer/Attackplayer';\r\nimport Crime from './pages/Crime/Crime';\r\nimport Crowdfunding from './pages/Crowdfunding/Crowdfunding';\r\nimport Trainstats from './pages/Trainstats/Trainstats';\r\nimport Familycontrol from './pages/Familycontrol/Familycontrol';\r\nimport Familyshop from './pages/Familyshop/Familyshop';\r\nimport Attackfamily from './pages/Attackfamily/Attackfamily';\r\nimport Overview from './pages/Overview/Overview';\r\nimport Highestlevels from './pages/Highestlevels/Highestlevels';\r\nimport Richestplayers from './pages/Richestplayers/Richestplayers';\r\nimport Statistics from './pages/Statistics/Statistics';\r\nimport { getCrimeStatus, getAttackStatus, tokenAddress, getERCBalance, EthBalance, getingameFunds, getJailStatus, getAttackXP, getDefenseXP, getCrowdfundStatus } from './components/EthFunctions';\r\nimport tokenABI from './components/EthABI'\r\nimport { ethers } from 'ethers'\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\nimport styled from '@emotion/styled/macro';\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport { Sidebar } from './features/app-container/ui/sidebar/Sidebar';\r\nimport \"./styles/globals/globals.css\"\r\nimport { Button } from './features/shared/ui/buttons/Button';\r\n\r\nexport const StateContext = React.createContext();\r\nexport const EthContext = React.createContext();\r\n\r\nconst StyledPopup = styled(Popup)`\r\n\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tdisplay: flex;\r\n\r\n\t&-overlay {\r\n\t\topacity: 1;\r\n\t}\r\n\t// use your custom style for \".popup-content\"\r\n\t&-content {\r\n\t\tbackground: #808097;\r\n\t\twidth: 200px;\r\n\t\tborder: #505064;\r\n\t\tborder-radius: 15px;\r\n\t\tborder-width: 5px;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tdisplay: flex;\r\n\t}\r\n`\r\n\r\n\r\nfunction App() {\r\n    const [mmConnected, setmmConnected] = useState(false);\r\n    const [mainConnected, setmainConnected] = useState(false);\r\n    const [testConnected, settestConnected] = useState(false)\r\n    const [chainConnected, setchainConnected] = useState(0);\r\n    const [adminConnected, setadminConnected] = useState(false);\r\n    const [finishedFlag, setFinishedFlag] = useState(0);\r\n    const [balance, setBalance] = useState(0);\r\n    const [gangbalance, setgangBalance] = useState(0);\r\n    const [bootstrapUsed, setBootstrapUsed] = useState(0);\r\n    const [protectionHours, setProtectionHours] = useState(0);\r\n\r\n    const fetchBalance = async (address) => {\r\n        const newETHBalance = await EthBalance(address)\r\n        const newBalanceWei = ethers.utils.formatEther(newETHBalance)\r\n        if (window.ethereum.chainId === \"0x89\") {\r\n            const newGANGBalance = await getERCBalance(address);\r\n            setgangBalance(newGANGBalance);\r\n        } else {\r\n            setgangBalance(0);\r\n        }\r\n        setBalance(newBalanceWei);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (window.ethereum) {\r\n\r\n            window.ethereum.on('chainChanged', (chainId) => {\r\n                setchainConnected(chainId);\r\n                window.location.reload();\r\n            });\r\n        }\r\n    }, [chainConnected]);\r\n\r\n    useEffect(() => {\r\n        const fetchBootstrap = async () => {\r\n            if (mmConnected) {\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const signer = provider.getSigner();\r\n                const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n                let providerBlock = await provider.getBlockNumber();\r\n\r\n                let bootstrapFilter = gangContract.filters.bootstrapBought(null, null, null)\r\n                let events = await gangContract.queryFilter(bootstrapFilter, providerBlock - 70000, providerBlock)\r\n                let eventsReversed = events.reverse();\r\n                if (events.length !== 0) {\r\n                    setBootstrapUsed(eventsReversed[0].args[2]);\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchBootstrap();\r\n    }, [mmConnected]); // trigger on setTriggerEvents if we want to update every 20s\r\n\r\n    useEffect(() => {\r\n        const fetchProtection = async () => {\r\n            if (mmConnected) {\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const signer = provider.getSigner();\r\n                const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n                let providerBlock = await provider.getBlockNumber();\r\n\r\n                let protectionFilter = gangContract.filters.boughtProtection(ethers.utils.getAddress(window.ethereum.selectedAddress), null, null)\r\n                let events = await gangContract.queryFilter(protectionFilter, providerBlock - 70000, providerBlock)\r\n                let eventsReversed = events.reverse();\r\n                if (events.length !== 0) {\r\n                    let now = Date.now() / 1000;\r\n                    let delta = eventsReversed[0].args[2].toNumber() + 3600 * 24 * eventsReversed[0].args[1].toNumber() - now;\r\n                    let hoursLeft = Math.floor(delta / 3600);\r\n                    console.log(\"hours left: \", hoursLeft)\r\n                    setProtectionHours(hoursLeft)\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        fetchProtection();\r\n    }, [mmConnected]); // trigger on setTriggerEvents if we want to update every 20s\r\n\r\n    useEffect(() => {\r\n        if (window.ethereum) {\r\n            console.log(\"in this effect now\")\r\n            const fetchConnected = async () => {\r\n                const provider = await detectEthereumProvider();\r\n                const result = await provider.request({ method: \"eth_accounts\", params: [] });\r\n                console.log(\"connected account: \", result[0])\r\n                setchainConnected(window.ethereum.chainId)\r\n\r\n                if (result[0] === \"0x212057855f52669966a472dc48b543deefe32a38\") {\r\n                    setadminConnected(true)\r\n                }\r\n                if (result.length !== 0) {\r\n                    setConnectedAccount(result[0]);\r\n                    console.log(\"Set connected to true\")\r\n                    setmmConnected(true);\r\n                    fetchBalance(result[0]);\r\n                    if (window.ethereum.chainId === \"0x89\") {\r\n                        setmainConnected(true);\r\n                        settestConnected(false);\r\n                    } else if (window.ethereum.chainId === \"0x13881\") {\r\n                        setmainConnected(false);\r\n                        settestConnected(true);\r\n                    } else {\r\n                        setmainConnected(false);\r\n                        settestConnected(false);\r\n                    }\r\n                } else {\r\n                    setmmConnected(false);\r\n                    setBalance(0);\r\n                    setgangBalance(0);\r\n                }\r\n                if (window.ethereum.chainId !== undefined && result.length !== 0) {\r\n                    setFinishedFlag(1);\r\n                }\r\n            }\r\n            fetchConnected(); // run fetchConnected when [] changes (i.e. main/test/chainConnected).\r\n        }\r\n    }, [chainConnected]);\r\n\r\n    useEffect(() => {\r\n        if (window.ethereum) {\r\n            window.ethereum.on('accountsChanged', (accounts) => { // listener will automatically pick up changes to accounts. We can set all switches here.\r\n                console.log(\"Accounts changed triggered, new acc: \", accounts[0])\r\n                if (accounts[0] === \"0xa338c42cd68dd24931f270836cdbddcea4132770\") {\r\n                    setadminConnected(true)\r\n                } else if (accounts[0] !== undefined) {\r\n                    setadminConnected(false)\r\n                    setmmConnected(true)\r\n                } else {\r\n                    setmmConnected(false)\r\n                }\r\n                window.location.reload();\r\n\r\n                // check if admin acc, otherwise remove this hook\r\n            });\r\n        }\r\n    }, [chainConnected]);\r\n\r\n    // ------------------ ethcontext ---------------------\r\n    const [attorneyState, setAttorneyState] = useState(false);\r\n    const [jailState, setJailState] = useState(0);\r\n    const [defenseState, setDefenseState] = useState(0);\r\n    const [attackState, setAttackState] = useState(0);\r\n    const [inGameFunds, setInGameFunds] = useState(0);\r\n    const [jailSeconds, setJailSeconds] = useState(0);\r\n    const [attorneySeconds, setAttorneySeconds] = useState(0);\r\n    const [attackSeconds, setAttackSeconds] = useState(0);\r\n    const [crimeSeconds, setCrimeSeconds] = useState(0);\r\n    const [trainSeconds, setTrainSeconds] = useState(0);\r\n    const [crowdfundSeconds, setCrowdfundSeconds] = useState(0);\r\n    const [crowdfundClaimable, setCrowdfundClaimable] = useState(0);\r\n    // to manage pop ups!\r\n    const [crimePopup, setCrimePopup] = useState(0);\r\n    const [attackPopup, setAttackPopup] = useState(0);\r\n    const [attorneyPopup, setAttorneyPopup] = useState(0);\r\n    const [crowdfundPopup, setCrowdfundPopup] = useState(0);\r\n    const [lastCrowdfundLoot, setLastCrowdfundLoot] = useState(0);\r\n\r\n    const [lastCrimeLoot, setLastCrimeLoot] = useState(0);\r\n    const [lastAttackLoot, setLastAttackLoot] = useState(0);\r\n    const [lastAttackResult, setLastAttackResult] = useState(0);\r\n    const [lastAttorneyResult, setLastAttorneyResult] = useState(0);\r\n    const [lastAttorneyFee, setLastAttorneyFee] = useState(0);\r\n    const [connectedAccount, setConnectedAccount] = useState();\r\n    // --------------------- get all values initially ------------\r\n    useEffect(() => {\r\n        if (chainConnected === \"0x89\" && mmConnected) {\r\n            getingameFunds(connectedAccount).then((data) => {\r\n                setInGameFunds(data.toNumber());\r\n            });\r\n\r\n            getJailStatus().then((data) => {\r\n                setJailState(data[0].toNumber())\r\n                setAttorneyState(data[1].toNumber())\r\n                setJailSeconds(data[2].toNumber())\r\n                setAttorneySeconds(data[3].toNumber())\r\n            });\r\n\r\n            getAttackStatus().then((data, reject) => {\r\n                if (data.toNumber() !== undefined) {\r\n                    setAttackSeconds(Math.max(100 + data.toNumber() - Math.floor(+new Date().getTime() / 1000), 0));\r\n                } else {\r\n                    setAttackSeconds(0); // first time using attack\r\n                }\r\n                if (reject != null) {\r\n                    console.log(reject)\r\n                }\r\n            });\r\n\r\n            getCrimeStatus().then((data, reject) => {\r\n                if (data.toNumber() !== undefined) {\r\n                    setCrimeSeconds(Math.max(300 + data.toNumber() - Math.floor(+new Date().getTime() / 1000), 0));\r\n                } else {\r\n                    setCrimeSeconds(0); // first time using attack\r\n                }\r\n                if (reject != null) {\r\n                    console.log(reject)\r\n                }\r\n            });\r\n\r\n            getCrowdfundStatus().then((data, reject) => {\r\n                if (data[1].toNumber() !== 0) {\r\n                    setCrowdfundSeconds(Math.max(600 + data[1].toNumber() - Math.floor(+new Date().getTime() / 1000), 0));\r\n                } else if (data[0].toNumber() === 1 && data[1].toNumber() === 0) {\r\n                    setCrowdfundSeconds(0); // finished & unclaimed\r\n                    setCrowdfundClaimable(1);\r\n                }\r\n                if (reject != null) {\r\n                    console.log(reject)\r\n                }\r\n            });\r\n\r\n            getDefenseXP().then((data) => {\r\n                setDefenseState(data.toNumber());\r\n            });\r\n\r\n            getAttackXP().then((data) => {\r\n                setAttackState(data.toNumber());\r\n            });\r\n        }\r\n    }, [finishedFlag, chainConnected, mmConnected, connectedAccount]); // load these stats once on page load. Hereafter listen to events. \r\n\r\n\r\n\r\n    // ------------------ ethcontext ---------------------\r\n\r\n\r\n    useEffect(() => {\r\n        if (window.ethereum) {\r\n\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner();\r\n            const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n            gangContract.on(\"trainedStats\", (choice, address, newXP) => {\r\n                console.log(\"trainedstats, address: \", address)\r\n                console.log(\"compared to: \", ethers.utils.getAddress(window.ethereum.selectedAddress))\r\n                if (address === ethers.utils.getAddress(window.ethereum.selectedAddress)) {\r\n                    console.log(\"Got the event\");\r\n                    if (choice.toNumber() === 1) {\r\n                        console.log(\"Trained attack\")\r\n                        handleAttackXP(newXP)\r\n                    } else if (choice.toNumber() === 2) {\r\n                        console.log(\"Trained defense\")\r\n                        handleDefenseXP(newXP)\r\n                    } else {\r\n                        console.log(\"Invalid choice\")\r\n                    }\r\n                    handleTrained(choice, address, newXP);\r\n                }\r\n            })\r\n        }\r\n    }, [chainConnected]); // inside useEffect to apply listener only once. Test if this works.\r\n\r\n    useEffect(() => {\r\n        if (window.ethereum) {\r\n\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner();\r\n            const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n            gangContract.on(\"attorneyHired\", (success, player, amount) => {\r\n                if (player === ethers.utils.getAddress(window.ethereum.selectedAddress)) {\r\n                    handleAttorneyHired(success.toString(), player, amount);\r\n                }\r\n                // if success 1 --> second index is payment. if success 2 --> second index is bonus fee\r\n            })\r\n        }\r\n    }, [chainConnected]);\r\n\r\n    useEffect(() => {\r\n        if (window.ethereum) {\r\n\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner();\r\n            const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n            gangContract.on(\"Transfer\", (from, to, amount) => {\r\n                console.log(\"Got the event\");\r\n                console.log(from);\r\n                console.log(to);\r\n                console.log(amount.toString());\r\n            })\r\n        }\r\n    }, [chainConnected]);\r\n\r\n    useEffect(() => {\r\n        if (window.ethereum) {\r\n\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner();\r\n            const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n            gangContract.on(\"playerJailed\", (address, jailStamp) => {\r\n                if (address === ethers.utils.getAddress(window.ethereum.selectedAddress)) {\r\n                    console.log(\"Got the jailed event\");\r\n                    console.log(address);\r\n                    getJailStatus().then((data) => {\r\n                        console.log(\"JailStatus is: \", data[0].toNumber());\r\n                        console.log(\"AttorneyStatus is: \", data[1].toNumber());\r\n                        setJailState(data[0].toNumber())\r\n                        setAttorneyState(data[1].toNumber())\r\n                        setJailSeconds(data[2].toNumber())\r\n                        setAttorneySeconds(data[3].toNumber())\r\n                    });\r\n                }\r\n            })\r\n        }\r\n    }, [chainConnected]);\r\n\r\n    useEffect(() => {\r\n        if (window.ethereum) {\r\n\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner();\r\n            const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n            gangContract.on(\"playerAttacked\", (successAttack, attacker, defender, loot, attackStamp) => {\r\n                if (attacker === ethers.utils.getAddress(window.ethereum.selectedAddress)) {\r\n                    handlePlayerAttacked(successAttack, loot, attackStamp);\r\n                }\r\n            })\r\n        }\r\n    }, [chainConnected]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (window.ethereum) {\r\n\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner();\r\n            const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n            gangContract.on(\"crimeResult\", (initiator, succesfulCrime, totalLootCrime, crimeStamp) => {\r\n                console.log(\"Crime Initiator is: \", initiator)\r\n                console.log(typeof initiator)\r\n                console.log(typeof window.ethereum.selectedAddress)\r\n                if (initiator === ethers.utils.getAddress(window.ethereum.selectedAddress)) {\r\n                    console.log(\"Succesfully handled\")\r\n                    handleCrime(succesfulCrime, totalLootCrime.toNumber(), crimeStamp);\r\n                }\r\n            }) //first index 0 = success, first index 1 = success, second index = loot\r\n        }\r\n    }, [chainConnected]);\r\n\r\n    useEffect(() => {\r\n        if (window.ethereum) {\r\n\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner();\r\n            const gangContract = new ethers.Contract(tokenAddress, tokenABI, signer);\r\n            gangContract.on(\"crowdFundGains\", (initiator, reward) => {\r\n                console.log(\"Crowdfundgains initiator: \", initiator)\r\n                console.log(typeof initiator)\r\n                if (initiator === ethers.utils.getAddress(window.ethereum.selectedAddress)) {\r\n                    console.log(\"Crowdfund is nicely detected\")\r\n                    handleCrowdfund(initiator, reward.toNumber());\r\n                }\r\n            }) //first index 0 = success, first index 1 = success, second index = loot\r\n        }\r\n    }, [chainConnected]);\r\n\r\n\r\n\r\n    const handleAttackXP = (newXP) => {\r\n        if (newXP > 100000000) {\r\n            setAttackState(100000000);\r\n        } else {\r\n            setAttackState(newXP.toString())\r\n        }\r\n    }\r\n    const handleDefenseXP = (newXP) => {\r\n        if (newXP > 100000000) {\r\n            setDefenseState(100000000);\r\n        } else {\r\n            setDefenseState(newXP.toString())\r\n        }\r\n    }\r\n\r\n    const handleAttorneyHired = (success, player, fee) => {\r\n        setAttorneyState(0)\r\n        setLastAttorneyResult(success); // to help popup\r\n        setLastAttorneyFee(fee.toNumber());\r\n        console.log(\"Got attorney event\");\r\n        console.log(\"success: \", success);\r\n        // if success 1 --> second index is payment. if success 2 --> second index is bonus fee\r\n        if (success === \"1\") {\r\n            console.log(\"Attorney succesful but need to pay: \", fee);\r\n        } else if (success === \"2\") {\r\n            console.log(\"Succesful and get compensation: \", fee);\r\n        } else if (success === \"0\") {\r\n            console.log(\"Attorney unsuccesful, you stay in jail\");\r\n        }\r\n        getingameFunds().then((data) => {\r\n            console.log(\"result is: \", data.toNumber());\r\n            setInGameFunds(data.toNumber());\r\n        });\r\n\r\n        getJailStatus().then((data) => {\r\n            console.log(\"JailStatus is: \", data[0].toNumber());\r\n            console.log(\"AttorneyStatus is: \", data[1].toNumber());\r\n            setJailState(data[0].toNumber())\r\n            setAttorneyState(data[1].toNumber())\r\n            setJailSeconds(data[2].toNumber())\r\n            setAttorneySeconds(data[3].toNumber())\r\n        });\r\n\r\n        setAttorneyPopup(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (attorneySeconds > 0) {\r\n            const timer = setTimeout(() => setAttorneySeconds(attorneySeconds - 1), 1000);\r\n            return () => clearTimeout(timer);\r\n        } else {\r\n            setAttorneyState(1);\r\n        }\r\n\r\n    }, [attorneySeconds]);\r\n\r\n    useEffect(() => {\r\n        if (jailSeconds > 0) {\r\n            const timer = setTimeout(() => setJailSeconds(jailSeconds - 1), 1000);\r\n            return () => clearTimeout(timer);\r\n        } else {\r\n            setJailState(1);\r\n        }\r\n    }, [jailSeconds]);\r\n\r\n    useEffect(() => {\r\n        if (attackSeconds > 0) {\r\n            const timer = setTimeout(() => setAttackSeconds(attackSeconds - 1), 1000);\r\n            return () => clearTimeout(timer);\r\n        } else {\r\n            setAttackSeconds(0);\r\n        }\r\n    }, [attackSeconds]);\r\n\r\n    useEffect(() => {\r\n        if (crimeSeconds > 0) {\r\n            const timer = setTimeout(() => setCrimeSeconds(crimeSeconds - 1), 1000);\r\n            return () => clearTimeout(timer);\r\n        } else {\r\n            setCrimeSeconds(0);\r\n        }\r\n    }, [crimeSeconds]);\r\n\r\n    useEffect(() => {\r\n        if (trainSeconds > 0) {\r\n            const timer = setTimeout(() => setTrainSeconds(trainSeconds - 1), 1000);\r\n            return () => clearTimeout(timer);\r\n        } else {\r\n            setTrainSeconds(0);\r\n        }\r\n    }, [trainSeconds]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (crowdfundSeconds > 0) {\r\n            const timer = setTimeout(() => setCrowdfundSeconds(crowdfundSeconds - 1), 1000);\r\n            return () => clearTimeout(timer);\r\n        } else if (crowdfundSeconds === 1) {\r\n            setCrowdfundClaimable(1); // its only 1 once, little bit of a cheat but works (0 fails on page reload)\r\n        } else {\r\n            setCrowdfundSeconds(0);\r\n        }\r\n    }, [crowdfundSeconds]);\r\n\r\n\r\n\r\n    const handleCrime = (success, loot, crimeStamp) => {\r\n        console.log(\"Got crime event\");\r\n        console.log(\"success: \", success);\r\n        setCrimeSeconds(300 + crimeStamp.toNumber() - Math.floor(+new Date().getTime() / 1000));\r\n        console.log(\"Set crime seconds by event: \", 300 + crimeStamp.toNumber() - Math.floor(+new Date().getTime() / 1000))\r\n        // if success 1 --> second index is payment. if success 2 --> second index is bonus fee\r\n        if (success === true) {\r\n            console.log(\"Crime succesful, loot: \", loot);\r\n            setLastCrimeLoot(loot); // pop up needs to know what to show\r\n            setCrimePopup(true); // trigger a popup \r\n        } else if (success === false) {\r\n            console.log(\"Crime unsuccesful, you're jailed\");\r\n            getJailStatus().then((data) => {\r\n                console.log(\"JailStatus is: \", data[0].toNumber());\r\n                console.log(\"AttorneyStatus is: \", data[1].toNumber());\r\n                setJailState(data[0].toNumber())\r\n                setAttorneyState(data[1].toNumber())\r\n                setJailSeconds(data[2].toNumber())\r\n                setAttorneySeconds(data[3].toNumber())\r\n                setCrimePopup(true); // trigger a popup \r\n            });\r\n        }\r\n        getingameFunds().then((data) => {\r\n            console.log(\"result is: \", data.toNumber());\r\n            setInGameFunds(data.toNumber());\r\n        });\r\n\r\n    }\r\n\r\n    const handleCrowdfund = (initiator, loot) => {\r\n        console.log(\"Got crime event\");\r\n        if (loot !== 0) {\r\n            console.log(\"Crowdfund loot: \", loot);\r\n            setLastCrowdfundLoot(loot); // pop up needs to know what to show\r\n            setCrowdfundPopup(true); // trigger a popup \r\n        } else {\r\n            console.log(\"Crowdfunding failed, you lost your investment\");\r\n            setCrowdfundPopup(true); // trigger a popup \r\n        }\r\n    }\r\n\r\n    const handlePlayerAttacked = (success, loot, attackStamp) => {\r\n        console.log(\"HandlePlayerattacked success value: \", success)\r\n        setAttackSeconds(100 + attackStamp.toNumber() - Math.floor(+new Date().getTime() / 1000));\r\n        console.log(\"Set attack seconds by event: \", 100 + attackStamp.toNumber() - Math.floor(+new Date().getTime() / 1000))\r\n        if (success === true) {\r\n            console.log(\"Total loot: \", loot.toNumber());\r\n            setLastAttackResult(true);\r\n            setLastAttackLoot(loot.toNumber())\r\n        } else if (success === false) {\r\n            console.log(\"Attack failed, total payment: \", loot.toNumber());\r\n            setJailState(0)\r\n            setLastAttackResult(false);\r\n            setLastAttackLoot(loot.toNumber())\r\n        }\r\n        getingameFunds().then((data) => {\r\n            console.log(\"result is: \", data.toNumber());\r\n            setInGameFunds(data.toNumber());\r\n        });\r\n        setAttackPopup(true)\r\n    }\r\n\r\n    // no timestamp necessary since transaction goes through directly, just do + 300 sec \r\n    const handleTrained = (choice, address, newXP) => {\r\n        setTrainSeconds(86400);\r\n    }\r\n\r\n    return (\r\n        <StateContext.Provider value={[balance, gangbalance, mmConnected, mainConnected, testConnected, adminConnected, inGameFunds]}>\r\n            <EthContext.Provider value={[defenseState, setDefenseState, attackState, setAttackState, jailState, setJailState, attorneyState, setAttorneyState, inGameFunds, setInGameFunds, jailSeconds, attorneySeconds, attackSeconds, crimeSeconds, trainSeconds, crowdfundSeconds, crowdfundClaimable, setCrowdfundSeconds, bootstrapUsed, protectionHours]}>\r\n\r\n                <Router basename='/'>\r\n\r\n                    <ScrollToTop />\r\n                    <StyledPopup open={crimePopup} position=\"center center\" modal closeOnDocumentClick>\r\n                        {() => (\r\n                            <>\r\n\r\n                                {lastCrimeLoot !== 0 ? <div>Crime Successful, loot: {<NumberFormat\r\n                                    value={lastCrimeLoot}\r\n                                    displayType={\"text\"}\r\n                                    decimalSeparator={\".\"}\r\n                                    thousandSeparator={true}\r\n                                    decimalScale={0} />}</div> : <div>Crime failed :(</div>}\r\n                                <Button onClick={() => setCrimePopup(false)}>\r\n                                    close\r\n                                </Button>\r\n                            </>\r\n                        )}\r\n                    </StyledPopup>\r\n                    <StyledPopup open={attackPopup} position=\"center center\" modal closeOnDocumentClick>\r\n                        {() => (\r\n                            <>\r\n\r\n                                {lastAttackResult === true ? <div>Attack Successful, loot: {<NumberFormat\r\n                                    value={lastAttackLoot}\r\n                                    displayType={\"text\"}\r\n                                    decimalSeparator={\".\"}\r\n                                    thousandSeparator={true}\r\n                                    decimalScale={0} />}</div> : <div>Attack failed, cost: {<NumberFormat\r\n                                        value={lastAttackLoot}\r\n                                        displayType={\"text\"}\r\n                                        decimalSeparator={\".\"}\r\n                                        thousandSeparator={true}\r\n                                        decimalScale={0} />}</div>}\r\n                                <Button onClick={() => setAttackPopup(false)}>\r\n                                    close\r\n                                </Button>\r\n                            </>\r\n                        )}\r\n                    </StyledPopup>\r\n\r\n                    <StyledPopup open={attorneyPopup} position=\"center center\" modal closeOnDocumentClick>\r\n                        {() => (\r\n                            <>\r\n\r\n                                {lastAttorneyResult === \"1\" ? <div>Attorney Successful, it cost you: {<NumberFormat\r\n                                    value={lastAttorneyFee}\r\n                                    displayType={\"text\"}\r\n                                    decimalSeparator={\".\"}\r\n                                    thousandSeparator={true}\r\n                                    decimalScale={0} />}</div> : (lastAttorneyResult === \"2\" ? <div>Attorney Successful, compensation: {<NumberFormat\r\n                                        value={lastAttorneyFee}\r\n                                        displayType={\"text\"}\r\n                                        decimalSeparator={\".\"}\r\n                                        thousandSeparator={true}\r\n                                        decimalScale={0} />}</div> : <div>Attorney unsuccessful, it cost you nothing.</div>)}\r\n                                <Button onClick={() => setAttorneyPopup(false)}>\r\n                                    close\r\n                                </Button>\r\n                            </>\r\n                        )}\r\n                    </StyledPopup>\r\n\r\n                    <StyledPopup open={crowdfundPopup} position=\"center center\" modal closeOnDocumentClick>\r\n                        {() => (\r\n                            <>\r\n\r\n                                {lastCrowdfundLoot !== 0 ? <div>Crowdfunding succesful, loot: {<NumberFormat\r\n                                    value={lastCrowdfundLoot}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    decimalScale={0} />}</div> : <div>Crowdfunding failed :(</div>}\r\n                                <Button onClick={() => setCrowdfundPopup(false)}>\r\n                                    close\r\n                                </Button>\r\n                            </>\r\n                        )}\r\n                    </StyledPopup>\r\n\r\n                    <Navbar />\r\n\r\n                    <Sidebar>\r\n                        <Gamebar />\r\n                    </Sidebar>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={Home} />\r\n                        <Route path=\"/helppage\" exact component={Helppage} />\r\n                        <Route path=\"/roadmap\" exact component={Roadmap} />\r\n                        <Route path=\"/contract\" exact component={Contract} />\r\n                        <Route path=\"/whitepaper\" exact component={Whitepaper} />\r\n                        <Route path=\"/tokenomics\" exact component={Tokenomics} />\r\n                        <Route path=\"/admin\" exact component={Admin} />\r\n                        <Route path=\"/deposit\" exact component={Deposit} />\r\n                        <Route path=\"/indprotection\" exact component={IndProtection} />\r\n                        <Route path=\"/attackplayer\" exact component={Attackplayer} />\r\n                        <Route path=\"/crime\" exact component={Crime} />\r\n                        <Route path=\"/crowdfunding\" exact component={Crowdfunding} />\r\n                        <Route path=\"/trainstats\" exact component={Trainstats} />\r\n                        <Route path=\"/familycontrol\" exact component={Familycontrol} />\r\n                        <Route path=\"/attackfamily\" exact component={Attackfamily} />\r\n                        <Route path=\"/overview\" exact component={Overview} />\r\n                        <Route path=\"/familyshop\" exact component={Familyshop} />\r\n                        <Route path=\"/statistics\" exact component={Statistics} />\r\n                        <Route path=\"/highestlevels\" exact component={Highestlevels} />\r\n                        <Route path=\"/richestplayers\" exact component={Richestplayers} />\r\n                    </Switch>\r\n                    <Footer />\r\n                </Router>\r\n            </EthContext.Provider>\r\n        </StateContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;","export default __webpack_public_path__ + \"static/media/videobackground.eae8403b.mp4\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport videobackground from './videobackground.mp4';\r\nimport { FontStyles } from \"./globalStyles\";\r\nimport styled from \"@emotion/styled/macro\";\r\n\r\nconst Video = styled.video`\r\n    position: fixed;\r\n    z-index: -2;\r\n@media (min-aspect-ratio: 16/9) {\r\n  Video {\r\n    height: 300%; top: -100%;\r\n    /* or height: 200%; top: -50%;\r\n       or height: 400%; top: -150%; */\r\n  }\r\n}\r\n@media (max-aspect-ratio: 16/9) {\r\n  Video {\r\n    width: 300%; left: -100%;\r\n    /* or width: 200%; left: -50%;\r\n       or width: 400%; left: -150%; */\r\n  }\r\n\r\n`;\r\n\r\nconst Overflow = styled.div`\r\n\r\n`;\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Video className='videoTag' autoPlay playsInline loop muted>\r\n      <source src={videobackground} type='video/mp4' />\r\n    </Video>\r\n    <FontStyles />\r\n    <App />\r\n    <Overflow />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}